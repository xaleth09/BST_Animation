{"version":3,"sources":["ssh-buffer.js"],"names":[],"mappings":"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","file":"ssh-buffer-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = SSHBuffer;\n\nvar assert = require('assert-plus');\n\nfunction SSHBuffer(opts) {\n\tassert.object(opts, 'options');\n\tif (opts.buffer !== undefined)\n\t\tassert.buffer(opts.buffer, 'options.buffer');\n\n\tthis._size = opts.buffer ? opts.buffer.length : 1024;\n\tthis._buffer = opts.buffer || (new Buffer(this._size));\n\tthis._offset = 0;\n}\n\nSSHBuffer.prototype.toBuffer = function () {\n\treturn (this._buffer.slice(0, this._offset));\n};\n\nSSHBuffer.prototype.atEnd = function () {\n\treturn (this._offset >= this._buffer.length);\n};\n\nSSHBuffer.prototype.remainder = function () {\n\treturn (this._buffer.slice(this._offset));\n};\n\nSSHBuffer.prototype.skip = function (n) {\n\tthis._offset += n;\n};\n\nSSHBuffer.prototype.expand = function () {\n\tthis._size *= 2;\n\tvar buf = new Buffer(this._size);\n\tthis._buffer.copy(buf, 0);\n\tthis._buffer = buf;\n};\n\nSSHBuffer.prototype.readPart = function () {\n\treturn ({data: this.readBuffer()});\n};\n\nSSHBuffer.prototype.readBuffer = function () {\n\tvar len = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\tassert.ok(this._offset + len <= this._buffer.length,\n\t    'length out of bounds at +0x' + this._offset.toString(16) +\n\t    ' (data truncated?)');\n\tvar buf = this._buffer.slice(this._offset, this._offset + len);\n\tthis._offset += len;\n\treturn (buf);\n};\n\nSSHBuffer.prototype.readString = function () {\n\treturn (this.readBuffer().toString());\n};\n\nSSHBuffer.prototype.readCString = function () {\n\tvar offset = this._offset;\n\twhile (offset < this._buffer.length &&\n\t    this._buffer[offset] !== 0x00)\n\t\toffset++;\n\tassert.ok(offset < this._buffer.length, 'c string does not terminate');\n\tvar str = this._buffer.slice(this._offset, offset).toString();\n\tthis._offset = offset + 1;\n\treturn (str);\n};\n\nSSHBuffer.prototype.readInt = function () {\n\tvar v = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\treturn (v);\n};\n\nSSHBuffer.prototype.readChar = function () {\n\tvar v = this._buffer[this._offset++];\n\treturn (v);\n};\n\nSSHBuffer.prototype.writeBuffer = function (buf) {\n\twhile (this._offset + 4 + buf.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(buf.length, this._offset);\n\tthis._offset += 4;\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n\nSSHBuffer.prototype.writeString = function (str) {\n\tthis.writeBuffer(new Buffer(str, 'utf8'));\n};\n\nSSHBuffer.prototype.writeCString = function (str) {\n\twhile (this._offset + 1 + str.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.write(str, this._offset);\n\tthis._offset += str.length;\n\tthis._buffer[this._offset++] = 0;\n};\n\nSSHBuffer.prototype.writeInt = function (v) {\n\twhile (this._offset + 4 > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(v, this._offset);\n\tthis._offset += 4;\n};\n\nSSHBuffer.prototype.writeChar = function (v) {\n\twhile (this._offset + 1 > this._size)\n\t\tthis.expand();\n\tthis._buffer[this._offset++] = v;\n};\n\nSSHBuffer.prototype.writePart = function (p) {\n\tthis.writeBuffer(p.data);\n};\n\nSSHBuffer.prototype.write = function (buf) {\n\twhile (this._offset + buf.length > this._size)\n\t\tthis.expand();\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n"]}