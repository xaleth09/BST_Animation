{"version":3,"sources":["curCSS.js"],"names":[],"mappings":"AAAA,OAAQ,CACP,SADO,EAEP,iBAFO,EAGP,eAHO,EAIP,iBAJO,EAKP,WALO,EAMP,a;AANO,CAAR,EAOG,UAAU,MAAV,EAAkB,SAAlB,EAA6B,OAA7B,EAAsC,SAAtC,EAAiD,OAAjD,EAA2D;;AAE9D,UAAS,MAAT,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,QAA7B,EAAwC;AACvC,MAAI,KAAJ;MAAW,QAAX;MAAqB,QAArB;MAA+B,GAA/B;MACC,QAAQ,KAAK,KADd;;AAGA,aAAW,YAAY,UAAW,IAAX,CAAvB;AACA,QAAM,WAAW,SAAS,gBAAT,CAA2B,IAA3B,KAAqC,SAAU,IAAV,CAAhD,GAAmE,SAAzE;;;;;AAKA,MAAK,CAAE,QAAQ,EAAR,IAAc,QAAQ,SAAxB,KAAuC,CAAC,OAAO,QAAP,CAAiB,KAAK,aAAtB,EAAqC,IAArC,CAA7C,EAA2F;AAC1F,SAAM,OAAO,KAAP,CAAc,IAAd,EAAoB,IAApB,CAAN;AACA;;;;AAID,MAAK,QAAL,EAAgB;;;;;;;AAOf,OAAK,CAAC,QAAQ,gBAAR,EAAD,IAA+B,UAAU,IAAV,CAAgB,GAAhB,CAA/B,IAAwD,QAAQ,IAAR,CAAc,IAAd,CAA7D,EAAoF;;;AAGnF,YAAQ,MAAM,KAAd;AACA,eAAW,MAAM,QAAjB;AACA,eAAW,MAAM,QAAjB;;;AAGA,UAAM,QAAN,GAAiB,MAAM,QAAN,GAAiB,MAAM,KAAN,GAAc,GAAhD;AACA,UAAM,SAAS,KAAf;;;AAGA,UAAM,KAAN,GAAc,KAAd;AACA,UAAM,QAAN,GAAiB,QAAjB;AACA,UAAM,QAAN,GAAiB,QAAjB;AACA;AACD;;AAED,SAAO,QAAQ,SAAR;;;;AAIN,QAAM,EAJA,GAKN,GALD;AAMA;;AAED,QAAO,MAAP;AACC,CA3DD","file":"curCSS-compiled.js","sourcesContent":["define( [\r\n\t\"../core\",\r\n\t\"./var/rnumnonpx\",\r\n\t\"./var/rmargin\",\r\n\t\"./var/getStyles\",\r\n\t\"./support\",\r\n\t\"../selector\" // Get jQuery.contains\r\n], function( jQuery, rnumnonpx, rmargin, getStyles, support ) {\r\n\r\nfunction curCSS( elem, name, computed ) {\r\n\tvar width, minWidth, maxWidth, ret,\r\n\t\tstyle = elem.style;\r\n\r\n\tcomputed = computed || getStyles( elem );\r\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\r\n\r\n\t// Support: Opera 12.1x only\r\n\t// Fall back to style even without computed\r\n\t// computed is undefined for elems on document fragments\r\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n\t\tret = jQuery.style( elem, name );\r\n\t}\r\n\r\n\t// Support: IE9\r\n\t// getPropertyValue is only needed for .css('filter') (#12537)\r\n\tif ( computed ) {\r\n\r\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\r\n\t\t// Android Browser returns percentage for some values,\r\n\t\t// but width seems to be reliably pixels.\r\n\t\t// This is against the CSSOM draft spec:\r\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\r\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\r\n\r\n\t\t\t// Remember the original values\r\n\t\t\twidth = style.width;\r\n\t\t\tminWidth = style.minWidth;\r\n\t\t\tmaxWidth = style.maxWidth;\r\n\r\n\t\t\t// Put in the new values to get a computed value out\r\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\r\n\t\t\tret = computed.width;\r\n\r\n\t\t\t// Revert the changed values\r\n\t\t\tstyle.width = width;\r\n\t\t\tstyle.minWidth = minWidth;\r\n\t\t\tstyle.maxWidth = maxWidth;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret !== undefined ?\r\n\r\n\t\t// Support: IE9-11+\r\n\t\t// IE returns zIndex value as an integer.\r\n\t\tret + \"\" :\r\n\t\tret;\r\n}\r\n\r\nreturn curCSS;\r\n} );\r\n"]}