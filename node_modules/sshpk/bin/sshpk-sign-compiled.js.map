{"version":3,"sources":["sshpk-sign"],"names":[],"mappings":"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","file":"sshpk-sign-compiled.js","sourcesContent":["#!/usr/bin/env node\n// -*- mode: js -*-\n// vim: set filetype=javascript :\n// Copyright 2015 Joyent, Inc.  All rights reserved.\n\nvar dashdash = require('dashdash');\nvar sshpk = require('../lib/index');\nvar fs = require('fs');\nvar path = require('path');\nvar getPassword = require('getpass').getPass;\n\nvar options = [\n\t{\n\t\tnames: ['hash', 'H'],\n\t\ttype: 'string',\n\t\thelp: 'Hash algorithm (sha1, sha256, sha384, sha512)'\n\t},\n\t{\n\t\tnames: ['verbose', 'v'],\n\t\ttype: 'bool',\n\t\thelp: 'Display verbose info about key and hash used'\n\t},\n\t{\n\t\tnames: ['identity', 'i'],\n\t\ttype: 'string',\n\t\thelp: 'Path to key to use'\n\t},\n\t{\n\t\tnames: ['file', 'f'],\n\t\ttype: 'string',\n\t\thelp: 'Input filename'\n\t},\n\t{\n\t\tnames: ['out', 'o'],\n\t\ttype: 'string',\n\t\thelp: 'Output filename'\n\t},\n\t{\n\t\tnames: ['format', 't'],\n\t\ttype: 'string',\n\t\thelp: 'Signature format (asn1, ssh, raw)'\n\t},\n\t{\n\t\tnames: ['binary', 'b'],\n\t\ttype: 'bool',\n\t\thelp: 'Output raw binary instead of base64'\n\t},\n\t{\n\t\tnames: ['help', 'h'],\n\t\ttype: 'bool',\n\t\thelp: 'Shows this help text'\n\t}\n];\n\nvar parseOpts = {};\n\nif (require.main === module) {\n\tvar parser = dashdash.createParser({\n\t\toptions: options\n\t});\n\n\ttry {\n\t\tvar opts = parser.parse(process.argv);\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error: %s', e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tif (opts.help || opts._args.length > 1) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-sign: sign data using an SSH key\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(1);\n\t}\n\n\tif (!opts.identity) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-sign: the -i or --identity option ' +\n\t\t    'is required\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(1);\n\t}\n\n\tvar keyData = fs.readFileSync(opts.identity);\n\tparseOpts.filename = opts.identity;\n\n\trun();\n}\n\nfunction run() {\n\tvar key;\n\ttry {\n\t\tkey = sshpk.parsePrivateKey(keyData, 'auto', parseOpts);\n\t} catch (e) {\n\t\tif (e.name === 'KeyEncryptedError') {\n\t\t\tgetPassword(function (err, pw) {\n\t\t\t\tparseOpts.passphrase = pw;\n\t\t\t\trun();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconsole.error('sshpk-sign: error loading private key \"' +\n\t\t    opts.identity + '\": ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar hash = opts.hash || key.defaultHashAlgorithm();\n\n\tvar signer;\n\ttry {\n\t\tsigner = key.createSign(hash);\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error creating signer: ' +\n\t\t    e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tif (opts.verbose) {\n\t\tconsole.error('sshpk-sign: using %s-%s with a %d bit key',\n\t\t    key.type, hash, key.size);\n\t}\n\n\tvar inFile = process.stdin;\n\tvar inFileName = 'stdin';\n\n\tvar inFilePath;\n\tif (opts.file) {\n\t\tinFilePath = opts.file;\n\t} else if (opts._args.length === 1) {\n\t\tinFilePath = opts._args[0];\n\t}\n\n\tif (inFilePath)\n\t\tinFileName = path.basename(inFilePath);\n\n\ttry {\n\t\tif (inFilePath) {\n\t\t\tfs.accessSync(inFilePath, fs.R_OK);\n\t\t\tinFile = fs.createReadStream(inFilePath);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error opening input file' +\n\t\t     ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar outFile = process.stdout;\n\n\ttry {\n\t\tif (opts.out && !opts.identify) {\n\t\t\tfs.accessSync(path.dirname(opts.out), fs.W_OK);\n\t\t\toutFile = fs.createWriteStream(opts.out);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error opening output file' +\n\t\t    ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tinFile.pipe(signer);\n\tinFile.on('end', function () {\n\t\tvar sig;\n\t\ttry {\n\t\t\tsig = signer.sign();\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-sign: error signing data: ' +\n\t\t\t    e.name + ': ' + e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar fmt = opts.format || 'asn1';\n\t\tvar output;\n\t\ttry {\n\t\t\toutput = sig.toBuffer(fmt);\n\t\t\tif (!opts.binary)\n\t\t\t\toutput = output.toString('base64');\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-sign: error converting signature' +\n\t\t\t    ' to ' + fmt + ' format: ' + e.name + ': ' +\n\t\t\t    e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\toutFile.write(output);\n\t\tif (!opts.binary)\n\t\t\toutFile.write('\\n');\n\t\toutFile.once('drain', function () {\n\t\t\tprocess.exit(0);\n\t\t});\n\t});\n}\n"]}