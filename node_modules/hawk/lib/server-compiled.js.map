{"version":3,"sources":["server.js"],"names":[],"mappings":";;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,YAAY,QAAQ,WAAR,CAAhB;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;;;;AAKA,IAAI,YAAY,EAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA,QAAQ,YAAR,GAAuB,UAAU,GAAV,EAAe,eAAf,EAAgC,OAAhC,EAAyC,QAAzC,EAAmD;;AAEtE,eAAW,KAAK,QAAL,CAAc,QAAd,CAAX;;;;AAIA,YAAQ,SAAR,GAAoB,QAAQ,SAAR,IAAqB,UAAU,SAAnD;AACA,YAAQ,gBAAR,GAA2B,QAAQ,gBAAR,IAA4B,EAAvD,C;;;;AAIA,QAAI,MAAM,MAAM,GAAN,CAAU,QAAQ,mBAAlB,CAAV,C;;;;AAIA,QAAI,UAAU,MAAM,YAAN,CAAmB,GAAnB,EAAwB,OAAxB,CAAd;AACA,QAAI,mBAAmB,KAAvB,EAA8B;AAC1B,eAAO,SAAS,KAAK,UAAL,CAAgB,QAAQ,OAAxB,CAAT,CAAP;AACH;;;;AAID,QAAI,aAAa,MAAM,wBAAN,CAA+B,QAAQ,aAAvC,CAAjB;AACA,QAAI,sBAAsB,KAA1B,EAAiC;AAC7B,eAAO,SAAS,UAAT,CAAP;AACH;;;;AAID,QAAI,YAAY;AACZ,gBAAQ,QAAQ,MADJ;AAEZ,cAAM,QAAQ,IAFF;AAGZ,cAAM,QAAQ,IAHF;AAIZ,kBAAU,QAAQ,GAJN;AAKZ,YAAI,WAAW,EALH;AAMZ,eAAO,WAAW,KANN;AAOZ,cAAM,WAAW,IAPL;AAQZ,aAAK,WAAW,GARJ;AASZ,aAAK,WAAW,GATJ;AAUZ,aAAK,WAAW,GAVJ;AAWZ,aAAK,WAAW,GAXJ;AAYZ,YAAI,WAAW;AAZH,KAAhB;;;;AAiBA,QAAI,CAAC,WAAW,EAAZ,IACA,CAAC,WAAW,EADZ,IAEA,CAAC,WAAW,KAFZ,IAGA,CAAC,WAAW,GAHhB,EAGqB;;AAEjB,eAAO,SAAS,KAAK,UAAL,CAAgB,oBAAhB,CAAT,EAAgD,IAAhD,EAAsD,SAAtD,CAAP;AACH;;;;AAID,oBAAgB,WAAW,EAA3B,EAA+B,UAAU,GAAV,EAAe,WAAf,EAA4B;;AAEvD,YAAI,GAAJ,EAAS;AACL,mBAAO,SAAS,GAAT,EAAc,eAAe,IAA7B,EAAmC,SAAnC,CAAP;AACH;;AAED,YAAI,CAAC,WAAL,EAAkB;AACd,mBAAO,SAAS,KAAK,YAAL,CAAkB,qBAAlB,EAAyC,MAAzC,CAAT,EAA2D,IAA3D,EAAiE,SAAjE,CAAP;AACH;;AAED,YAAI,CAAC,YAAY,GAAb,IACA,CAAC,YAAY,SADjB,EAC4B;;AAExB,mBAAO,SAAS,KAAK,QAAL,CAAc,qBAAd,CAAT,EAA+C,WAA/C,EAA4D,SAA5D,CAAP;AACH;;AAED,YAAI,OAAO,UAAP,CAAkB,OAAlB,CAA0B,YAAY,SAAtC,MAAqD,CAAC,CAA1D,EAA6D;AACzD,mBAAO,SAAS,KAAK,QAAL,CAAc,mBAAd,CAAT,EAA6C,WAA7C,EAA0D,SAA1D,CAAP;AACH;;;;AAID,YAAI,MAAM,OAAO,YAAP,CAAoB,QAApB,EAA8B,WAA9B,EAA2C,SAA3C,CAAV;AACA,YAAI,CAAC,UAAU,mBAAV,CAA8B,GAA9B,EAAmC,WAAW,GAA9C,CAAL,EAAyD;AACrD,mBAAO,SAAS,KAAK,YAAL,CAAkB,SAAlB,EAA6B,MAA7B,CAAT,EAA+C,WAA/C,EAA4D,SAA5D,CAAP;AACH;;;;AAID,YAAI,QAAQ,OAAR,IACA,QAAQ,OAAR,KAAoB,EADxB,EAC4B;;AAExB,gBAAI,CAAC,WAAW,IAAhB,EAAsB;AAClB,uBAAO,SAAS,KAAK,YAAL,CAAkB,+BAAlB,EAAmD,MAAnD,CAAT,EAAqE,WAArE,EAAkF,SAAlF,CAAP;AACH;;AAED,gBAAI,OAAO,OAAO,oBAAP,CAA4B,QAAQ,OAApC,EAA6C,YAAY,SAAzD,EAAoE,QAAQ,WAA5E,CAAX;AACA,gBAAI,CAAC,UAAU,mBAAV,CAA8B,IAA9B,EAAoC,WAAW,IAA/C,CAAL,EAA2D;AACvD,uBAAO,SAAS,KAAK,YAAL,CAAkB,kBAAlB,EAAsC,MAAtC,CAAT,EAAwD,WAAxD,EAAqE,SAArE,CAAP;AACH;AACJ;;;;AAID,gBAAQ,SAAR,CAAkB,YAAY,GAA9B,EAAmC,WAAW,KAA9C,EAAqD,WAAW,EAAhE,EAAoE,UAAU,GAAV,EAAe;;AAE/E,gBAAI,GAAJ,EAAS;AACL,uBAAO,SAAS,KAAK,YAAL,CAAkB,eAAlB,EAAmC,MAAnC,CAAT,EAAqD,WAArD,EAAkE,SAAlE,CAAP;AACH;;;;AAID,gBAAI,KAAK,GAAL,CAAU,WAAW,EAAX,GAAgB,IAAjB,GAAyB,GAAlC,IAA0C,QAAQ,gBAAR,GAA2B,IAAzE,EAAgF;AAC5E,oBAAI,MAAM,OAAO,gBAAP,CAAwB,WAAxB,EAAqC,QAAQ,mBAA7C,CAAV;AACA,uBAAO,SAAS,KAAK,YAAL,CAAkB,iBAAlB,EAAqC,MAArC,EAA6C,GAA7C,CAAT,EAA4D,WAA5D,EAAyE,SAAzE,CAAP;AACH;;;;AAID,mBAAO,SAAS,IAAT,EAAe,WAAf,EAA4B,SAA5B,CAAP;AACH,SAhBD;AAiBH,KA7DD;AA8DH,CAtHD;;;;;;;;;;;AAkIA,QAAQ,mBAAR,GAA8B,UAAU,OAAV,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,WAA3C,EAAwD;;AAElF,QAAI,iBAAiB,OAAO,oBAAP,CAA4B,OAA5B,EAAqC,YAAY,SAAjD,EAA4D,WAA5D,CAArB;AACA,WAAO,UAAU,mBAAV,CAA8B,cAA9B,EAA8C,UAAU,IAAxD,CAAP;AACH,CAJD;;;;;;;;;AAcA,QAAQ,uBAAR,GAAkC,UAAU,cAAV,EAA0B,SAA1B,EAAqC;;AAEnE,WAAO,UAAU,mBAAV,CAA8B,cAA9B,EAA8C,UAAU,IAAxD,CAAP;AACH,CAHD;;;;;;;;;;;;;;;AAmBA,QAAQ,MAAR,GAAiB,UAAU,WAAV,EAAuB,SAAvB,EAAkC,OAAlC,EAA2C;;;;AAIxD,cAAU,WAAW,EAArB;;AAEA,QAAI,CAAC,SAAD,IACA,OAAO,SAAP,KAAqB,QADrB,IAEA,OAAO,OAAP,KAAmB,QAFvB,EAEiC;;AAE7B,eAAO,EAAP;AACH;;AAED,gBAAY,KAAK,KAAL,CAAW,SAAX,CAAZ;AACA,WAAO,UAAU,GAAjB;AACA,cAAU,IAAV,GAAiB,QAAQ,IAAzB;AACA,cAAU,GAAV,GAAgB,QAAQ,GAAxB;;;;AAIA,QAAI,CAAC,WAAD,IACA,CAAC,YAAY,GADb,IAEA,CAAC,YAAY,SAFjB,EAE4B;;;AAGxB,eAAO,EAAP;AACH;;AAED,QAAI,OAAO,UAAP,CAAkB,OAAlB,CAA0B,YAAY,SAAtC,MAAqD,CAAC,CAA1D,EAA6D;AACzD,eAAO,EAAP;AACH;;;;AAID,QAAI,CAAC,UAAU,IAAX,KACC,QAAQ,OAAR,IAAmB,QAAQ,OAAR,KAAoB,EADxC,CAAJ,EACiD;;AAE7C,kBAAU,IAAV,GAAiB,OAAO,oBAAP,CAA4B,QAAQ,OAApC,EAA6C,YAAY,SAAzD,EAAoE,QAAQ,WAA5E,CAAjB;AACH;;AAED,QAAI,MAAM,OAAO,YAAP,CAAoB,UAApB,EAAgC,WAAhC,EAA6C,SAA7C,CAAV;;;;AAIA,QAAI,SAAS,eAAe,GAAf,GAAqB,GAArB,IACC,UAAU,IAAV,GAAiB,aAAa,UAAU,IAAvB,GAA8B,GAA/C,GAAqD,EADtD,CAAb;;AAGA,QAAI,UAAU,GAAV,KAAkB,IAAlB,IACA,UAAU,GAAV,KAAkB,SADlB,IAEA,UAAU,GAAV,KAAkB,EAFtB,EAE0B;;;AAEtB,kBAAU,YAAY,KAAK,qBAAL,CAA2B,UAAU,GAArC,CAAZ,GAAwD,GAAlE;AACH;;AAED,WAAO,MAAP;AACH,CAvDD;;;;;;;;AAiEA,UAAU,UAAV,GAAuB,0CAAvB;;AAGA,QAAQ,iBAAR,GAA4B,UAAU,GAAV,EAAe,eAAf,EAAgC,OAAhC,EAAyC,QAAzC,EAAmD;;AAE3E,eAAW,KAAK,QAAL,CAAc,QAAd,CAAX;;;;AAIA,QAAI,MAAM,MAAM,GAAN,CAAU,QAAQ,mBAAlB,CAAV;;;;AAIA,QAAI,UAAU,MAAM,YAAN,CAAmB,GAAnB,EAAwB,OAAxB,CAAd;AACA,QAAI,mBAAmB,KAAvB,EAA8B;AAC1B,eAAO,SAAS,KAAK,UAAL,CAAgB,QAAQ,OAAxB,CAAT,CAAP;AACH;;;;AAID,QAAI,QAAQ,GAAR,CAAY,MAAZ,GAAqB,MAAM,MAAN,CAAa,cAAtC,EAAsD;AAClD,eAAO,SAAS,KAAK,UAAL,CAAgB,kCAAhB,CAAT,CAAP;AACH;;AAED,QAAI,WAAW,QAAQ,GAAR,CAAY,KAAZ,CAAkB,UAAU,UAA5B,CAAf;AACA,QAAI,CAAC,QAAL,EAAe;AACX,eAAO,SAAS,KAAK,YAAL,CAAkB,IAAlB,EAAwB,MAAxB,CAAT,CAAP;AACH;;;;AAID,QAAI,CAAC,SAAS,CAAT,CAAL,EAAkB;AACd,eAAO,SAAS,KAAK,YAAL,CAAkB,aAAlB,EAAiC,MAAjC,CAAT,CAAP;AACH;;;;AAID,QAAI,QAAQ,MAAR,KAAmB,KAAnB,IACA,QAAQ,MAAR,KAAmB,MADvB,EAC+B;;AAE3B,eAAO,SAAS,KAAK,YAAL,CAAkB,gBAAlB,EAAoC,MAApC,CAAT,CAAP;AACH;;;;AAID,QAAI,QAAQ,aAAZ,EAA2B;AACvB,eAAO,SAAS,KAAK,UAAL,CAAgB,0BAAhB,CAAT,CAAP;AACH;;;;AAID,QAAI,cAAc,KAAK,eAAL,CAAqB,SAAS,CAAT,CAArB,CAAlB;AACA,QAAI,uBAAuB,KAA3B,EAAkC;AAC9B,eAAO,SAAS,KAAK,UAAL,CAAgB,wBAAhB,CAAT,CAAP;AACH;;;;AAID,QAAI,aAAa,YAAY,KAAZ,CAAkB,IAAlB,CAAjB;AACA,QAAI,WAAW,MAAX,KAAsB,CAA1B,EAA6B;AACzB,eAAO,SAAS,KAAK,UAAL,CAAgB,yBAAhB,CAAT,CAAP;AACH;;AAED,QAAI,QAAQ;AACR,YAAI,WAAW,CAAX,CADI;AAER,aAAK,SAAS,WAAW,CAAX,CAAT,EAAwB,EAAxB,CAFG;AAGR,aAAK,WAAW,CAAX,CAHG;AAIR,aAAK,WAAW,CAAX,KAAiB;AAJd,KAAZ;;AAOA,QAAI,CAAC,MAAM,EAAP,IACA,CAAC,MAAM,GADP,IAEA,CAAC,MAAM,GAFX,EAEgB;;AAEZ,eAAO,SAAS,KAAK,UAAL,CAAgB,0BAAhB,CAAT,CAAP;AACH;;;;AAID,QAAI,MAAM,SAAS,CAAT,CAAV;AACA,QAAI,SAAS,CAAT,CAAJ,EAAiB;AACb,eAAO,SAAS,CAAT,IAAc,SAAS,CAAT,CAArB;AACH;;;;AAID,QAAI,MAAM,GAAN,GAAY,IAAZ,IAAoB,GAAxB,EAA6B;AACzB,eAAO,SAAS,KAAK,YAAL,CAAkB,gBAAlB,EAAoC,MAApC,CAAT,EAAsD,IAAtD,EAA4D,KAA5D,CAAP;AACH;;;;AAID,oBAAgB,MAAM,EAAtB,EAA0B,UAAU,GAAV,EAAe,WAAf,EAA4B;;AAElD,YAAI,GAAJ,EAAS;AACL,mBAAO,SAAS,GAAT,EAAc,eAAe,IAA7B,EAAmC,MAAM,GAAzC,CAAP;AACH;;AAED,YAAI,CAAC,WAAL,EAAkB;AACd,mBAAO,SAAS,KAAK,YAAL,CAAkB,qBAAlB,EAAyC,MAAzC,CAAT,EAA2D,IAA3D,EAAiE,KAAjE,CAAP;AACH;;AAED,YAAI,CAAC,YAAY,GAAb,IACA,CAAC,YAAY,SADjB,EAC4B;;AAExB,mBAAO,SAAS,KAAK,QAAL,CAAc,qBAAd,CAAT,EAA+C,WAA/C,EAA4D,KAA5D,CAAP;AACH;;AAED,YAAI,OAAO,UAAP,CAAkB,OAAlB,CAA0B,YAAY,SAAtC,MAAqD,CAAC,CAA1D,EAA6D;AACzD,mBAAO,SAAS,KAAK,QAAL,CAAc,mBAAd,CAAT,EAA6C,WAA7C,EAA0D,KAA1D,CAAP;AACH;;;;AAID,YAAI,MAAM,OAAO,YAAP,CAAoB,OAApB,EAA6B,WAA7B,EAA0C;AAChD,gBAAI,MAAM,GADsC;AAEhD,mBAAO,EAFyC;AAGhD,oBAAQ,KAHwC;AAIhD,sBAAU,GAJsC;AAKhD,kBAAM,QAAQ,IALkC;AAMhD,kBAAM,QAAQ,IANkC;AAOhD,iBAAK,MAAM;AAPqC,SAA1C,CAAV;;AAUA,YAAI,CAAC,UAAU,mBAAV,CAA8B,GAA9B,EAAmC,MAAM,GAAzC,CAAL,EAAoD;AAChD,mBAAO,SAAS,KAAK,YAAL,CAAkB,SAAlB,EAA6B,MAA7B,CAAT,EAA+C,WAA/C,EAA4D,KAA5D,CAAP;AACH;;;;AAID,eAAO,SAAS,IAAT,EAAe,WAAf,EAA4B,KAA5B,CAAP;AACH,KAvCD;AAwCH,CAjID;;;;;;;AAyIA,QAAQ,mBAAR,GAA8B,UAAU,IAAV,EAAgB,IAAhB,EAAsB,OAAtB,EAA+B,aAA/B,EAA8C,eAA9C,EAA+D,OAA/D,EAAwE,QAAxE,EAAkF;;AAE5G,eAAW,KAAK,QAAL,CAAc,QAAd,CAAX;;;;AAIA,YAAQ,SAAR,GAAoB,QAAQ,SAAR,IAAqB,UAAU,SAAnD;AACA,YAAQ,gBAAR,GAA2B,QAAQ,gBAAR,IAA4B,EAAvD,C;;;;AAIA,QAAI,MAAM,MAAM,GAAN,CAAU,QAAQ,mBAAlB,CAAV,C;;;;AAIA,QAAI,CAAC,cAAc,EAAf,IACA,CAAC,cAAc,EADf,IAEA,CAAC,cAAc,KAFf,IAGA,CAAC,cAAc,IAHf,IAIA,CAAC,cAAc,GAJnB,EAIwB;;AAEpB,eAAO,SAAS,KAAK,UAAL,CAAgB,uBAAhB,CAAT,CAAP;AACH;;;;AAID,oBAAgB,cAAc,EAA9B,EAAkC,UAAU,GAAV,EAAe,WAAf,EAA4B;;AAE1D,YAAI,GAAJ,EAAS;AACL,mBAAO,SAAS,GAAT,EAAc,eAAe,IAA7B,CAAP;AACH;;AAED,YAAI,CAAC,WAAL,EAAkB;AACd,mBAAO,SAAS,KAAK,YAAL,CAAkB,qBAAlB,EAAyC,MAAzC,CAAT,CAAP;AACH;;AAED,YAAI,CAAC,YAAY,GAAb,IACA,CAAC,YAAY,SADjB,EAC4B;;AAExB,mBAAO,SAAS,KAAK,QAAL,CAAc,qBAAd,CAAT,EAA+C,WAA/C,CAAP;AACH;;AAED,YAAI,OAAO,UAAP,CAAkB,OAAlB,CAA0B,YAAY,SAAtC,MAAqD,CAAC,CAA1D,EAA6D;AACzD,mBAAO,SAAS,KAAK,QAAL,CAAc,mBAAd,CAAT,EAA6C,WAA7C,CAAP;AACH;;;;AAID,YAAI,YAAY;AACZ,gBAAI,cAAc,EADN;AAEZ,mBAAO,cAAc,KAFT;AAGZ,kBAAM,IAHM;AAIZ,kBAAM,IAJM;AAKZ,kBAAM,cAAc;AALR,SAAhB;;;;AAUA,YAAI,MAAM,OAAO,YAAP,CAAoB,SAApB,EAA+B,WAA/B,EAA4C,SAA5C,CAAV;AACA,YAAI,CAAC,UAAU,mBAAV,CAA8B,GAA9B,EAAmC,cAAc,GAAjD,CAAL,EAA4D;AACxD,mBAAO,SAAS,KAAK,YAAL,CAAkB,SAAlB,EAA6B,MAA7B,CAAT,EAA+C,WAA/C,CAAP;AACH;;;;AAID,YAAI,OAAO,OAAO,oBAAP,CAA4B,OAA5B,EAAqC,YAAY,SAAjD,CAAX;AACA,YAAI,CAAC,UAAU,mBAAV,CAA8B,IAA9B,EAAoC,cAAc,IAAlD,CAAL,EAA8D;AAC1D,mBAAO,SAAS,KAAK,YAAL,CAAkB,kBAAlB,EAAsC,MAAtC,CAAT,EAAwD,WAAxD,CAAP;AACH;;;;AAID,gBAAQ,SAAR,CAAkB,YAAY,GAA9B,EAAmC,cAAc,KAAjD,EAAwD,cAAc,EAAtE,EAA0E,UAAU,GAAV,EAAe;;AAErF,gBAAI,GAAJ,EAAS;AACL,uBAAO,SAAS,KAAK,YAAL,CAAkB,eAAlB,EAAmC,MAAnC,CAAT,EAAqD,WAArD,CAAP;AACH;;;;AAID,gBAAI,KAAK,GAAL,CAAU,cAAc,EAAd,GAAmB,IAApB,GAA4B,GAArC,IAA6C,QAAQ,gBAAR,GAA2B,IAA5E,EAAmF;AAC/E,uBAAO,SAAS,KAAK,YAAL,CAAkB,iBAAlB,CAAT,EAA+C,WAA/C,CAAP;AACH;;;;AAID,mBAAO,SAAS,IAAT,EAAe,WAAf,CAAP;AACH,SAfD;AAgBH,KA9DD;AA+DH,CAzFD;;AA4FA,UAAU,SAAV,GAAsB,UAAU,GAAV,EAAe,KAAf,EAAsB,EAAtB,EAA0B,aAA1B,EAAyC;;AAE3D,WAAO,eAAP,C;AACH,CAHD","file":"server-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Boom = require('boom');\r\nvar Hoek = require('hoek');\r\nvar Cryptiles = require('cryptiles');\r\nvar Crypto = require('./crypto');\r\nvar Utils = require('./utils');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Hawk authentication\r\n\r\n/*\r\n   req:                 node's HTTP request object or an object as follows:\r\n\r\n                        var request = {\r\n                            method: 'GET',\r\n                            url: '/resource/4?a=1&b=2',\r\n                            host: 'example.com',\r\n                            port: 8080,\r\n                            authorization: 'Hawk id=\"dh37fgj492je\", ts=\"1353832234\", nonce=\"j4h3g2\", ext=\"some-app-ext-data\", mac=\"6R4rV5iE+NPoym+WwjeHzjAGXUtLNIxmo1vpMofpLAE=\"'\r\n                        };\r\n\r\n   credentialsFunc:     required function to lookup the set of Hawk credentials based on the provided credentials id.\r\n                        The credentials include the MAC key, MAC algorithm, and other attributes (such as username)\r\n                        needed by the application. This function is the equivalent of verifying the username and\r\n                        password in Basic authentication.\r\n\r\n                        var credentialsFunc = function (id, callback) {\r\n\r\n                            // Lookup credentials in database\r\n                            db.lookup(id, function (err, item) {\r\n\r\n                                if (err || !item) {\r\n                                    return callback(err);\r\n                                }\r\n\r\n                                var credentials = {\r\n                                    // Required\r\n                                    key: item.key,\r\n                                    algorithm: item.algorithm,\r\n                                    // Application specific\r\n                                    user: item.user\r\n                                };\r\n\r\n                                return callback(null, credentials);\r\n                            });\r\n                        };\r\n\r\n   options: {\r\n\r\n        hostHeaderName:        optional header field name, used to override the default 'Host' header when used\r\n                               behind a cache of a proxy. Apache2 changes the value of the 'Host' header while preserving\r\n                               the original (which is what the module must verify) in the 'x-forwarded-host' header field.\r\n                               Only used when passed a node Http.ServerRequest object.\r\n\r\n        nonceFunc:             optional nonce validation function. The function signature is function(key, nonce, ts, callback)\r\n                               where 'callback' must be called using the signature function(err).\r\n\r\n        timestampSkewSec:      optional number of seconds of permitted clock skew for incoming timestamps. Defaults to 60 seconds.\r\n                               Provides a +/- skew which means actual allowed window is double the number of seconds.\r\n\r\n        localtimeOffsetMsec:   optional local clock time offset express in a number of milliseconds (positive or negative).\r\n                               Defaults to 0.\r\n\r\n        payload:               optional payload for validation. The client calculates the hash value and includes it via the 'hash'\r\n                               header attribute. The server always ensures the value provided has been included in the request\r\n                               MAC. When this option is provided, it validates the hash value itself. Validation is done by calculating\r\n                               a hash value over the entire payload (assuming it has already be normalized to the same format and\r\n                               encoding used by the client to calculate the hash on request). If the payload is not available at the time\r\n                               of authentication, the authenticatePayload() method can be used by passing it the credentials and\r\n                               attributes.hash returned in the authenticate callback.\r\n\r\n        host:                  optional host name override. Only used when passed a node request object.\r\n        port:                  optional port override. Only used when passed a node request object.\r\n    }\r\n\r\n    callback: function (err, credentials, artifacts) { }\r\n */\r\n\r\nexports.authenticate = function (req, credentialsFunc, options, callback) {\r\n\r\n    callback = Hoek.nextTick(callback);\r\n\r\n    // Default options\r\n\r\n    options.nonceFunc = options.nonceFunc || internals.nonceFunc;\r\n    options.timestampSkewSec = options.timestampSkewSec || 60;                                                  // 60 seconds\r\n\r\n    // Application time\r\n\r\n    var now = Utils.now(options.localtimeOffsetMsec);                           // Measure now before any other processing\r\n\r\n    // Convert node Http request object to a request configuration object\r\n\r\n    var request = Utils.parseRequest(req, options);\r\n    if (request instanceof Error) {\r\n        return callback(Boom.badRequest(request.message));\r\n    }\r\n\r\n    // Parse HTTP Authorization header\r\n\r\n    var attributes = Utils.parseAuthorizationHeader(request.authorization);\r\n    if (attributes instanceof Error) {\r\n        return callback(attributes);\r\n    }\r\n\r\n    // Construct artifacts container\r\n\r\n    var artifacts = {\r\n        method: request.method,\r\n        host: request.host,\r\n        port: request.port,\r\n        resource: request.url,\r\n        ts: attributes.ts,\r\n        nonce: attributes.nonce,\r\n        hash: attributes.hash,\r\n        ext: attributes.ext,\r\n        app: attributes.app,\r\n        dlg: attributes.dlg,\r\n        mac: attributes.mac,\r\n        id: attributes.id\r\n    };\r\n\r\n    // Verify required header attributes\r\n\r\n    if (!attributes.id ||\r\n        !attributes.ts ||\r\n        !attributes.nonce ||\r\n        !attributes.mac) {\r\n\r\n        return callback(Boom.badRequest('Missing attributes'), null, artifacts);\r\n    }\r\n\r\n    // Fetch Hawk credentials\r\n\r\n    credentialsFunc(attributes.id, function (err, credentials) {\r\n\r\n        if (err) {\r\n            return callback(err, credentials || null, artifacts);\r\n        }\r\n\r\n        if (!credentials) {\r\n            return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, artifacts);\r\n        }\r\n\r\n        if (!credentials.key ||\r\n            !credentials.algorithm) {\r\n\r\n            return callback(Boom.internal('Invalid credentials'), credentials, artifacts);\r\n        }\r\n\r\n        if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n            return callback(Boom.internal('Unknown algorithm'), credentials, artifacts);\r\n        }\r\n\r\n        // Calculate MAC\r\n\r\n        var mac = Crypto.calculateMac('header', credentials, artifacts);\r\n        if (!Cryptiles.fixedTimeComparison(mac, attributes.mac)) {\r\n            return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, artifacts);\r\n        }\r\n\r\n        // Check payload hash\r\n\r\n        if (options.payload ||\r\n            options.payload === '') {\r\n\r\n            if (!attributes.hash) {\r\n                return callback(Boom.unauthorized('Missing required payload hash', 'Hawk'), credentials, artifacts);\r\n            }\r\n\r\n            var hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.contentType);\r\n            if (!Cryptiles.fixedTimeComparison(hash, attributes.hash)) {\r\n                return callback(Boom.unauthorized('Bad payload hash', 'Hawk'), credentials, artifacts);\r\n            }\r\n        }\r\n\r\n        // Check nonce\r\n\r\n        options.nonceFunc(credentials.key, attributes.nonce, attributes.ts, function (err) {\r\n\r\n            if (err) {\r\n                return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials, artifacts);\r\n            }\r\n\r\n            // Check timestamp staleness\r\n\r\n            if (Math.abs((attributes.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {\r\n                var tsm = Crypto.timestampMessage(credentials, options.localtimeOffsetMsec);\r\n                return callback(Boom.unauthorized('Stale timestamp', 'Hawk', tsm), credentials, artifacts);\r\n            }\r\n\r\n            // Successful authentication\r\n\r\n            return callback(null, credentials, artifacts);\r\n        });\r\n    });\r\n};\r\n\r\n\r\n// Authenticate payload hash - used when payload cannot be provided during authenticate()\r\n\r\n/*\r\n    payload:        raw request payload\r\n    credentials:    from authenticate callback\r\n    artifacts:      from authenticate callback\r\n    contentType:    req.headers['content-type']\r\n*/\r\n\r\nexports.authenticatePayload = function (payload, credentials, artifacts, contentType) {\r\n\r\n    var calculatedHash = Crypto.calculatePayloadHash(payload, credentials.algorithm, contentType);\r\n    return Cryptiles.fixedTimeComparison(calculatedHash, artifacts.hash);\r\n};\r\n\r\n\r\n// Authenticate payload hash - used when payload cannot be provided during authenticate()\r\n\r\n/*\r\n    calculatedHash: the payload hash calculated using Crypto.calculatePayloadHash()\r\n    artifacts:      from authenticate callback\r\n*/\r\n\r\nexports.authenticatePayloadHash = function (calculatedHash, artifacts) {\r\n\r\n    return Cryptiles.fixedTimeComparison(calculatedHash, artifacts.hash);\r\n};\r\n\r\n\r\n// Generate a Server-Authorization header for a given response\r\n\r\n/*\r\n    credentials: {},                                        // Object received from authenticate()\r\n    artifacts: {}                                           // Object received from authenticate(); 'mac', 'hash', and 'ext' - ignored\r\n    options: {\r\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\r\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\r\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\r\n        hash: 'U4MKKSmiVxk37JCCrAVIjV='                     // Pre-calculated payload hash\r\n    }\r\n*/\r\n\r\nexports.header = function (credentials, artifacts, options) {\r\n\r\n    // Prepare inputs\r\n\r\n    options = options || {};\r\n\r\n    if (!artifacts ||\r\n        typeof artifacts !== 'object' ||\r\n        typeof options !== 'object') {\r\n\r\n        return '';\r\n    }\r\n\r\n    artifacts = Hoek.clone(artifacts);\r\n    delete artifacts.mac;\r\n    artifacts.hash = options.hash;\r\n    artifacts.ext = options.ext;\r\n\r\n    // Validate credentials\r\n\r\n    if (!credentials ||\r\n        !credentials.key ||\r\n        !credentials.algorithm) {\r\n\r\n        // Invalid credential object\r\n        return '';\r\n    }\r\n\r\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n        return '';\r\n    }\r\n\r\n    // Calculate payload hash\r\n\r\n    if (!artifacts.hash &&\r\n        (options.payload || options.payload === '')) {\r\n\r\n        artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\r\n    }\r\n\r\n    var mac = Crypto.calculateMac('response', credentials, artifacts);\r\n\r\n    // Construct header\r\n\r\n    var header = 'Hawk mac=\"' + mac + '\"' +\r\n                 (artifacts.hash ? ', hash=\"' + artifacts.hash + '\"' : '');\r\n\r\n    if (artifacts.ext !== null &&\r\n        artifacts.ext !== undefined &&\r\n        artifacts.ext !== '') {                       // Other falsey values allowed\r\n\r\n        header += ', ext=\"' + Hoek.escapeHeaderAttribute(artifacts.ext) + '\"';\r\n    }\r\n\r\n    return header;\r\n};\r\n\r\n\r\n/*\r\n * Arguments and options are the same as authenticate() with the exception that the only supported options are:\r\n * 'hostHeaderName', 'localtimeOffsetMsec', 'host', 'port'\r\n */\r\n\r\n\r\n//                       1     2             3           4\r\ninternals.bewitRegex = /^(\\/.*)([\\?&])bewit\\=([^&$]*)(?:&(.+))?$/;\r\n\r\n\r\nexports.authenticateBewit = function (req, credentialsFunc, options, callback) {\r\n\r\n    callback = Hoek.nextTick(callback);\r\n\r\n    // Application time\r\n\r\n    var now = Utils.now(options.localtimeOffsetMsec);\r\n\r\n    // Convert node Http request object to a request configuration object\r\n\r\n    var request = Utils.parseRequest(req, options);\r\n    if (request instanceof Error) {\r\n        return callback(Boom.badRequest(request.message));\r\n    }\r\n\r\n    // Extract bewit\r\n\r\n    if (request.url.length > Utils.limits.maxMatchLength) {\r\n        return callback(Boom.badRequest('Resource path exceeds max length'));\r\n    }\r\n\r\n    var resource = request.url.match(internals.bewitRegex);\r\n    if (!resource) {\r\n        return callback(Boom.unauthorized(null, 'Hawk'));\r\n    }\r\n\r\n    // Bewit not empty\r\n\r\n    if (!resource[3]) {\r\n        return callback(Boom.unauthorized('Empty bewit', 'Hawk'));\r\n    }\r\n\r\n    // Verify method is GET\r\n\r\n    if (request.method !== 'GET' &&\r\n        request.method !== 'HEAD') {\r\n\r\n        return callback(Boom.unauthorized('Invalid method', 'Hawk'));\r\n    }\r\n\r\n    // No other authentication\r\n\r\n    if (request.authorization) {\r\n        return callback(Boom.badRequest('Multiple authentications'));\r\n    }\r\n\r\n    // Parse bewit\r\n\r\n    var bewitString = Hoek.base64urlDecode(resource[3]);\r\n    if (bewitString instanceof Error) {\r\n        return callback(Boom.badRequest('Invalid bewit encoding'));\r\n    }\r\n\r\n    // Bewit format: id\\exp\\mac\\ext ('\\' is used because it is a reserved header attribute character)\r\n\r\n    var bewitParts = bewitString.split('\\\\');\r\n    if (bewitParts.length !== 4) {\r\n        return callback(Boom.badRequest('Invalid bewit structure'));\r\n    }\r\n\r\n    var bewit = {\r\n        id: bewitParts[0],\r\n        exp: parseInt(bewitParts[1], 10),\r\n        mac: bewitParts[2],\r\n        ext: bewitParts[3] || ''\r\n    };\r\n\r\n    if (!bewit.id ||\r\n        !bewit.exp ||\r\n        !bewit.mac) {\r\n\r\n        return callback(Boom.badRequest('Missing bewit attributes'));\r\n    }\r\n\r\n    // Construct URL without bewit\r\n\r\n    var url = resource[1];\r\n    if (resource[4]) {\r\n        url += resource[2] + resource[4];\r\n    }\r\n\r\n    // Check expiration\r\n\r\n    if (bewit.exp * 1000 <= now) {\r\n        return callback(Boom.unauthorized('Access expired', 'Hawk'), null, bewit);\r\n    }\r\n\r\n    // Fetch Hawk credentials\r\n\r\n    credentialsFunc(bewit.id, function (err, credentials) {\r\n\r\n        if (err) {\r\n            return callback(err, credentials || null, bewit.ext);\r\n        }\r\n\r\n        if (!credentials) {\r\n            return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, bewit);\r\n        }\r\n\r\n        if (!credentials.key ||\r\n            !credentials.algorithm) {\r\n\r\n            return callback(Boom.internal('Invalid credentials'), credentials, bewit);\r\n        }\r\n\r\n        if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n            return callback(Boom.internal('Unknown algorithm'), credentials, bewit);\r\n        }\r\n\r\n        // Calculate MAC\r\n\r\n        var mac = Crypto.calculateMac('bewit', credentials, {\r\n            ts: bewit.exp,\r\n            nonce: '',\r\n            method: 'GET',\r\n            resource: url,\r\n            host: request.host,\r\n            port: request.port,\r\n            ext: bewit.ext\r\n        });\r\n\r\n        if (!Cryptiles.fixedTimeComparison(mac, bewit.mac)) {\r\n            return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, bewit);\r\n        }\r\n\r\n        // Successful authentication\r\n\r\n        return callback(null, credentials, bewit);\r\n    });\r\n};\r\n\r\n\r\n/*\r\n *  options are the same as authenticate() with the exception that the only supported options are:\r\n * 'nonceFunc', 'timestampSkewSec', 'localtimeOffsetMsec'\r\n */\r\n\r\nexports.authenticateMessage = function (host, port, message, authorization, credentialsFunc, options, callback) {\r\n\r\n    callback = Hoek.nextTick(callback);\r\n\r\n    // Default options\r\n\r\n    options.nonceFunc = options.nonceFunc || internals.nonceFunc;\r\n    options.timestampSkewSec = options.timestampSkewSec || 60;                                                  // 60 seconds\r\n\r\n    // Application time\r\n\r\n    var now = Utils.now(options.localtimeOffsetMsec);                       // Measure now before any other processing\r\n\r\n    // Validate authorization\r\n\r\n    if (!authorization.id ||\r\n        !authorization.ts ||\r\n        !authorization.nonce ||\r\n        !authorization.hash ||\r\n        !authorization.mac) {\r\n\r\n        return callback(Boom.badRequest('Invalid authorization'));\r\n    }\r\n\r\n    // Fetch Hawk credentials\r\n\r\n    credentialsFunc(authorization.id, function (err, credentials) {\r\n\r\n        if (err) {\r\n            return callback(err, credentials || null);\r\n        }\r\n\r\n        if (!credentials) {\r\n            return callback(Boom.unauthorized('Unknown credentials', 'Hawk'));\r\n        }\r\n\r\n        if (!credentials.key ||\r\n            !credentials.algorithm) {\r\n\r\n            return callback(Boom.internal('Invalid credentials'), credentials);\r\n        }\r\n\r\n        if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n            return callback(Boom.internal('Unknown algorithm'), credentials);\r\n        }\r\n\r\n        // Construct artifacts container\r\n\r\n        var artifacts = {\r\n            ts: authorization.ts,\r\n            nonce: authorization.nonce,\r\n            host: host,\r\n            port: port,\r\n            hash: authorization.hash\r\n        };\r\n\r\n        // Calculate MAC\r\n\r\n        var mac = Crypto.calculateMac('message', credentials, artifacts);\r\n        if (!Cryptiles.fixedTimeComparison(mac, authorization.mac)) {\r\n            return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials);\r\n        }\r\n\r\n        // Check payload hash\r\n\r\n        var hash = Crypto.calculatePayloadHash(message, credentials.algorithm);\r\n        if (!Cryptiles.fixedTimeComparison(hash, authorization.hash)) {\r\n            return callback(Boom.unauthorized('Bad message hash', 'Hawk'), credentials);\r\n        }\r\n\r\n        // Check nonce\r\n\r\n        options.nonceFunc(credentials.key, authorization.nonce, authorization.ts, function (err) {\r\n\r\n            if (err) {\r\n                return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials);\r\n            }\r\n\r\n            // Check timestamp staleness\r\n\r\n            if (Math.abs((authorization.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {\r\n                return callback(Boom.unauthorized('Stale timestamp'), credentials);\r\n            }\r\n\r\n            // Successful authentication\r\n\r\n            return callback(null, credentials);\r\n        });\r\n    });\r\n};\r\n\r\n\r\ninternals.nonceFunc = function (key, nonce, ts, nonceCallback) {\r\n\r\n    return nonceCallback();         // No validation\r\n};\r\n"]}