{"version":3,"sources":["dhe.js"],"names":[],"mappings":"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","file":"dhe-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = DiffieHellman;\n\nvar assert = require('assert-plus');\nvar crypto = require('crypto');\nvar algs = require('./algs');\nvar utils = require('./utils');\nvar ed;\n\nvar Key = require('./key');\nvar PrivateKey = require('./private-key');\n\nvar CRYPTO_HAVE_ECDH = (crypto.createECDH !== undefined);\n\nvar ecdh, ec, jsbn;\n\nfunction DiffieHellman(key) {\n\tutils.assertCompatible(key, Key, [1, 4], 'key');\n\tthis._isPriv = PrivateKey.isPrivateKey(key, [1, 3]);\n\tthis._algo = key.type;\n\tthis._curve = key.curve;\n\tthis._key = key;\n\tif (key.type === 'dsa') {\n\t\tif (!CRYPTO_HAVE_ECDH) {\n\t\t\tthrow (new Error('Due to bugs in the node 0.10 ' +\n\t\t\t    'crypto API, node 0.12.x or later is required ' +\n\t\t\t    'to use DH'));\n\t\t}\n\t\tthis._dh = crypto.createDiffieHellman(\n\t\t    key.part.p.data, undefined,\n\t\t    key.part.g.data, undefined);\n\t\tthis._p = key.part.p;\n\t\tthis._g = key.part.g;\n\t\tif (this._isPriv)\n\t\t\tthis._dh.setPrivateKey(key.part.x.data);\n\t\tthis._dh.setPublicKey(key.part.y.data);\n\n\t} else if (key.type === 'ecdsa') {\n\t\tif (!CRYPTO_HAVE_ECDH) {\n\t\t\tif (ecdh === undefined)\n\t\t\t\tecdh = require('ecc-jsbn');\n\t\t\tif (ec === undefined)\n\t\t\t\tec = require('ecc-jsbn/lib/ec');\n\t\t\tif (jsbn === undefined)\n\t\t\t\tjsbn = require('jsbn').BigInteger;\n\n\t\t\tthis._ecParams = new X9ECParameters(this._curve);\n\n\t\t\tif (this._isPriv) {\n\t\t\t\tthis._priv = new ECPrivate(\n\t\t\t\t    this._ecParams, key.part.d.data);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar curve = {\n\t\t\t'nistp256': 'prime256v1',\n\t\t\t'nistp384': 'secp384r1',\n\t\t\t'nistp521': 'secp521r1'\n\t\t}[key.curve];\n\t\tthis._dh = crypto.createECDH(curve);\n\t\tif (typeof (this._dh) !== 'object' ||\n\t\t    typeof (this._dh.setPrivateKey) !== 'function') {\n\t\t\tCRYPTO_HAVE_ECDH = false;\n\t\t\tDiffieHellman.call(this, key);\n\t\t\treturn;\n\t\t}\n\t\tif (this._isPriv)\n\t\t\tthis._dh.setPrivateKey(key.part.d.data);\n\t\tthis._dh.setPublicKey(key.part.Q.data);\n\n\t} else if (key.type === 'curve25519') {\n\t\tif (ed === undefined)\n\t\t\ted = require('jodid25519');\n\n\t\tif (this._isPriv) {\n\t\t\tthis._priv = key.part.r.data;\n\t\t\tif (this._priv[0] === 0x00)\n\t\t\t\tthis._priv = this._priv.slice(1);\n\t\t\tthis._priv = this._priv.slice(0, 32);\n\t\t}\n\n\t} else {\n\t\tthrow (new Error('DH not supported for ' + key.type + ' keys'));\n\t}\n}\n\nDiffieHellman.prototype.getPublicKey = function () {\n\tif (this._isPriv)\n\t\treturn (this._key.toPublic());\n\treturn (this._key);\n};\n\nDiffieHellman.prototype.getPrivateKey = function () {\n\tif (this._isPriv)\n\t\treturn (this._key);\n\telse\n\t\treturn (undefined);\n};\nDiffieHellman.prototype.getKey = DiffieHellman.prototype.getPrivateKey;\n\nDiffieHellman.prototype._keyCheck = function (pk, isPub) {\n\tassert.object(pk, 'key');\n\tif (!isPub)\n\t\tutils.assertCompatible(pk, PrivateKey, [1, 3], 'key');\n\tutils.assertCompatible(pk, Key, [1, 4], 'key');\n\n\tif (pk.type !== this._algo) {\n\t\tthrow (new Error('A ' + pk.type + ' key cannot be used in ' +\n\t\t    this._algo + ' Diffie-Hellman'));\n\t}\n\n\tif (pk.curve !== this._curve) {\n\t\tthrow (new Error('A key from the ' + pk.curve + ' curve ' +\n\t\t    'cannot be used with a ' + this._curve +\n\t\t    ' Diffie-Hellman'));\n\t}\n\n\tif (pk.type === 'dsa') {\n\t\tassert.deepEqual(pk.part.p, this._p,\n\t\t    'DSA key prime does not match');\n\t\tassert.deepEqual(pk.part.g, this._g,\n\t\t    'DSA key generator does not match');\n\t}\n};\n\nDiffieHellman.prototype.setKey = function (pk) {\n\tthis._keyCheck(pk);\n\n\tif (pk.type === 'dsa') {\n\t\tthis._dh.setPrivateKey(pk.part.x.data);\n\t\tthis._dh.setPublicKey(pk.part.y.data);\n\n\t} else if (pk.type === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\tthis._dh.setPrivateKey(pk.part.d.data);\n\t\t\tthis._dh.setPublicKey(pk.part.Q.data);\n\t\t} else {\n\t\t\tthis._priv = new ECPrivate(\n\t\t\t    this._ecParams, pk.part.d.data);\n\t\t}\n\n\t} else if (pk.type === 'curve25519') {\n\t\tthis._priv = pk.part.r.data;\n\t\tif (this._priv[0] === 0x00)\n\t\t\tthis._priv = this._priv.slice(1);\n\t\tthis._priv = this._priv.slice(0, 32);\n\t}\n\tthis._key = pk;\n\tthis._isPriv = true;\n};\nDiffieHellman.prototype.setPrivateKey = DiffieHellman.prototype.setKey;\n\nDiffieHellman.prototype.computeSecret = function (otherpk) {\n\tthis._keyCheck(otherpk, true);\n\tif (!this._isPriv)\n\t\tthrow (new Error('DH exchange has not been initialized with ' +\n\t\t    'a private key yet'));\n\n\tvar pub;\n\tif (this._algo === 'dsa') {\n\t\treturn (this._dh.computeSecret(\n\t\t    otherpk.part.y.data));\n\n\t} else if (this._algo === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\treturn (this._dh.computeSecret(\n\t\t\t    otherpk.part.Q.data));\n\t\t} else {\n\t\t\tpub = new ECPublic(\n\t\t\t    this._ecParams, otherpk.part.Q.data);\n\t\t\treturn (this._priv.deriveSharedSecret(pub));\n\t\t}\n\n\t} else if (this._algo === 'curve25519') {\n\t\tpub = otherpk.part.R.data;\n\t\tif (pub[0] === 0x00)\n\t\t\tpub = pub.slice(1);\n\n\t\tvar secret = ed.dh.computeKey(\n\t\t    this._priv.toString('binary'),\n\t\t    pub.toString('binary'));\n\n\t\treturn (new Buffer(secret, 'binary'));\n\t}\n\n\tthrow (new Error('Invalid algorithm: ' + this._algo));\n};\n\nDiffieHellman.prototype.generateKey = function () {\n\tvar parts = [];\n\tvar priv, pub;\n\tif (this._algo === 'dsa') {\n\t\tthis._dh.generateKeys();\n\n\t\tparts.push({name: 'p', data: this._p.data});\n\t\tparts.push({name: 'q', data: this._key.part.q.data});\n\t\tparts.push({name: 'g', data: this._g.data});\n\t\tparts.push({name: 'y', data: this._dh.getPublicKey()});\n\t\tparts.push({name: 'x', data: this._dh.getPrivateKey()});\n\t\tthis._key = new PrivateKey({\n\t\t\ttype: 'dsa',\n\t\t\tparts: parts\n\t\t});\n\t\tthis._isPriv = true;\n\t\treturn (this._key);\n\n\t} else if (this._algo === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\tthis._dh.generateKeys();\n\n\t\t\tparts.push({name: 'curve',\n\t\t\t    data: new Buffer(this._curve)});\n\t\t\tparts.push({name: 'Q', data: this._dh.getPublicKey()});\n\t\t\tparts.push({name: 'd', data: this._dh.getPrivateKey()});\n\t\t\tthis._key = new PrivateKey({\n\t\t\t\ttype: 'ecdsa',\n\t\t\t\tcurve: this._curve,\n\t\t\t\tparts: parts\n\t\t\t});\n\t\t\tthis._isPriv = true;\n\t\t\treturn (this._key);\n\n\t\t} else {\n\t\t\tvar n = this._ecParams.getN();\n\t\t\tvar r = new jsbn(crypto.randomBytes(n.bitLength()));\n\t\t\tvar n1 = n.subtract(jsbn.ONE);\n\t\t\tpriv = r.mod(n1).add(jsbn.ONE);\n\t\t\tpub = this._ecParams.getG().multiply(priv);\n\n\t\t\tpriv = new Buffer(priv.toByteArray());\n\t\t\tpub = new Buffer(this._ecParams.getCurve().\n\t\t\t    encodePointHex(pub), 'hex');\n\n\t\t\tthis._priv = new ECPrivate(this._ecParams, priv);\n\n\t\t\tparts.push({name: 'curve',\n\t\t\t    data: new Buffer(this._curve)});\n\t\t\tparts.push({name: 'Q', data: pub});\n\t\t\tparts.push({name: 'd', data: priv});\n\n\t\t\tthis._key = new PrivateKey({\n\t\t\t\ttype: 'ecdsa',\n\t\t\t\tcurve: this._curve,\n\t\t\t\tparts: parts\n\t\t\t});\n\t\t\tthis._isPriv = true;\n\t\t\treturn (this._key);\n\t\t}\n\n\t} else if (this._algo === 'curve25519') {\n\t\tpriv = ed.dh.generateKey();\n\t\tpub = ed.dh.publicKey(priv);\n\t\tthis._priv = priv = new Buffer(priv, 'binary');\n\t\tpub = new Buffer(pub, 'binary');\n\n\t\tparts.push({name: 'R', data: pub});\n\t\tparts.push({name: 'r', data: Buffer.concat([priv, pub])});\n\t\tthis._key = new PrivateKey({\n\t\t\ttype: 'curve25519',\n\t\t\tparts: parts\n\t\t});\n\t\tthis._isPriv = true;\n\t\treturn (this._key);\n\t}\n\n\tthrow (new Error('Invalid algorithm: ' + this._algo));\n};\nDiffieHellman.prototype.generateKeys = DiffieHellman.prototype.generateKey;\n\n/* These are helpers for using ecc-jsbn (for node 0.10 compatibility). */\n\nfunction X9ECParameters(name) {\n\tvar params = algs.curves[name];\n\tassert.object(params);\n\n\tvar p = new jsbn(params.p);\n\tvar a = new jsbn(params.a);\n\tvar b = new jsbn(params.b);\n\tvar n = new jsbn(params.n);\n\tvar h = jsbn.ONE;\n\tvar curve = new ec.ECCurveFp(p, a, b);\n\tvar G = curve.decodePointHex(params.G.toString('hex'));\n\n\tthis.curve = curve;\n\tthis.g = G;\n\tthis.n = n;\n\tthis.h = h;\n}\nX9ECParameters.prototype.getCurve = function () { return (this.curve); };\nX9ECParameters.prototype.getG = function () { return (this.g); };\nX9ECParameters.prototype.getN = function () { return (this.n); };\nX9ECParameters.prototype.getH = function () { return (this.h); };\n\nfunction ECPublic(params, buffer) {\n\tthis._params = params;\n\tif (buffer[0] === 0x00)\n\t\tbuffer = buffer.slice(1);\n\tthis._pub = params.getCurve().decodePointHex(buffer.toString('hex'));\n}\n\nfunction ECPrivate(params, buffer) {\n\tthis._params = params;\n\tthis._priv = new jsbn(utils.mpNormalize(buffer));\n}\nECPrivate.prototype.deriveSharedSecret = function (pubKey) {\n\tassert.ok(pubKey instanceof ECPublic);\n\tvar S = pubKey._pub.multiply(this._priv);\n\treturn (new Buffer(S.getX().toBigInteger().toByteArray()));\n};\n"]}