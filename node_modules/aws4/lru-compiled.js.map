{"version":3,"sources":["lru.js"],"names":[],"mappings":"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","file":"lru-compiled.js","sourcesContent":["module.exports = function(size) {\n  return new LruCache(size)\n}\n\nfunction LruCache(size) {\n  this.capacity = size | 0\n  this.map = Object.create(null)\n  this.list = new DoublyLinkedList()\n}\n\nLruCache.prototype.get = function(key) {\n  var node = this.map[key]\n  if (node == null) return undefined\n  this.used(node)\n  return node.val\n}\n\nLruCache.prototype.set = function(key, val) {\n  var node = this.map[key]\n  if (node != null) {\n    node.val = val\n  } else {\n    if (!this.capacity) this.prune()\n    if (!this.capacity) return false\n    node = new DoublyLinkedNode(key, val)\n    this.map[key] = node\n    this.capacity--\n  }\n  this.used(node)\n  return true\n}\n\nLruCache.prototype.used = function(node) {\n  this.list.moveToFront(node)\n}\n\nLruCache.prototype.prune = function() {\n  var node = this.list.pop()\n  if (node != null) {\n    delete this.map[node.key]\n    this.capacity++\n  }\n}\n\n\nfunction DoublyLinkedList() {\n  this.firstNode = null\n  this.lastNode = null\n}\n\nDoublyLinkedList.prototype.moveToFront = function(node) {\n  if (this.firstNode == node) return\n\n  this.remove(node)\n\n  if (this.firstNode == null) {\n    this.firstNode = node\n    this.lastNode = node\n    node.prev = null\n    node.next = null\n  } else {\n    node.prev = null\n    node.next = this.firstNode\n    node.next.prev = node\n    this.firstNode = node\n  }\n}\n\nDoublyLinkedList.prototype.pop = function() {\n  var lastNode = this.lastNode\n  if (lastNode != null) {\n    this.remove(lastNode)\n  }\n  return lastNode\n}\n\nDoublyLinkedList.prototype.remove = function(node) {\n  if (this.firstNode == node) {\n    this.firstNode = node.next\n  } else if (node.prev != null) {\n    node.prev.next = node.next\n  }\n  if (this.lastNode == node) {\n    this.lastNode = node.prev\n  } else if (node.next != null) {\n    node.next.prev = node.prev\n  }\n}\n\n\nfunction DoublyLinkedNode(key, val) {\n  this.key = key\n  this.val = val\n  this.prev = null\n  this.next = null\n}\n"]}