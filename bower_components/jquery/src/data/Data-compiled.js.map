{"version":3,"sources":["Data.js"],"names":[],"mappings":"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","file":"Data-compiled.js","sourcesContent":["define( [\r\n\t\"../core\",\r\n\t\"../var/rnotwhite\",\r\n\t\"./var/acceptData\"\r\n], function( jQuery, rnotwhite, acceptData ) {\r\n\r\nfunction Data() {\r\n\tthis.expando = jQuery.expando + Data.uid++;\r\n}\r\n\r\nData.uid = 1;\r\n\r\nData.prototype = {\r\n\r\n\tregister: function( owner, initial ) {\r\n\t\tvar value = initial || {};\r\n\r\n\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t// use plain assignment\r\n\t\tif ( owner.nodeType ) {\r\n\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\r\n\t\t// configurability must be true to allow the property to be\r\n\t\t// deleted with the delete operator\r\n\t\t} else {\r\n\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\tvalue: value,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t} );\r\n\t\t}\r\n\t\treturn owner[ this.expando ];\r\n\t},\r\n\tcache: function( owner ) {\r\n\r\n\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t// but we should not, see #8335.\r\n\t\t// Always return an empty object.\r\n\t\tif ( !acceptData( owner ) ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t// Check if the owner object already has a cache\r\n\t\tvar value = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !value ) {\r\n\t\t\tvalue = {};\r\n\r\n\t\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t\t// but we should not, see #8335.\r\n\t\t\t// Always return an empty object.\r\n\t\t\tif ( acceptData( owner ) ) {\r\n\r\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t\t\t// use plain assignment\r\n\t\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t\t\t// Otherwise secure it in a non-enumerable property\r\n\t\t\t\t// configurable must be true to allow the property to be\r\n\t\t\t\t// deleted when data is removed\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\tcache = this.cache( owner );\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ data ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\r\n\t\t\t// Copy the properties one-by-one to the cache object\r\n\t\t\tfor ( prop in data ) {\r\n\t\t\t\tcache[ prop ] = data[ prop ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\treturn key === undefined ?\r\n\t\t\tthis.cache( owner ) :\r\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\t\tvar stored;\r\n\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\r\n\r\n\t\t\tstored = this.get( owner, key );\r\n\r\n\t\t\treturn stored !== undefined ?\r\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\r\n\t\t}\r\n\r\n\t\t// When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i, name, camel,\r\n\t\t\tcache = owner[ this.expando ];\r\n\r\n\t\tif ( cache === undefined ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) {\r\n\t\t\tthis.register( owner );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( jQuery.isArray( key ) ) {\r\n\r\n\t\t\t\t// If \"name\" is an array of keys...\r\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\r\n\t\t\t\t// keys will be converted to camelCase.\r\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\r\n\t\t\t\t// both plain key and camelCase key. #12786\r\n\t\t\t\t// This will only penalize the array argument path.\r\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\r\n\t\t\t} else {\r\n\t\t\t\tcamel = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Try the string as a key before any manipulation\r\n\t\t\t\tif ( key in cache ) {\r\n\t\t\t\t\tname = [ key, camel ];\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\t\tname = camel;\r\n\t\t\t\t\tname = name in cache ?\r\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = name.length;\r\n\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ name[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if there's no more data\r\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\r\n\r\n\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t// Webkit & Blink performance suffers when deleting properties\r\n\t\t\t// from DOM nodes, so set to undefined instead\r\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\r\n\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\towner[ this.expando ] = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tdelete owner[ this.expando ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\tvar cache = owner[ this.expando ];\r\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\r\n\t}\r\n};\r\n\r\nreturn Data;\r\n} );\r\n"]}