{"version":3,"sources":["xhr.js"],"names":[],"mappings":"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","file":"xhr-compiled.js","sourcesContent":["define( [\r\n\t\"../core\",\r\n\t\"../var/support\",\r\n\t\"../ajax\"\r\n], function( jQuery, support ) {\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t} catch ( e ) {}\r\n};\r\n\r\nvar xhrSuccessStatus = {\r\n\r\n\t\t// File protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\r\n\t\t// Support: IE9\r\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport( function( options ) {\r\n\tvar callback, errorCallback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr();\r\n\r\n\t\t\t\txhr.open(\r\n\t\t\t\t\toptions.type,\r\n\t\t\t\t\toptions.url,\r\n\t\t\t\t\toptions.async,\r\n\t\t\t\t\toptions.username,\r\n\t\t\t\t\toptions.password\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\r\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\r\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE9\r\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\r\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\r\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\r\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcomplete(\r\n\r\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\r\n\t\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\r\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\r\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\r\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\r\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\r\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\r\n\r\n\t\t\t\t// Support: IE9\r\n\t\t\t\t// Use onreadystatechange to replace onabort\r\n\t\t\t\t// to handle uncaught aborts\r\n\t\t\t\tif ( xhr.onabort !== undefined ) {\r\n\t\t\t\t\txhr.onabort = errorCallback;\r\n\t\t\t\t} else {\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\r\n\t\t\t\t\t\t// Check readyState before timeout as it changes\r\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\r\n\r\n\t\t\t\t\t\t\t// Allow onerror to be called first,\r\n\t\t\t\t\t\t\t// but that will not handle a native abort\r\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\r\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\r\n\t\t\t\t\t\t\twindow.setTimeout( function() {\r\n\t\t\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\t\t\terrorCallback();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = callback( \"abort\" );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n} );\r\n"]}