{"version":3,"sources":["jsprim.js"],"names":[],"mappings":"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","file":"jsprim-compiled.js","sourcesContent":["/*\n * lib/jsprim.js: utilities for primitive JavaScript types\n */\n\nvar mod_assert = require('assert');\nvar mod_util = require('util');\n\nvar mod_extsprintf = require('extsprintf');\nvar mod_verror = require('verror');\nvar mod_jsonschema = require('json-schema');\n\n/*\n * Public interface\n */\nexports.deepCopy = deepCopy;\nexports.deepEqual = deepEqual;\nexports.isEmpty = isEmpty;\nexports.hasKey = hasKey;\nexports.forEachKey = forEachKey;\nexports.pluck = pluck;\nexports.flattenObject = flattenObject;\nexports.flattenIter = flattenIter;\nexports.validateJsonObject = validateJsonObjectJS;\nexports.validateJsonObjectJS = validateJsonObjectJS;\nexports.randElt = randElt;\nexports.extraProperties = extraProperties;\nexports.mergeObjects = mergeObjects;\n\nexports.startsWith = startsWith;\nexports.endsWith = endsWith;\n\nexports.iso8601 = iso8601;\nexports.rfc1123 = rfc1123;\nexports.parseDateTime = parseDateTime;\n\nexports.hrtimediff = hrtimeDiff;\nexports.hrtimeDiff = hrtimeDiff;\nexports.hrtimeAccum = hrtimeAccum;\nexports.hrtimeAdd = hrtimeAdd;\nexports.hrtimeNanosec = hrtimeNanosec;\nexports.hrtimeMicrosec = hrtimeMicrosec;\nexports.hrtimeMillisec = hrtimeMillisec;\n\n\n/*\n * Deep copy an acyclic *basic* Javascript object.  This only handles basic\n * scalars (strings, numbers, booleans) and arbitrarily deep arrays and objects\n * containing these.  This does *not* handle instances of other classes.\n */\nfunction deepCopy(obj)\n{\n\tvar ret, key;\n\tvar marker = '__deepCopy';\n\n\tif (obj && obj[marker])\n\t\tthrow (new Error('attempted deep copy of cyclic object'));\n\n\tif (obj && obj.constructor == Object) {\n\t\tret = {};\n\t\tobj[marker] = true;\n\n\t\tfor (key in obj) {\n\t\t\tif (key == marker)\n\t\t\t\tcontinue;\n\n\t\t\tret[key] = deepCopy(obj[key]);\n\t\t}\n\n\t\tdelete (obj[marker]);\n\t\treturn (ret);\n\t}\n\n\tif (obj && obj.constructor == Array) {\n\t\tret = [];\n\t\tobj[marker] = true;\n\n\t\tfor (key = 0; key < obj.length; key++)\n\t\t\tret.push(deepCopy(obj[key]));\n\n\t\tdelete (obj[marker]);\n\t\treturn (ret);\n\t}\n\n\t/*\n\t * It must be a primitive type -- just return it.\n\t */\n\treturn (obj);\n}\n\nfunction deepEqual(obj1, obj2)\n{\n\tif (typeof (obj1) != typeof (obj2))\n\t\treturn (false);\n\n\tif (obj1 === null || obj2 === null || typeof (obj1) != 'object')\n\t\treturn (obj1 === obj2);\n\n\tif (obj1.constructor != obj2.constructor)\n\t\treturn (false);\n\n\tvar k;\n\tfor (k in obj1) {\n\t\tif (!obj2.hasOwnProperty(k))\n\t\t\treturn (false);\n\n\t\tif (!deepEqual(obj1[k], obj2[k]))\n\t\t\treturn (false);\n\t}\n\n\tfor (k in obj2) {\n\t\tif (!obj1.hasOwnProperty(k))\n\t\t\treturn (false);\n\t}\n\n\treturn (true);\n}\n\nfunction isEmpty(obj)\n{\n\tvar key;\n\tfor (key in obj)\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction hasKey(obj, key)\n{\n\tmod_assert.equal(typeof (key), 'string');\n\treturn (Object.prototype.hasOwnProperty.call(obj, key));\n}\n\nfunction forEachKey(obj, callback)\n{\n\tfor (var key in obj) {\n\t\tif (hasKey(obj, key)) {\n\t\t\tcallback(key, obj[key]);\n\t\t}\n\t}\n}\n\nfunction pluck(obj, key)\n{\n\tmod_assert.equal(typeof (key), 'string');\n\treturn (pluckv(obj, key));\n}\n\nfunction pluckv(obj, key)\n{\n\tif (obj === null || typeof (obj) !== 'object')\n\t\treturn (undefined);\n\n\tif (obj.hasOwnProperty(key))\n\t\treturn (obj[key]);\n\n\tvar i = key.indexOf('.');\n\tif (i == -1)\n\t\treturn (undefined);\n\n\tvar key1 = key.substr(0, i);\n\tif (!obj.hasOwnProperty(key1))\n\t\treturn (undefined);\n\n\treturn (pluckv(obj[key1], key.substr(i + 1)));\n}\n\n/*\n * Invoke callback(row) for each entry in the array that would be returned by\n * flattenObject(data, depth).  This is just like flattenObject(data,\n * depth).forEach(callback), except that the intermediate array is never\n * created.\n */\nfunction flattenIter(data, depth, callback)\n{\n\tdoFlattenIter(data, depth, [], callback);\n}\n\nfunction doFlattenIter(data, depth, accum, callback)\n{\n\tvar each;\n\tvar key;\n\n\tif (depth === 0) {\n\t\teach = accum.slice(0);\n\t\teach.push(data);\n\t\tcallback(each);\n\t\treturn;\n\t}\n\n\tmod_assert.ok(data !== null);\n\tmod_assert.equal(typeof (data), 'object');\n\tmod_assert.equal(typeof (depth), 'number');\n\tmod_assert.ok(depth >= 0);\n\n\tfor (key in data) {\n\t\teach = accum.slice(0);\n\t\teach.push(key);\n\t\tdoFlattenIter(data[key], depth - 1, each, callback);\n\t}\n}\n\nfunction flattenObject(data, depth)\n{\n\tif (depth === 0)\n\t\treturn ([ data ]);\n\n\tmod_assert.ok(data !== null);\n\tmod_assert.equal(typeof (data), 'object');\n\tmod_assert.equal(typeof (depth), 'number');\n\tmod_assert.ok(depth >= 0);\n\n\tvar rv = [];\n\tvar key;\n\n\tfor (key in data) {\n\t\tflattenObject(data[key], depth - 1).forEach(function (p) {\n\t\t\trv.push([ key ].concat(p));\n\t\t});\n\t}\n\n\treturn (rv);\n}\n\nfunction startsWith(str, prefix)\n{\n\treturn (str.substr(0, prefix.length) == prefix);\n}\n\nfunction endsWith(str, suffix)\n{\n\treturn (str.substr(\n\t    str.length - suffix.length, suffix.length) == suffix);\n}\n\nfunction iso8601(d)\n{\n\tif (typeof (d) == 'number')\n\t\td = new Date(d);\n\tmod_assert.ok(d.constructor === Date);\n\treturn (mod_extsprintf.sprintf('%4d-%02d-%02dT%02d:%02d:%02d.%03dZ',\n\t    d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(),\n\t    d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(),\n\t    d.getUTCMilliseconds()));\n}\n\nvar RFC1123_MONTHS = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar RFC1123_DAYS = [\n    'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nfunction rfc1123(date) {\n\treturn (mod_extsprintf.sprintf('%s, %02d %s %04d %02d:%02d:%02d GMT',\n\t    RFC1123_DAYS[date.getUTCDay()], date.getUTCDate(),\n\t    RFC1123_MONTHS[date.getUTCMonth()], date.getUTCFullYear(),\n\t    date.getUTCHours(), date.getUTCMinutes(),\n\t    date.getUTCSeconds()));\n}\n\n/*\n * Parses a date expressed as a string, as either a number of milliseconds since\n * the epoch or any string format that Date accepts, giving preference to the\n * former where these two sets overlap (e.g., small numbers).\n */\nfunction parseDateTime(str)\n{\n\t/*\n\t * This is irritatingly implicit, but significantly more concise than\n\t * alternatives.  The \"+str\" will convert a string containing only a\n\t * number directly to a Number, or NaN for other strings.  Thus, if the\n\t * conversion succeeds, we use it (this is the milliseconds-since-epoch\n\t * case).  Otherwise, we pass the string directly to the Date\n\t * constructor to parse.\n\t */\n\tvar numeric = +str;\n\tif (!isNaN(numeric)) {\n\t\treturn (new Date(numeric));\n\t} else {\n\t\treturn (new Date(str));\n\t}\n}\n\nfunction validateJsonObjectJS(schema, input)\n{\n\tvar report = mod_jsonschema.validate(input, schema);\n\n\tif (report.errors.length === 0)\n\t\treturn (null);\n\n\t/* Currently, we only do anything useful with the first error. */\n\tvar error = report.errors[0];\n\n\t/* The failed property is given by a URI with an irrelevant prefix. */\n\tvar propname = error['property'];\n\tvar reason = error['message'].toLowerCase();\n\tvar i, j;\n\n\t/*\n\t * There's at least one case where the property error message is\n\t * confusing at best.  We work around this here.\n\t */\n\tif ((i = reason.indexOf('the property ')) != -1 &&\n\t    (j = reason.indexOf(' is not defined in the schema and the ' +\n\t    'schema does not allow additional properties')) != -1) {\n\t\ti += 'the property '.length;\n\t\tif (propname === '')\n\t\t\tpropname = reason.substr(i, j - i);\n\t\telse\n\t\t\tpropname = propname + '.' + reason.substr(i, j - i);\n\n\t\treason = 'unsupported property';\n\t}\n\n\tvar rv = new mod_verror.VError('property \"%s\": %s', propname, reason);\n\trv.jsv_details = error;\n\treturn (rv);\n}\n\nfunction randElt(arr)\n{\n\tmod_assert.ok(Array.isArray(arr) && arr.length > 0,\n\t    'randElt argument must be a non-empty array');\n\n\treturn (arr[Math.floor(Math.random() * arr.length)]);\n}\n\nfunction assertHrtime(a)\n{\n\tmod_assert.ok(a[0] >= 0 && a[1] >= 0,\n\t    'negative numbers not allowed in hrtimes');\n\tmod_assert.ok(a[1] < 1e9, 'nanoseconds column overflow');\n}\n\n/*\n * Compute the time elapsed between hrtime readings A and B, where A is later\n * than B.  hrtime readings come from Node's process.hrtime().  There is no\n * defined way to represent negative deltas, so it's illegal to diff B from A\n * where the time denoted by B is later than the time denoted by A.  If this\n * becomes valuable, we can define a representation and extend the\n * implementation to support it.\n */\nfunction hrtimeDiff(a, b)\n{\n\tassertHrtime(a);\n\tassertHrtime(b);\n\tmod_assert.ok(a[0] > b[0] || (a[0] == b[0] && a[1] >= b[1]),\n\t    'negative differences not allowed');\n\n\tvar rv = [ a[0] - b[0], 0 ];\n\n\tif (a[1] >= b[1]) {\n\t\trv[1] = a[1] - b[1];\n\t} else {\n\t\trv[0]--;\n\t\trv[1] = 1e9 - (b[1] - a[1]);\n\t}\n\n\treturn (rv);\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of nanoseconds.\n */\nfunction hrtimeNanosec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e9 + a[1]));\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of microseconds.\n */\nfunction hrtimeMicrosec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e6 + a[1] / 1e3));\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of milliseconds.\n */\nfunction hrtimeMillisec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e3 + a[1] / 1e6));\n}\n\n/*\n * Add two hrtime readings A and B, overwriting A with the result of the\n * addition.  This function is useful for accumulating several hrtime intervals\n * into a counter.  Returns A.\n */\nfunction hrtimeAccum(a, b)\n{\n\tassertHrtime(a);\n\tassertHrtime(b);\n\n\t/*\n\t * Accumulate the nanosecond component.\n\t */\n\ta[1] += b[1];\n\tif (a[1] >= 1e9) {\n\t\t/*\n\t\t * The nanosecond component overflowed, so carry to the seconds\n\t\t * field.\n\t\t */\n\t\ta[0]++;\n\t\ta[1] -= 1e9;\n\t}\n\n\t/*\n\t * Accumulate the seconds component.\n\t */\n\ta[0] += b[0];\n\n\treturn (a);\n}\n\n/*\n * Add two hrtime readings A and B, returning the result as a new hrtime array.\n * Does not modify either input argument.\n */\nfunction hrtimeAdd(a, b)\n{\n\tassertHrtime(a);\n\n\tvar rv = [ a[0], a[1] ];\n\n\treturn (hrtimeAccum(rv, b));\n}\n\n\n/*\n * Check an object for unexpected properties.  Accepts the object to check, and\n * an array of allowed property names (strings).  Returns an array of key names\n * that were found on the object, but did not appear in the list of allowed\n * properties.  If no properties were found, the returned array will be of\n * zero length.\n */\nfunction extraProperties(obj, allowed)\n{\n\tmod_assert.ok(typeof (obj) === 'object' && obj !== null,\n\t    'obj argument must be a non-null object');\n\tmod_assert.ok(Array.isArray(allowed),\n\t    'allowed argument must be an array of strings');\n\tfor (var i = 0; i < allowed.length; i++) {\n\t\tmod_assert.ok(typeof (allowed[i]) === 'string',\n\t\t    'allowed argument must be an array of strings');\n\t}\n\n\treturn (Object.keys(obj).filter(function (key) {\n\t\treturn (allowed.indexOf(key) === -1);\n\t}));\n}\n\n/*\n * Given three sets of properties \"provided\" (may be undefined), \"overrides\"\n * (required), and \"defaults\" (may be undefined), construct an object containing\n * the union of these sets with \"overrides\" overriding \"provided\", and\n * \"provided\" overriding \"defaults\".  None of the input objects are modified.\n */\nfunction mergeObjects(provided, overrides, defaults)\n{\n\tvar rv, k;\n\n\trv = {};\n\tif (defaults) {\n\t\tfor (k in defaults)\n\t\t\trv[k] = defaults[k];\n\t}\n\n\tif (provided) {\n\t\tfor (k in provided)\n\t\t\trv[k] = provided[k];\n\t}\n\n\tif (overrides) {\n\t\tfor (k in overrides)\n\t\t\trv[k] = overrides[k];\n\t}\n\n\treturn (rv);\n}\n"]}