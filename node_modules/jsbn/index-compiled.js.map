{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["(function(){\n\n    // Copyright (c) 2005  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Basic JavaScript BN library - subset useful for RSA encryption.\n\n    // Bits per digit\n    var dbits;\n\n    // JavaScript engine analysis\n    var canary = 0xdeadbeefcafe;\n    var j_lm = ((canary&0xffffff)==0xefcafe);\n\n    // (public) Constructor\n    function BigInteger(a,b,c) {\n      if(a != null)\n        if(\"number\" == typeof a) this.fromNumber(a,b,c);\n        else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n        else this.fromString(a,b);\n    }\n\n    // return new, unset BigInteger\n    function nbi() { return new BigInteger(null); }\n\n    // am: Compute w_j += (x*this_i), propagate carries,\n    // c is initial carry, returns final carry.\n    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n    // We need to select the fastest one that works in this environment.\n\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    function am1(i,x,w,j,c,n) {\n      while(--n >= 0) {\n        var v = x*this[i++]+w[j]+c;\n        c = Math.floor(v/0x4000000);\n        w[j++] = v&0x3ffffff;\n      }\n      return c;\n    }\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    function am2(i,x,w,j,c,n) {\n      var xl = x&0x7fff, xh = x>>15;\n      while(--n >= 0) {\n        var l = this[i]&0x7fff;\n        var h = this[i++]>>15;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n        c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n        w[j++] = l&0x3fffffff;\n      }\n      return c;\n    }\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    function am3(i,x,w,j,c,n) {\n      var xl = x&0x3fff, xh = x>>14;\n      while(--n >= 0) {\n        var l = this[i]&0x3fff;\n        var h = this[i++]>>14;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n        c = (l>>28)+(m>>14)+xh*h;\n        w[j++] = l&0xfffffff;\n      }\n      return c;\n    }\n    var inBrowser = typeof navigator !== \"undefined\";\n    if(inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n      BigInteger.prototype.am = am2;\n      dbits = 30;\n    }\n    else if(inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\n      BigInteger.prototype.am = am1;\n      dbits = 26;\n    }\n    else { // Mozilla/Netscape seems to prefer am3\n      BigInteger.prototype.am = am3;\n      dbits = 28;\n    }\n\n    BigInteger.prototype.DB = dbits;\n    BigInteger.prototype.DM = ((1<<dbits)-1);\n    BigInteger.prototype.DV = (1<<dbits);\n\n    var BI_FP = 52;\n    BigInteger.prototype.FV = Math.pow(2,BI_FP);\n    BigInteger.prototype.F1 = BI_FP-dbits;\n    BigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n    // Digit conversions\n    var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    var BI_RC = new Array();\n    var rr,vv;\n    rr = \"0\".charCodeAt(0);\n    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n    rr = \"a\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n    rr = \"A\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n    function int2char(n) { return BI_RM.charAt(n); }\n    function intAt(s,i) {\n      var c = BI_RC[s.charCodeAt(i)];\n      return (c==null)?-1:c;\n    }\n\n    // (protected) copy this to r\n    function bnpCopyTo(r) {\n      for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n      r.t = this.t;\n      r.s = this.s;\n    }\n\n    // (protected) set from integer value x, -DV <= x < DV\n    function bnpFromInt(x) {\n      this.t = 1;\n      this.s = (x<0)?-1:0;\n      if(x > 0) this[0] = x;\n      else if(x < -1) this[0] = x+this.DV;\n      else this.t = 0;\n    }\n\n    // return bigint initialized to value\n    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n    // (protected) set from string and radix\n    function bnpFromString(s,b) {\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 256) k = 8; // byte array\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else { this.fromRadix(s,b); return; }\n      this.t = 0;\n      this.s = 0;\n      var i = s.length, mi = false, sh = 0;\n      while(--i >= 0) {\n        var x = (k==8)?s[i]&0xff:intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\") mi = true;\n          continue;\n        }\n        mi = false;\n        if(sh == 0)\n          this[this.t++] = x;\n        else if(sh+k > this.DB) {\n          this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n          this[this.t++] = (x>>(this.DB-sh));\n        }\n        else\n          this[this.t-1] |= x<<sh;\n        sh += k;\n        if(sh >= this.DB) sh -= this.DB;\n      }\n      if(k == 8 && (s[0]&0x80) != 0) {\n        this.s = -1;\n        if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n      }\n      this.clamp();\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) clamp off excess high words\n    function bnpClamp() {\n      var c = this.s&this.DM;\n      while(this.t > 0 && this[this.t-1] == c) --this.t;\n    }\n\n    // (public) return string representation in given radix\n    function bnToString(b) {\n      if(this.s < 0) return \"-\"+this.negate().toString(b);\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else return this.toRadix(b);\n      var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n      var p = this.DB-(i*this.DB)%k;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n        while(i >= 0) {\n          if(p < k) {\n            d = (this[i]&((1<<p)-1))<<(k-p);\n            d |= this[--i]>>(p+=this.DB-k);\n          }\n          else {\n            d = (this[i]>>(p-=k))&km;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if(d > 0) m = true;\n          if(m) r += int2char(d);\n        }\n      }\n      return m?r:\"0\";\n    }\n\n    // (public) -this\n    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n    // (public) |this|\n    function bnAbs() { return (this.s<0)?this.negate():this; }\n\n    // (public) return + if this > a, - if this < a, 0 if equal\n    function bnCompareTo(a) {\n      var r = this.s-a.s;\n      if(r != 0) return r;\n      var i = this.t;\n      r = i-a.t;\n      if(r != 0) return (this.s<0)?-r:r;\n      while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n      return 0;\n    }\n\n    // returns bit length of the integer x\n    function nbits(x) {\n      var r = 1, t;\n      if((t=x>>>16) != 0) { x = t; r += 16; }\n      if((t=x>>8) != 0) { x = t; r += 8; }\n      if((t=x>>4) != 0) { x = t; r += 4; }\n      if((t=x>>2) != 0) { x = t; r += 2; }\n      if((t=x>>1) != 0) { x = t; r += 1; }\n      return r;\n    }\n\n    // (public) return the number of bits in \"this\"\n    function bnBitLength() {\n      if(this.t <= 0) return 0;\n      return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n    }\n\n    // (protected) r = this << n*DB\n    function bnpDLShiftTo(n,r) {\n      var i;\n      for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n      for(i = n-1; i >= 0; --i) r[i] = 0;\n      r.t = this.t+n;\n      r.s = this.s;\n    }\n\n    // (protected) r = this >> n*DB\n    function bnpDRShiftTo(n,r) {\n      for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n      r.t = Math.max(this.t-n,0);\n      r.s = this.s;\n    }\n\n    // (protected) r = this << n\n    function bnpLShiftTo(n,r) {\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<cbs)-1;\n      var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n      for(i = this.t-1; i >= 0; --i) {\n        r[i+ds+1] = (this[i]>>cbs)|c;\n        c = (this[i]&bm)<<bs;\n      }\n      for(i = ds-1; i >= 0; --i) r[i] = 0;\n      r[ds] = c;\n      r.t = this.t+ds+1;\n      r.s = this.s;\n      r.clamp();\n    }\n\n    // (protected) r = this >> n\n    function bnpRShiftTo(n,r) {\n      r.s = this.s;\n      var ds = Math.floor(n/this.DB);\n      if(ds >= this.t) { r.t = 0; return; }\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<bs)-1;\n      r[0] = this[ds]>>bs;\n      for(var i = ds+1; i < this.t; ++i) {\n        r[i-ds-1] |= (this[i]&bm)<<cbs;\n        r[i-ds] = this[i]>>bs;\n      }\n      if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n      r.t = this.t-ds;\n      r.clamp();\n    }\n\n    // (protected) r = this - a\n    function bnpSubTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]-a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c -= a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c -= a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c -= a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c < -1) r[i++] = this.DV+c;\n      else if(c > 0) r[i++] = c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyTo(a,r) {\n      var x = this.abs(), y = a.abs();\n      var i = x.t;\n      r.t = i+y.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n      r.s = 0;\n      r.clamp();\n      if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (protected) r = this^2, r != this (HAC 14.16)\n    function bnpSquareTo(r) {\n      var x = this.abs();\n      var i = r.t = 2*x.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < x.t-1; ++i) {\n        var c = x.am(i,x[i],r,2*i,0,1);\n        if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n          r[i+x.t] -= x.DV;\n          r[i+x.t+1] = 1;\n        }\n      }\n      if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n      r.s = 0;\n      r.clamp();\n    }\n\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    function bnpDivRemTo(m,q,r) {\n      var pm = m.abs();\n      if(pm.t <= 0) return;\n      var pt = this.abs();\n      if(pt.t < pm.t) {\n        if(q != null) q.fromInt(0);\n        if(r != null) this.copyTo(r);\n        return;\n      }\n      if(r == null) r = nbi();\n      var y = nbi(), ts = this.s, ms = m.s;\n      var nsh = this.DB-nbits(pm[pm.t-1]);   // normalize modulus\n      if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n      else { pm.copyTo(y); pt.copyTo(r); }\n      var ys = y.t;\n      var y0 = y[ys-1];\n      if(y0 == 0) return;\n      var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n      var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n      var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n      y.dlShiftTo(j,t);\n      if(r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t,r);\n      }\n      BigInteger.ONE.dlShiftTo(ys,t);\n      t.subTo(y,y);  // \"negative\" y so we can replace sub with am later\n      while(y.t < ys) y[y.t++] = 0;\n      while(--j >= 0) {\n        // Estimate quotient digit\n        var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n        if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {   // Try it out\n          y.dlShiftTo(j,t);\n          r.subTo(t,r);\n          while(r[i] < --qd) r.subTo(t,r);\n        }\n      }\n      if(q != null) {\n        r.drShiftTo(ys,q);\n        if(ts != ms) BigInteger.ZERO.subTo(q,q);\n      }\n      r.t = ys;\n      r.clamp();\n      if(nsh > 0) r.rShiftTo(nsh,r); // Denormalize remainder\n      if(ts < 0) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (public) this mod a\n    function bnMod(a) {\n      var r = nbi();\n      this.abs().divRemTo(a,null,r);\n      if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n      return r;\n    }\n\n    // Modular reduction using \"classic\" algorithm\n    function Classic(m) { this.m = m; }\n    function cConvert(x) {\n      if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n      else return x;\n    }\n    function cRevert(x) { return x; }\n    function cReduce(x) { x.divRemTo(this.m,null,x); }\n    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    Classic.prototype.convert = cConvert;\n    Classic.prototype.revert = cRevert;\n    Classic.prototype.reduce = cReduce;\n    Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.sqrTo = cSqrTo;\n\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n    function bnpInvDigit() {\n      if(this.t < 1) return 0;\n      var x = this[0];\n      if((x&1) == 0) return 0;\n      var y = x&3;       // y == 1/x mod 2^2\n      y = (y*(2-(x&0xf)*y))&0xf; // y == 1/x mod 2^4\n      y = (y*(2-(x&0xff)*y))&0xff;   // y == 1/x mod 2^8\n      y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;    // y == 1/x mod 2^16\n      // last step - calculate inverse mod DV directly;\n      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n      y = (y*(2-x*y%this.DV))%this.DV;       // y == 1/x mod 2^dbits\n      // we really want the negative inverse, and -DV < y < DV\n      return (y>0)?this.DV-y:-y;\n    }\n\n    // Montgomery reduction\n    function Montgomery(m) {\n      this.m = m;\n      this.mp = m.invDigit();\n      this.mpl = this.mp&0x7fff;\n      this.mph = this.mp>>15;\n      this.um = (1<<(m.DB-15))-1;\n      this.mt2 = 2*m.t;\n    }\n\n    // xR mod m\n    function montConvert(x) {\n      var r = nbi();\n      x.abs().dlShiftTo(this.m.t,r);\n      r.divRemTo(this.m,null,r);\n      if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n      return r;\n    }\n\n    // x/R mod m\n    function montRevert(x) {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n\n    // x = x/R mod m (HAC 14.32)\n    function montReduce(x) {\n      while(x.t <= this.mt2) // pad x so am has enough room later\n        x[x.t++] = 0;\n      for(var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i]&0x7fff;\n        var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i+this.m.t;\n        x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n        // propagate carry\n        while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n      }\n      x.clamp();\n      x.drShiftTo(this.m.t,x);\n      if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = \"x^2/R mod m\"; x != r\n    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = \"xy/R mod m\"; x,y != r\n    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Montgomery.prototype.convert = montConvert;\n    Montgomery.prototype.revert = montRevert;\n    Montgomery.prototype.reduce = montReduce;\n    Montgomery.prototype.mulTo = montMulTo;\n    Montgomery.prototype.sqrTo = montSqrTo;\n\n    // (protected) true iff this is even\n    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n    function bnpExp(e,z) {\n      if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n      var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n      g.copyTo(r);\n      while(--i >= 0) {\n        z.sqrTo(r,r2);\n        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n        else { var t = r; r = r2; r2 = t; }\n      }\n      return z.revert(r);\n    }\n\n    // (public) this^e % m, 0 <= e < 2^32\n    function bnModPowInt(e,m) {\n      var z;\n      if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n      return this.exp(e,z);\n    }\n\n    // protected\n    BigInteger.prototype.copyTo = bnpCopyTo;\n    BigInteger.prototype.fromInt = bnpFromInt;\n    BigInteger.prototype.fromString = bnpFromString;\n    BigInteger.prototype.clamp = bnpClamp;\n    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    BigInteger.prototype.subTo = bnpSubTo;\n    BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    BigInteger.prototype.squareTo = bnpSquareTo;\n    BigInteger.prototype.divRemTo = bnpDivRemTo;\n    BigInteger.prototype.invDigit = bnpInvDigit;\n    BigInteger.prototype.isEven = bnpIsEven;\n    BigInteger.prototype.exp = bnpExp;\n\n    // public\n    BigInteger.prototype.toString = bnToString;\n    BigInteger.prototype.negate = bnNegate;\n    BigInteger.prototype.abs = bnAbs;\n    BigInteger.prototype.compareTo = bnCompareTo;\n    BigInteger.prototype.bitLength = bnBitLength;\n    BigInteger.prototype.mod = bnMod;\n    BigInteger.prototype.modPowInt = bnModPowInt;\n\n    // \"constants\"\n    BigInteger.ZERO = nbv(0);\n    BigInteger.ONE = nbv(1);\n\n    // Copyright (c) 2005-2009  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Extended JavaScript BN functions, required for RSA private ops.\n\n    // Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n    // Version 1.2: square() API, isProbablePrime fix\n\n    // (public)\n    function bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n    // (public) return value as integer\n    function bnIntValue() {\n      if(this.s < 0) {\n        if(this.t == 1) return this[0]-this.DV;\n        else if(this.t == 0) return -1;\n      }\n      else if(this.t == 1) return this[0];\n      else if(this.t == 0) return 0;\n      // assumes 16 < DB < 32\n      return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n    }\n\n    // (public) return value as byte\n    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n    // (public) return value as short (assumes DB>=16)\n    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n    // (protected) return x s.t. r^x < DV\n    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n    // (public) 0 if this == 0, 1 if this > 0\n    function bnSigNum() {\n      if(this.s < 0) return -1;\n      else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n      else return 1;\n    }\n\n    // (protected) convert to radix string\n    function bnpToRadix(b) {\n      if(b == null) b = 10;\n      if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n      var cs = this.chunkSize(b);\n      var a = Math.pow(b,cs);\n      var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n      this.divRemTo(d,y,z);\n      while(y.signum() > 0) {\n        r = (a+z.intValue()).toString(b).substr(1) + r;\n        y.divRemTo(d,y,z);\n      }\n      return z.intValue().toString(b) + r;\n    }\n\n    // (protected) convert from radix string\n    function bnpFromRadix(s,b) {\n      this.fromInt(0);\n      if(b == null) b = 10;\n      var cs = this.chunkSize(b);\n      var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n      for(var i = 0; i < s.length; ++i) {\n        var x = intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n          continue;\n        }\n        w = b*w+x;\n        if(++j >= cs) {\n          this.dMultiply(d);\n          this.dAddOffset(w,0);\n          j = 0;\n          w = 0;\n        }\n      }\n      if(j > 0) {\n        this.dMultiply(Math.pow(b,j));\n        this.dAddOffset(w,0);\n      }\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) alternate constructor\n    function bnpFromNumber(a,b,c) {\n      if(\"number\" == typeof b) {\n        // new BigInteger(int,int,RNG)\n        if(a < 2) this.fromInt(1);\n        else {\n          this.fromNumber(a,c);\n          if(!this.testBit(a-1))\t// force MSB set\n            this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n          if(this.isEven()) this.dAddOffset(1,0); // force odd\n          while(!this.isProbablePrime(b)) {\n            this.dAddOffset(2,0);\n            if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n          }\n        }\n      }\n      else {\n        // new BigInteger(int,RNG)\n        var x = new Array(), t = a&7;\n        x.length = (a>>3)+1;\n        b.nextBytes(x);\n        if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n        this.fromString(x,256);\n      }\n    }\n\n    // (public) convert to bigendian byte array\n    function bnToByteArray() {\n      var i = this.t, r = new Array();\n      r[0] = this.s;\n      var p = this.DB-(i*this.DB)%8, d, k = 0;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n          r[k++] = d|(this.s<<(this.DB-p));\n        while(i >= 0) {\n          if(p < 8) {\n            d = (this[i]&((1<<p)-1))<<(8-p);\n            d |= this[--i]>>(p+=this.DB-8);\n          }\n          else {\n            d = (this[i]>>(p-=8))&0xff;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if((d&0x80) != 0) d |= -256;\n          if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n          if(k > 0 || d != this.s) r[k++] = d;\n        }\n      }\n      return r;\n    }\n\n    function bnEquals(a) { return(this.compareTo(a)==0); }\n    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }\n    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n    // (protected) r = this op a (bitwise)\n    function bnpBitwiseTo(a,op,r) {\n      var i, f, m = Math.min(a.t,this.t);\n      for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n      if(a.t < this.t) {\n        f = a.s&this.DM;\n        for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n        r.t = this.t;\n      }\n      else {\n        f = this.s&this.DM;\n        for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n        r.t = a.t;\n      }\n      r.s = op(this.s,a.s);\n      r.clamp();\n    }\n\n    // (public) this & a\n    function op_and(x,y) { return x&y; }\n    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n    // (public) this | a\n    function op_or(x,y) { return x|y; }\n    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n    // (public) this ^ a\n    function op_xor(x,y) { return x^y; }\n    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n    // (public) this & ~a\n    function op_andnot(x,y) { return x&~y; }\n    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n    // (public) ~this\n    function bnNot() {\n      var r = nbi();\n      for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n      r.t = this.t;\n      r.s = ~this.s;\n      return r;\n    }\n\n    // (public) this << n\n    function bnShiftLeft(n) {\n      var r = nbi();\n      if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n      return r;\n    }\n\n    // (public) this >> n\n    function bnShiftRight(n) {\n      var r = nbi();\n      if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n      return r;\n    }\n\n    // return index of lowest 1-bit in x, x < 2^31\n    function lbit(x) {\n      if(x == 0) return -1;\n      var r = 0;\n      if((x&0xffff) == 0) { x >>= 16; r += 16; }\n      if((x&0xff) == 0) { x >>= 8; r += 8; }\n      if((x&0xf) == 0) { x >>= 4; r += 4; }\n      if((x&3) == 0) { x >>= 2; r += 2; }\n      if((x&1) == 0) ++r;\n      return r;\n    }\n\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    function bnGetLowestSetBit() {\n      for(var i = 0; i < this.t; ++i)\n        if(this[i] != 0) return i*this.DB+lbit(this[i]);\n      if(this.s < 0) return this.t*this.DB;\n      return -1;\n    }\n\n    // return number of 1 bits in x\n    function cbit(x) {\n      var r = 0;\n      while(x != 0) { x &= x-1; ++r; }\n      return r;\n    }\n\n    // (public) return number of set bits\n    function bnBitCount() {\n      var r = 0, x = this.s&this.DM;\n      for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n      return r;\n    }\n\n    // (public) true iff nth bit is set\n    function bnTestBit(n) {\n      var j = Math.floor(n/this.DB);\n      if(j >= this.t) return(this.s!=0);\n      return((this[j]&(1<<(n%this.DB)))!=0);\n    }\n\n    // (protected) this op (1<<n)\n    function bnpChangeBit(n,op) {\n      var r = BigInteger.ONE.shiftLeft(n);\n      this.bitwiseTo(r,op,r);\n      return r;\n    }\n\n    // (public) this | (1<<n)\n    function bnSetBit(n) { return this.changeBit(n,op_or); }\n\n    // (public) this & ~(1<<n)\n    function bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n    // (public) this ^ (1<<n)\n    function bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n    // (protected) r = this + a\n    function bnpAddTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]+a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c += a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c += a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c > 0) r[i++] = c;\n      else if(c < -1) r[i++] = this.DV+c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (public) this + a\n    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n    // (public) this - a\n    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n    // (public) this * a\n    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n    // (public) this^2\n    function bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n    // (public) this / a\n    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n    // (public) this % a\n    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n    // (public) [this/a,this%a]\n    function bnDivideAndRemainder(a) {\n      var q = nbi(), r = nbi();\n      this.divRemTo(a,q,r);\n      return new Array(q,r);\n    }\n\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    function bnpDMultiply(n) {\n      this[this.t] = this.am(0,n-1,this,0,0,this.t);\n      ++this.t;\n      this.clamp();\n    }\n\n    // (protected) this += n << w words, this >= 0\n    function bnpDAddOffset(n,w) {\n      if(n == 0) return;\n      while(this.t <= w) this[this.t++] = 0;\n      this[w] += n;\n      while(this[w] >= this.DV) {\n        this[w] -= this.DV;\n        if(++w >= this.t) this[this.t++] = 0;\n        ++this[w];\n      }\n    }\n\n    // A \"null\" reducer\n    function NullExp() {}\n    function nNop(x) { return x; }\n    function nMulTo(x,y,r) { x.multiplyTo(y,r); }\n    function nSqrTo(x,r) { x.squareTo(r); }\n\n    NullExp.prototype.convert = nNop;\n    NullExp.prototype.revert = nNop;\n    NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.sqrTo = nSqrTo;\n\n    // (public) this^e\n    function bnPow(e) { return this.exp(e,new NullExp()); }\n\n    // (protected) r = lower n words of \"this * a\", a.t <= n\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyLowerTo(a,n,r) {\n      var i = Math.min(this.t+a.t,n);\n      r.s = 0; // assumes a,this >= 0\n      r.t = i;\n      while(i > 0) r[--i] = 0;\n      var j;\n      for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n      for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n      r.clamp();\n    }\n\n    // (protected) r = \"this * a\" without lower n words, n > 0\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyUpperTo(a,n,r) {\n      --n;\n      var i = r.t = this.t+a.t-n;\n      r.s = 0; // assumes a,this >= 0\n      while(--i >= 0) r[i] = 0;\n      for(i = Math.max(n-this.t,0); i < a.t; ++i)\n        r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n      r.clamp();\n      r.drShiftTo(1,r);\n    }\n\n    // Barrett modular reduction\n    function Barrett(m) {\n      // setup Barrett\n      this.r2 = nbi();\n      this.q3 = nbi();\n      BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n      this.mu = this.r2.divide(m);\n      this.m = m;\n    }\n\n    function barrettConvert(x) {\n      if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n      else if(x.compareTo(this.m) < 0) return x;\n      else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n    }\n\n    function barrettRevert(x) { return x; }\n\n    // x = x mod m (HAC 14.42)\n    function barrettReduce(x) {\n      x.drShiftTo(this.m.t-1,this.r2);\n      if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n      this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n      this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n      while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n      x.subTo(this.r2,x);\n      while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = x^2 mod m; x != r\n    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = x*y mod m; x,y != r\n    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.reduce = barrettReduce;\n    Barrett.prototype.mulTo = barrettMulTo;\n    Barrett.prototype.sqrTo = barrettSqrTo;\n\n    // (public) this^e % m (HAC 14.85)\n    function bnModPow(e,m) {\n      var i = e.bitLength(), k, r = nbv(1), z;\n      if(i <= 0) return r;\n      else if(i < 18) k = 1;\n      else if(i < 48) k = 3;\n      else if(i < 144) k = 4;\n      else if(i < 768) k = 5;\n      else k = 6;\n      if(i < 8)\n        z = new Classic(m);\n      else if(m.isEven())\n        z = new Barrett(m);\n      else\n        z = new Montgomery(m);\n\n      // precomputation\n      var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n      g[1] = z.convert(this);\n      if(k > 1) {\n        var g2 = nbi();\n        z.sqrTo(g[1],g2);\n        while(n <= km) {\n          g[n] = nbi();\n          z.mulTo(g2,g[n-2],g[n]);\n          n += 2;\n        }\n      }\n\n      var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n      i = nbits(e[j])-1;\n      while(j >= 0) {\n        if(i >= k1) w = (e[j]>>(i-k1))&km;\n        else {\n          w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n          if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n        }\n\n        n = k;\n        while((w&1) == 0) { w >>= 1; --n; }\n        if((i -= n) < 0) { i += this.DB; --j; }\n        if(is1) {\t// ret == 1, don't bother squaring or multiplying it\n          g[w].copyTo(r);\n          is1 = false;\n        }\n        else {\n          while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n          if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n          z.mulTo(r2,g[w],r);\n        }\n\n        while(j >= 0 && (e[j]&(1<<i)) == 0) {\n          z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n          if(--i < 0) { i = this.DB-1; --j; }\n        }\n      }\n      return z.revert(r);\n    }\n\n    // (public) gcd(this,a) (HAC 14.54)\n    function bnGCD(a) {\n      var x = (this.s<0)?this.negate():this.clone();\n      var y = (a.s<0)?a.negate():a.clone();\n      if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n      var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n      if(g < 0) return x;\n      if(i < g) g = i;\n      if(g > 0) {\n        x.rShiftTo(g,x);\n        y.rShiftTo(g,y);\n      }\n      while(x.signum() > 0) {\n        if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n        if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n        if(x.compareTo(y) >= 0) {\n          x.subTo(y,x);\n          x.rShiftTo(1,x);\n        }\n        else {\n          y.subTo(x,y);\n          y.rShiftTo(1,y);\n        }\n      }\n      if(g > 0) y.lShiftTo(g,y);\n      return y;\n    }\n\n    // (protected) this % n, n < 2^26\n    function bnpModInt(n) {\n      if(n <= 0) return 0;\n      var d = this.DV%n, r = (this.s<0)?n-1:0;\n      if(this.t > 0)\n        if(d == 0) r = this[0]%n;\n        else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n      return r;\n    }\n\n    // (public) 1/this % m (HAC 14.61)\n    function bnModInverse(m) {\n      var ac = m.isEven();\n      if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n      var u = m.clone(), v = this.clone();\n      var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n      while(u.signum() != 0) {\n        while(u.isEven()) {\n          u.rShiftTo(1,u);\n          if(ac) {\n            if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n            a.rShiftTo(1,a);\n          }\n          else if(!b.isEven()) b.subTo(m,b);\n          b.rShiftTo(1,b);\n        }\n        while(v.isEven()) {\n          v.rShiftTo(1,v);\n          if(ac) {\n            if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n            c.rShiftTo(1,c);\n          }\n          else if(!d.isEven()) d.subTo(m,d);\n          d.rShiftTo(1,d);\n        }\n        if(u.compareTo(v) >= 0) {\n          u.subTo(v,u);\n          if(ac) a.subTo(c,a);\n          b.subTo(d,b);\n        }\n        else {\n          v.subTo(u,v);\n          if(ac) c.subTo(a,c);\n          d.subTo(b,d);\n        }\n      }\n      if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n      if(d.compareTo(m) >= 0) return d.subtract(m);\n      if(d.signum() < 0) d.addTo(m,d); else return d;\n      if(d.signum() < 0) return d.add(m); else return d;\n    }\n\n    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n    var lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n    // (public) test primality with certainty >= 1-.5^t\n    function bnIsProbablePrime(t) {\n      var i, x = this.abs();\n      if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n        for(i = 0; i < lowprimes.length; ++i)\n          if(x[0] == lowprimes[i]) return true;\n        return false;\n      }\n      if(x.isEven()) return false;\n      i = 1;\n      while(i < lowprimes.length) {\n        var m = lowprimes[i], j = i+1;\n        while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n        m = x.modInt(m);\n        while(i < j) if(m%lowprimes[i++] == 0) return false;\n      }\n      return x.millerRabin(t);\n    }\n\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    function bnpMillerRabin(t) {\n      var n1 = this.subtract(BigInteger.ONE);\n      var k = n1.getLowestSetBit();\n      if(k <= 0) return false;\n      var r = n1.shiftRight(k);\n      t = (t+1)>>1;\n      if(t > lowprimes.length) t = lowprimes.length;\n      var a = nbi();\n      for(var i = 0; i < t; ++i) {\n        //Pick bases at random, instead of starting at 2\n        a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n        var y = a.modPow(r,this);\n        if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n          var j = 1;\n          while(j++ < k && y.compareTo(n1) != 0) {\n            y = y.modPowInt(2,this);\n            if(y.compareTo(BigInteger.ONE) == 0) return false;\n          }\n          if(y.compareTo(n1) != 0) return false;\n        }\n      }\n      return true;\n    }\n\n    // protected\n    BigInteger.prototype.chunkSize = bnpChunkSize;\n    BigInteger.prototype.toRadix = bnpToRadix;\n    BigInteger.prototype.fromRadix = bnpFromRadix;\n    BigInteger.prototype.fromNumber = bnpFromNumber;\n    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    BigInteger.prototype.changeBit = bnpChangeBit;\n    BigInteger.prototype.addTo = bnpAddTo;\n    BigInteger.prototype.dMultiply = bnpDMultiply;\n    BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    BigInteger.prototype.modInt = bnpModInt;\n    BigInteger.prototype.millerRabin = bnpMillerRabin;\n\n    // public\n    BigInteger.prototype.clone = bnClone;\n    BigInteger.prototype.intValue = bnIntValue;\n    BigInteger.prototype.byteValue = bnByteValue;\n    BigInteger.prototype.shortValue = bnShortValue;\n    BigInteger.prototype.signum = bnSigNum;\n    BigInteger.prototype.toByteArray = bnToByteArray;\n    BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.not = bnNot;\n    BigInteger.prototype.shiftLeft = bnShiftLeft;\n    BigInteger.prototype.shiftRight = bnShiftRight;\n    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    BigInteger.prototype.bitCount = bnBitCount;\n    BigInteger.prototype.testBit = bnTestBit;\n    BigInteger.prototype.setBit = bnSetBit;\n    BigInteger.prototype.clearBit = bnClearBit;\n    BigInteger.prototype.flipBit = bnFlipBit;\n    BigInteger.prototype.add = bnAdd;\n    BigInteger.prototype.subtract = bnSubtract;\n    BigInteger.prototype.multiply = bnMultiply;\n    BigInteger.prototype.divide = bnDivide;\n    BigInteger.prototype.remainder = bnRemainder;\n    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    BigInteger.prototype.modPow = bnModPow;\n    BigInteger.prototype.modInverse = bnModInverse;\n    BigInteger.prototype.pow = bnPow;\n    BigInteger.prototype.gcd = bnGCD;\n    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n    // JSBN-specific extension\n    BigInteger.prototype.square = bnSquare;\n\n    // Expose the Barrett function\n    BigInteger.prototype.Barrett = Barrett\n\n    // BigInteger interfaces not implemented in jsbn:\n\n    // BigInteger(int signum, byte[] magnitude)\n    // double doubleValue()\n    // float floatValue()\n    // int hashCode()\n    // long longValue()\n    // static BigInteger valueOf(long val)\n\n\t// Random number generator - requires a PRNG backend, e.g. prng4.js\n\n\t// For best results, put code like\n\t// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n\t// in your main HTML document.\n\n\tvar rng_state;\n\tvar rng_pool;\n\tvar rng_pptr;\n\n\t// Mix in a 32-bit integer into the pool\n\tfunction rng_seed_int(x) {\n\t  rng_pool[rng_pptr++] ^= x & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n\t  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n\t}\n\n\t// Mix in the current time (w/milliseconds) into the pool\n\tfunction rng_seed_time() {\n\t  rng_seed_int(new Date().getTime());\n\t}\n\n\t// Initialize the pool with junk if needed.\n\tif(rng_pool == null) {\n\t  rng_pool = new Array();\n\t  rng_pptr = 0;\n\t  var t;\n\t  if(typeof window !== \"undefined\" && window.crypto) {\n\t\tif (window.crypto.getRandomValues) {\n\t\t  // Use webcrypto if available\n\t\t  var ua = new Uint8Array(32);\n\t\t  window.crypto.getRandomValues(ua);\n\t\t  for(t = 0; t < 32; ++t)\n\t\t\trng_pool[rng_pptr++] = ua[t];\n\t\t}\n\t\telse if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\") {\n\t\t  // Extract entropy (256 bits) from NS4 RNG if available\n\t\t  var z = window.crypto.random(32);\n\t\t  for(t = 0; t < z.length; ++t)\n\t\t\trng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n\t\t}\n\t  }\n\t  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n\t\tt = Math.floor(65536 * Math.random());\n\t\trng_pool[rng_pptr++] = t >>> 8;\n\t\trng_pool[rng_pptr++] = t & 255;\n\t  }\n\t  rng_pptr = 0;\n\t  rng_seed_time();\n\t  //rng_seed_int(window.screenX);\n\t  //rng_seed_int(window.screenY);\n\t}\n\n\tfunction rng_get_byte() {\n\t  if(rng_state == null) {\n\t\trng_seed_time();\n\t\trng_state = prng_newstate();\n\t\trng_state.init(rng_pool);\n\t\tfor(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n\t\t  rng_pool[rng_pptr] = 0;\n\t\trng_pptr = 0;\n\t\t//rng_pool = null;\n\t  }\n\t  // TODO: allow reseeding after first request\n\t  return rng_state.next();\n\t}\n\n\tfunction rng_get_bytes(ba) {\n\t  var i;\n\t  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n\t}\n\n\tfunction SecureRandom() {}\n\n\tSecureRandom.prototype.nextBytes = rng_get_bytes;\n\n\t// prng4.js - uses Arcfour as a PRNG\n\n\tfunction Arcfour() {\n\t  this.i = 0;\n\t  this.j = 0;\n\t  this.S = new Array();\n\t}\n\n\t// Initialize arcfour context from key, an array of ints, each from [0..255]\n\tfunction ARC4init(key) {\n\t  var i, j, t;\n\t  for(i = 0; i < 256; ++i)\n\t\tthis.S[i] = i;\n\t  j = 0;\n\t  for(i = 0; i < 256; ++i) {\n\t\tj = (j + this.S[i] + key[i % key.length]) & 255;\n\t\tt = this.S[i];\n\t\tthis.S[i] = this.S[j];\n\t\tthis.S[j] = t;\n\t  }\n\t  this.i = 0;\n\t  this.j = 0;\n\t}\n\n\tfunction ARC4next() {\n\t  var t;\n\t  this.i = (this.i + 1) & 255;\n\t  this.j = (this.j + this.S[this.i]) & 255;\n\t  t = this.S[this.i];\n\t  this.S[this.i] = this.S[this.j];\n\t  this.S[this.j] = t;\n\t  return this.S[(t + this.S[this.i]) & 255];\n\t}\n\n\tArcfour.prototype.init = ARC4init;\n\tArcfour.prototype.next = ARC4next;\n\n\t// Plug in your RNG constructor here\n\tfunction prng_newstate() {\n\t  return new Arcfour();\n\t}\n\n\t// Pool size must be a multiple of 4 and greater than 32.\n\t// An array of bytes the size of the pool will be passed to init()\n\tvar rng_psize = 256;\n\n    if (typeof exports !== 'undefined') {\n        exports = module.exports = {\n\t\t\tBigInteger: BigInteger,\n\t\t\tSecureRandom: SecureRandom,\n\t\t};\n    } else {\n        this.BigInteger = BigInteger;\n        this.SecureRandom = SecureRandom;\n    }\n\n}).call(this);\n"]}