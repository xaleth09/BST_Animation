{"version":3,"sources":["debug.js"],"names":[],"mappings":"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","file":"debug-compiled.js","sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"]}