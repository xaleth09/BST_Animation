{"version":3,"sources":["uri.js"],"names":[],"mappings":"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","file":"uri-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Http = require('http');\r\nvar Url = require('url');\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Hoek = require('hoek');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Uri', function () {\r\n\r\n    var credentialsFunc = function (id, callback) {\r\n\r\n        var credentials = {\r\n            id: id,\r\n            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\r\n            algorithm: (id === '1' ? 'sha1' : 'sha256'),\r\n            user: 'steve'\r\n        };\r\n\r\n        return callback(null, credentials);\r\n    };\r\n\r\n    it('should generate a bewit then successfully authenticate it', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2',\r\n            host: 'example.com',\r\n            port: 80\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials1, ttlSec: 60 * 60 * 24 * 365 * 100, ext: 'some-app-data' });\r\n            req.url += '&bewit=' + bewit;\r\n\r\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials2, attributes) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(attributes.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('should generate a bewit then successfully authenticate it (no ext)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2',\r\n            host: 'example.com',\r\n            port: 80\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials1, ttlSec: 60 * 60 * 24 * 365 * 100 });\r\n            req.url += '&bewit=' + bewit;\r\n\r\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials2, attributes) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('should successfully authenticate a request (last param)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2&bewit=MTIzNDU2XDQ1MTE0ODQ2MjFcMzFjMmNkbUJFd1NJRVZDOVkva1NFb2c3d3YrdEVNWjZ3RXNmOGNHU2FXQT1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.not.exist();\r\n            expect(credentials.user).to.equal('steve');\r\n            expect(attributes.ext).to.equal('some-app-data');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should successfully authenticate a request (first param)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2MjFcMzFjMmNkbUJFd1NJRVZDOVkva1NFb2c3d3YrdEVNWjZ3RXNmOGNHU2FXQT1cc29tZS1hcHAtZGF0YQ&a=1&b=2',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.not.exist();\r\n            expect(credentials.user).to.equal('steve');\r\n            expect(attributes.ext).to.equal('some-app-data');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should successfully authenticate a request (only param)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2NDFcZm1CdkNWT3MvcElOTUUxSTIwbWhrejQ3UnBwTmo4Y1VrSHpQd3Q5OXJ1cz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.not.exist();\r\n            expect(credentials.user).to.equal('steve');\r\n            expect(attributes.ext).to.equal('some-app-data');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on multiple authentication', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2NDFcZm1CdkNWT3MvcElOTUUxSTIwbWhrejQ3UnBwTmo4Y1VrSHpQd3Q5OXJ1cz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080,\r\n            authorization: 'Basic asdasdasdasd'\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Multiple authentications');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on method other than GET', function (done) {\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                host: 'example.com',\r\n                port: 8080\r\n            };\r\n\r\n            var exp = Math.floor(Hawk.utils.now() / 1000) + 60;\r\n            var ext = 'some-app-data';\r\n            var mac = Hawk.crypto.calculateMac('bewit', credentials1, {\r\n                timestamp: exp,\r\n                nonce: '',\r\n                method: req.method,\r\n                resource: req.url,\r\n                host: req.host,\r\n                port: req.port,\r\n                ext: ext\r\n            });\r\n\r\n            var bewit = credentials1.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + ext;\r\n\r\n            req.url += '&bewit=' + Hoek.base64urlEncode(bewit);\r\n\r\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials2, attributes) {\r\n\r\n                expect(err).to.exist();\r\n                expect(err.output.payload.message).to.equal('Invalid method');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid host header', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            headers: {\r\n                host: 'example.com:something'\r\n            }\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Invalid Host header');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on empty bewit', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Empty bewit');\r\n            expect(err.isMissing).to.not.exist();\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid bewit', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=*',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Invalid bewit encoding');\r\n            expect(err.isMissing).to.not.exist();\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on missing bewit', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.not.exist();\r\n            expect(err.isMissing).to.equal(true);\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid bewit structure', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=abc',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Invalid bewit structure');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on empty bewit attribute', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=YVxcY1xk',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Missing bewit attributes');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on missing bewit id attribute', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=XDQ1NTIxNDc2MjJcK0JFbFhQMXhuWjcvd1Nrbm1ldGhlZm5vUTNHVjZNSlFVRHk4NWpTZVJ4VT1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Missing bewit attributes');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on expired access', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2&bewit=MTIzNDU2XDEzNTY0MTg1ODNcWk1wZlMwWU5KNHV0WHpOMmRucTRydEk3NXNXTjFjeWVITTcrL0tNZFdVQT1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Access expired');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on credentials function error', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(Hawk.error.badRequest('Boom'));\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Boom');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on credentials function error with credentials', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(Hawk.error.badRequest('Boom'), { some: 'value' });\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Boom');\r\n            expect(credentials.some).to.equal('value');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on null credentials function response', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, null);\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Unknown credentials');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid credentials function response', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, {});\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.message).to.equal('Invalid credentials');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid credentials function response (unknown algorithm)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, { key: 'xxx', algorithm: 'xxx' });\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.message).to.equal('Unknown algorithm');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on expired access', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, { key: 'xxx', algorithm: 'sha256' });\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Bad mac');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('getBewit()', function () {\r\n\r\n        it('returns a valid bewit value', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\r\n            done();\r\n        });\r\n\r\n        it('returns a valid bewit value (explicit port)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com:8080/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcaFpiSjNQMmNLRW80a3kwQzhqa1pBa1J5Q1p1ZWc0V1NOYnhWN3ZxM3hIVT1ceGFuZHlhbmR6');\r\n            done();\r\n        });\r\n\r\n        it('returns a valid bewit value (null ext)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: null });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcSUdZbUxnSXFMckNlOEN4dktQczRKbFdJQStValdKSm91d2dBUmlWaENBZz1c');\r\n            done();\r\n        });\r\n\r\n        it('returns a valid bewit value (parsed uri)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit(Url.parse('https://example.com/somewhere/over/the/rainbow'), { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid options', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', 4);\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on missing uri', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid uri', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit(5, { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid credentials (id)', function (done) {\r\n\r\n            var credentials = {\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on missing credentials', function (done) {\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { ttlSec: 3000, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid credentials (key)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid algorithm', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'hmac-sha-0'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on missing options', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'hmac-sha-0'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow');\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('authenticateMessage()', function () {\r\n\r\n        it('should generate an authorization then successfully parse it', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.not.exist();\r\n                    expect(credentials2.user).to.equal('steve');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on mismatching host', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example1.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Bad mac');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on stale timestamp', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { localtimeOffsetMsec: 100000 }, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Stale timestamp');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('overrides timestampSkewSec', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1, localtimeOffsetMsec: 100000 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { timestampSkewSec: 500 }, function (err, credentials2) {\r\n\r\n                    expect(err).to.not.exist();\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on invalid authorization', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n                delete auth.id;\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Invalid authorization');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on bad hash', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message1', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Bad message hash');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on nonce error', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {\r\n                    nonceFunc: function (key, nonce, ts, callback) {\r\n\r\n                        callback(new Error('kaboom'));\r\n                    }\r\n                }, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Invalid nonce');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on credentials error', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback(new Error('kablooey'));\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('kablooey');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on missing credentials', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback();\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Unknown credentials');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on invalid credentials', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback(null, {});\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Invalid credentials');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on invalid credentials algorithm', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback(null, { key: '123', algorithm: '456' });\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Unknown algorithm');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail on missing host', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message(null, 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.not.exist();\r\n                done();\r\n            });\r\n        });\r\n\r\n        it('should fail on missing credentials', function (done) {\r\n\r\n            var auth = Hawk.client.message('example.com', 8080, 'some message', {});\r\n            expect(auth).to.not.exist();\r\n            done();\r\n        });\r\n\r\n        it('should fail on invalid algorithm', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var creds = Hoek.clone(credentials1);\r\n                creds.algorithm = 'blah';\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: creds });\r\n                expect(auth).to.not.exist();\r\n                done();\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n"]}