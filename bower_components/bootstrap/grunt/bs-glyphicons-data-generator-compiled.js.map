{"version":3,"sources":["bs-glyphicons-data-generator.js"],"names":[],"mappings":";;;;;;;AAOA;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,OAAO,OAAP,GAAiB,SAAS,sBAAT,CAAgC,KAAhC,EAAuC;;;AAGtD,MAAI,iBAAiB,GAAG,YAAH,CAAgB,sBAAhB,EAAwC,MAAxC,CAArB;AACA,MAAI,kBAAkB,eAAe,KAAf,CAAqB,IAArB,CAAtB;;;AAGA,MAAI,gBAAgB,8BAApB;AACA,MAAI,iBAAiB,yEACA,+DADrB;AAEA,MAAI,gBAAgB,2BAApB;AACA,OAAK,IAAI,IAAI,CAAR,EAAW,MAAM,gBAAgB,MAAtC,EAA8C,IAAI,GAAlD,EAAuD,GAAvD,EAA4D;AAC1D,QAAI,QAAQ,gBAAgB,CAAhB,EAAmB,KAAnB,CAAyB,aAAzB,CAAZ;;AAEA,QAAI,UAAU,IAAd,EAAoB;AAClB,wBAAkB,OAAO,MAAM,CAAN,CAAP,GAAkB,IAApC;AACD;AACF;;;AAGD,MAAI,CAAC,GAAG,UAAH,CAAc,YAAd,CAAL,EAAkC;AAChC,OAAG,SAAH,CAAa,YAAb;AACD;;AAED,MAAI;AACF,OAAG,aAAH,CAAiB,aAAjB,EAAgC,cAAhC;AACD,GAFD,CAEE,OAAO,GAAP,EAAY;AACZ,UAAM,IAAN,CAAW,IAAX,CAAgB,GAAhB;AACD;AACD,QAAM,GAAN,CAAU,OAAV,CAAkB,UAAU,cAAc,IAAxB,GAA+B,WAAjD;AACD,CA9BD","file":"bs-glyphicons-data-generator-compiled.js","sourcesContent":["/*!\n * Bootstrap Grunt task for Glyphicons data generation\n * http://getbootstrap.com\n * Copyright 2014-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n\n'use strict';\n\nvar fs = require('fs');\n\nmodule.exports = function generateGlyphiconsData(grunt) {\n  // Pass encoding, utf8, so `readFileSync` will return a string instead of a\n  // buffer\n  var glyphiconsFile = fs.readFileSync('less/glyphicons.less', 'utf8');\n  var glyphiconsLines = glyphiconsFile.split('\\n');\n\n  // Use any line that starts with \".glyphicon-\" and capture the class name\n  var iconClassName = /^\\.(glyphicon-[a-zA-Z0-9-]+)/;\n  var glyphiconsData = '# This file is generated via Grunt task. **Do not edit directly.**\\n' +\n                       '# See the \\'build-glyphicons-data\\' task in Gruntfile.js.\\n\\n';\n  var glyphiconsYml = 'docs/_data/glyphicons.yml';\n  for (var i = 0, len = glyphiconsLines.length; i < len; i++) {\n    var match = glyphiconsLines[i].match(iconClassName);\n\n    if (match !== null) {\n      glyphiconsData += '- ' + match[1] + '\\n';\n    }\n  }\n\n  // Create the `_data` directory if it doesn't already exist\n  if (!fs.existsSync('docs/_data')) {\n    fs.mkdirSync('docs/_data');\n  }\n\n  try {\n    fs.writeFileSync(glyphiconsYml, glyphiconsData);\n  } catch (err) {\n    grunt.fail.warn(err);\n  }\n  grunt.log.writeln('File ' + glyphiconsYml.cyan + ' created.');\n};\n"]}