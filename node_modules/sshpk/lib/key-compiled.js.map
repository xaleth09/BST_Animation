{"version":3,"sources":["key.js"],"names":[],"mappings":";;AAEA,OAAO,OAAP,GAAiB,GAAjB;;AAEA,IAAI,SAAS,QAAQ,aAAR,CAAb;AACA,IAAI,OAAO,QAAQ,QAAR,CAAX;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,cAAc,QAAQ,eAAR,CAAlB;AACA,IAAI,YAAY,QAAQ,aAAR,CAAhB;AACA,IAAI,gBAAgB,QAAQ,OAAR,CAApB;AACA,IAAI,OAAO,QAAQ,UAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,QAAJ;;AAEA,IAAI;AACH,YAAW,QAAQ,aAAR,CAAX;AACA,CAFD,CAEE,OAAO,CAAP,EAAU;;AAEX;;AAED,IAAI,wBAAwB,KAAK,qBAAjC;AACA,IAAI,gBAAgB,KAAK,aAAzB;;AAEA,IAAI,UAAU,EAAd;AACA,QAAQ,MAAR,IAAkB,QAAQ,gBAAR,CAAlB;AACA,QAAQ,KAAR,IAAiB,QAAQ,eAAR,CAAjB;AACA,QAAQ,OAAR,IAAmB,QAAQ,iBAAR,CAAnB;AACA,QAAQ,OAAR,IAAmB,QAAQ,iBAAR,CAAnB;AACA,QAAQ,SAAR,IAAqB,QAAQ,mBAAR,CAArB;AACA,QAAQ,KAAR,IAAiB,QAAQ,eAAR,CAAjB;AACA,QAAQ,aAAR,IAAyB,QAAQ,uBAAR,CAAzB;AACA,QAAQ,SAAR,IAAqB,QAAQ,aAAR,CAArB;;AAEA,SAAS,GAAT,CAAa,IAAb,EAAmB;AAClB,QAAO,MAAP,CAAc,IAAd,EAAoB,SAApB;AACA,QAAO,aAAP,CAAqB,KAAK,KAA1B,EAAiC,eAAjC;AACA,QAAO,MAAP,CAAc,KAAK,IAAnB,EAAyB,cAAzB;AACA,QAAO,cAAP,CAAsB,KAAK,OAA3B,EAAoC,iBAApC;;AAEA,KAAI,UAAU,KAAK,IAAL,CAAU,KAAK,IAAf,CAAd;AACA,KAAI,OAAQ,OAAR,KAAqB,QAAzB,EACC,MAAO,IAAI,qBAAJ,CAA0B,KAAK,IAA/B,CAAP;;AAED,KAAI,aAAa,EAAjB;AACA,MAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,EAAE,CAAzC,EAA4C;AAC3C,MAAI,OAAO,KAAK,KAAL,CAAW,CAAX,CAAX;AACA,aAAW,KAAK,IAAhB,IAAwB,IAAxB;AACA;;AAED,MAAK,IAAL,GAAY,KAAK,IAAjB;AACA,MAAK,KAAL,GAAa,KAAK,KAAlB;AACA,MAAK,IAAL,GAAY,UAAZ;AACA,MAAK,OAAL,GAAe,SAAf;AACA,MAAK,MAAL,GAAc,KAAK,MAAnB;;;AAGA,MAAK,aAAL,GAAqB,KAAK,aAA1B;AACA,MAAK,UAAL,GAAkB,EAAlB;;AAEA,KAAI,EAAJ;AACA,MAAK,KAAL,GAAa,SAAb;AACA,KAAI,KAAK,IAAL,KAAc,OAAlB,EAA2B;AAC1B,MAAI,QAAQ,KAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,CAAqB,QAArB,EAAZ;AACA,OAAK,KAAL,GAAa,KAAb;AACA,OAAK,KAAK,MAAL,CAAY,KAAZ,EAAmB,IAAxB;AACA,EAJD,MAIO,IAAI,KAAK,IAAL,KAAc,SAAlB,EAA6B;AACnC,OAAK,GAAL;AACA,OAAK,KAAL,GAAa,YAAb;AACA,EAHM,MAGA;AACN,MAAI,SAAS,KAAK,IAAL,CAAU,QAAQ,QAAlB,CAAb;AACA,OAAK,OAAO,IAAP,CAAY,MAAjB;AACA,OAAK,KAAK,CAAL,GAAS,MAAM,UAAN,CAAiB,OAAO,IAAxB,CAAd;AACA;AACD,MAAK,IAAL,GAAY,EAAZ;AACA;;AAED,IAAI,OAAJ,GAAc,OAAd;;AAEA,IAAI,SAAJ,CAAc,QAAd,GAAyB,UAAU,MAAV,EAAkB,OAAlB,EAA2B;AACnD,KAAI,WAAW,SAAf,EACC,SAAS,KAAT;AACD,QAAO,MAAP,CAAc,MAAd,EAAsB,QAAtB;AACA,QAAO,MAAP,CAAc,QAAQ,MAAR,CAAd,EAA+B,iBAA/B;AACA,QAAO,cAAP,CAAsB,OAAtB,EAA+B,SAA/B;;AAEA,KAAI,WAAW,SAAf,EAA0B;AACzB,MAAI,KAAK,aAAL,KAAuB,SAA3B,EACC,KAAK,aAAL,GAAqB,QAAQ,SAAR,EAAmB,KAAnB,CAAyB,IAAzB,CAArB;AACD,SAAQ,KAAK,aAAb;AACA;;AAED,QAAQ,QAAQ,MAAR,EAAgB,KAAhB,CAAsB,IAAtB,EAA4B,OAA5B,CAAR;AACA,CAdD;;AAgBA,IAAI,SAAJ,CAAc,QAAd,GAAyB,UAAU,MAAV,EAAkB,OAAlB,EAA2B;AACnD,QAAQ,KAAK,QAAL,CAAc,MAAd,EAAsB,OAAtB,EAA+B,QAA/B,EAAR;AACA,CAFD;;AAIA,IAAI,SAAJ,CAAc,IAAd,GAAqB,UAAU,IAAV,EAAgB;AACpC,QAAO,MAAP,CAAc,IAAd,EAAoB,WAApB;AACA,QAAO,KAAK,WAAL,EAAP;AACA,KAAI,KAAK,QAAL,CAAc,IAAd,MAAwB,SAA5B,EACC,MAAO,IAAI,qBAAJ,CAA0B,IAA1B,CAAP;;AAED,KAAI,KAAK,UAAL,CAAgB,IAAhB,CAAJ,EACC,OAAQ,KAAK,UAAL,CAAgB,IAAhB,CAAR;;AAED,KAAI,OAAO,OAAO,UAAP,CAAkB,IAAlB,EACP,MADO,CACA,KAAK,QAAL,CAAc,SAAd,CADA,EAC0B,MAD1B,EAAX;AAEA,MAAK,UAAL,CAAgB,IAAhB,IAAwB,IAAxB;AACA,QAAQ,IAAR;AACA,CAbD;;AAeA,IAAI,SAAJ,CAAc,WAAd,GAA4B,UAAU,IAAV,EAAgB;AAC3C,KAAI,SAAS,SAAb,EACC,OAAO,QAAP;AACD,QAAO,MAAP,CAAc,IAAd,EAAoB,WAApB;AACA,KAAI,OAAO;AACV,QAAM,KAAK,IAAL,CAAU,IAAV,CADI;AAEV,aAAW;AAFD,EAAX;AAIA,QAAQ,IAAI,WAAJ,CAAgB,IAAhB,CAAR;AACA,CATD;;AAWA,IAAI,SAAJ,CAAc,oBAAd,GAAqC,YAAY;AAChD,KAAI,WAAW,MAAf;AACA,KAAI,KAAK,IAAL,KAAc,KAAlB,EACC,WAAW,QAAX;AACD,KAAI,KAAK,IAAL,KAAc,KAAd,IAAuB,KAAK,IAAL,GAAY,IAAvC,EACC,WAAW,QAAX;AACD,KAAI,KAAK,IAAL,KAAc,SAAlB,EACC,WAAW,QAAX;AACD,KAAI,KAAK,IAAL,KAAc,OAAlB,EAA2B;AAC1B,MAAI,KAAK,IAAL,IAAa,GAAjB,EACC,WAAW,QAAX,CADD,KAEK,IAAI,KAAK,IAAL,IAAa,GAAjB,EACJ,WAAW,QAAX,CADI,KAGJ,WAAW,QAAX;AACD;AACD,QAAQ,QAAR;AACA,CAjBD;;AAmBA,IAAI,SAAJ,CAAc,YAAd,GAA6B,UAAU,QAAV,EAAoB;AAChD,KAAI,aAAa,SAAjB,EACC,WAAW,KAAK,oBAAL,EAAX;AACD,QAAO,MAAP,CAAc,QAAd,EAAwB,gBAAxB;;;AAGA,KAAI,KAAK,IAAL,KAAc,SAAd,IAA2B,aAAa,SAA5C,EACC,OAAQ,IAAI,SAAS,QAAb,CAAsB,IAAtB,EAA4B,QAA5B,CAAR;AACD,KAAI,KAAK,IAAL,KAAc,YAAlB,EACC,MAAO,IAAI,KAAJ,CAAU,0CACb,yBADG,CAAP;;AAGD,KAAI,CAAJ,EAAO,EAAP,EAAW,GAAX;AACA,KAAI;AACH,OAAK,SAAS,WAAT,EAAL;AACA,MAAI,OAAO,YAAP,CAAoB,EAApB,CAAJ;AACA,EAHD,CAGE,OAAO,CAAP,EAAU;AACX,QAAM,CAAN;AACA;AACD,KAAI,MAAM,SAAN,IAAoB,eAAe,KAAf,IACpB,IAAI,OAAJ,CAAY,KAAZ,CAAkB,wBAAlB,CADJ,EACkD;AACjD,OAAK,MAAL;AACA,QAAM,SAAS,WAAT,EAAN;AACA,MAAI,OAAO,YAAP,CAAoB,EAApB,CAAJ;AACA;AACD,QAAO,EAAP,CAAU,CAAV,EAAa,2BAAb;AACA,KAAI,YAAY,EAAE,MAAF,CAAS,IAAT,CAAc,CAAd,CAAhB;AACA,KAAI,MAAM,KAAK,QAAL,CAAc,OAAd,CAAV;AACA,KAAI,OAAO,IAAX;AACA,GAAE,MAAF,GAAW,UAAU,SAAV,EAAqB,GAArB,EAA0B;AACpC,MAAI,UAAU,WAAV,CAAsB,SAAtB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC,CAAJ,EAA8C;AAC7C,OAAI,UAAU,IAAV,KAAmB,KAAK,IAA5B,EACC,OAAQ,KAAR;AACD,OAAI,UAAU,aAAV,IACA,UAAU,aAAV,KAA4B,QADhC,EAEC,OAAQ,KAAR;AACD,UAAQ,UAAU,GAAV,EAAe,UAAU,QAAV,CAAmB,MAAnB,CAAf,CAAR;AAEA,GARD,MAQO,IAAI,OAAQ,SAAR,KAAuB,QAAvB,IACP,OAAO,QAAP,CAAgB,SAAhB,CADG,EACyB;AAC/B,UAAQ,UAAU,GAAV,EAAe,SAAf,EAA0B,GAA1B,CAAR;;;;;;AAMA,GARM,MAQA,IAAI,UAAU,WAAV,CAAsB,SAAtB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC,CAAJ,EAA8C;AACpD,UAAO,IAAI,KAAJ,CAAU,sCACb,2CADG,CAAP;AAGA,IAJM,MAIA;AACN,UAAO,IAAI,SAAJ,CAAc,iCACjB,6BADG,CAAP;AAEA;AACD,EAzBD;AA0BA,QAAQ,CAAR;AACA,CAxDD;;AA0DA,IAAI,SAAJ,CAAc,mBAAd,GAAoC,YAAY;AAC/C,KAAI,KAAK,IAAL,KAAc,KAAlB,EACC,MAAO,IAAI,KAAJ,CAAU,wCAAV,CAAP;;AAED,QAAQ,IAAI,aAAJ,CAAkB,IAAlB,CAAR;AACA,CALD;AAMA,IAAI,SAAJ,CAAc,QAAd,GAAyB,IAAI,SAAJ,CAAc,mBAAvC;;AAEA,IAAI,KAAJ,GAAY,UAAU,IAAV,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC;AAC5C,KAAI,OAAQ,IAAR,KAAkB,QAAtB,EACC,OAAO,MAAP,CAAc,IAAd,EAAoB,MAApB;AACD,KAAI,WAAW,SAAf,EACC,SAAS,MAAT;AACD,QAAO,MAAP,CAAc,MAAd,EAAsB,QAAtB;AACA,KAAI,OAAQ,OAAR,KAAqB,QAAzB,EACC,UAAU,EAAE,UAAU,OAAZ,EAAV;AACD,QAAO,cAAP,CAAsB,OAAtB,EAA+B,SAA/B;AACA,KAAI,YAAY,SAAhB,EACC,UAAU,EAAV;AACD,QAAO,cAAP,CAAsB,QAAQ,QAA9B,EAAwC,kBAAxC;AACA,KAAI,QAAQ,QAAR,KAAqB,SAAzB,EACC,QAAQ,QAAR,GAAmB,WAAnB;;AAED,QAAO,MAAP,CAAc,QAAQ,MAAR,CAAd,EAA+B,iBAA/B;;AAEA,KAAI;AACH,MAAI,IAAI,QAAQ,MAAR,EAAgB,IAAhB,CAAqB,IAArB,EAA2B,OAA3B,CAAR;AACA,MAAI,aAAa,UAAjB,EACC,IAAI,EAAE,QAAF,EAAJ;AACD,MAAI,CAAC,EAAE,OAAP,EACC,EAAE,OAAF,GAAY,QAAQ,QAApB;AACD,SAAQ,CAAR;AACA,EAPD,CAOE,OAAO,CAAP,EAAU;AACX,MAAI,EAAE,IAAF,KAAW,mBAAf,EACC,MAAO,CAAP;AACD,QAAO,IAAI,aAAJ,CAAkB,QAAQ,QAA1B,EAAoC,MAApC,EAA4C,CAA5C,CAAP;AACA;AACD,CA7BD;;AA+BA,IAAI,KAAJ,GAAY,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC/B,QAAQ,MAAM,YAAN,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,CAAR;AACA,CAFD;;;;;;;;;;;AAaA,IAAI,SAAJ,CAAc,gBAAd,GAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;;AAEA,IAAI,iBAAJ,GAAwB,UAAU,GAAV,EAAe;AACtC,QAAO,IAAP,CAAY,IAAI,QAAhB;AACA,QAAO,IAAP,CAAY,IAAI,WAAhB;AACA,KAAI,IAAI,QAAR,EACC,OAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACD,KAAI,IAAI,oBAAR,EACC,OAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACD,KAAI,IAAI,OAAJ,CAAY,MAAZ,CAAJ,EACC,OAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACD,KAAI,IAAI,OAAJ,CAAY,OAAZ,CAAJ,EACC,OAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACD,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACA,CAZD","file":"key-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Key;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar DiffieHellman = require('./dhe');\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar PrivateKey = require('./private-key');\nvar edCompat;\n\ntry {\n\tedCompat = require('./ed-compat');\n} catch (e) {\n\t/* Just continue through, and bail out if we try to use it. */\n}\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh'] = require('./formats/ssh');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\n\nfunction Key(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\tassert.optionalString(opts.comment, 'options.comment');\n\n\tvar algInfo = algs.info[opts.type];\n\tif (typeof (algInfo) !== 'object')\n\t\tthrow (new InvalidAlgorithmError(opts.type));\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n\tthis.comment = undefined;\n\tthis.source = opts.source;\n\n\t/* for speeding up hashing/fingerprint operations */\n\tthis._rfc4253Cache = opts._rfc4253Cache;\n\tthis._hashCache = {};\n\n\tvar sz;\n\tthis.curve = undefined;\n\tif (this.type === 'ecdsa') {\n\t\tvar curve = this.part.curve.data.toString();\n\t\tthis.curve = curve;\n\t\tsz = algs.curves[curve].size;\n\t} else if (this.type === 'ed25519') {\n\t\tsz = 256;\n\t\tthis.curve = 'curve25519';\n\t} else {\n\t\tvar szPart = this.part[algInfo.sizePart];\n\t\tsz = szPart.data.length;\n\t\tsz = sz * 8 - utils.countZeros(szPart.data);\n\t}\n\tthis.size = sz;\n}\n\nKey.formats = formats;\n\nKey.prototype.toBuffer = function (format, options) {\n\tif (format === undefined)\n\t\tformat = 'ssh';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\tassert.optionalObject(options, 'options');\n\n\tif (format === 'rfc4253') {\n\t\tif (this._rfc4253Cache === undefined)\n\t\t\tthis._rfc4253Cache = formats['rfc4253'].write(this);\n\t\treturn (this._rfc4253Cache);\n\t}\n\n\treturn (formats[format].write(this, options));\n};\n\nKey.prototype.toString = function (format, options) {\n\treturn (this.toBuffer(format, options).toString());\n};\n\nKey.prototype.hash = function (algo) {\n\tassert.string(algo, 'algorithm');\n\talgo = algo.toLowerCase();\n\tif (algs.hashAlgs[algo] === undefined)\n\t\tthrow (new InvalidAlgorithmError(algo));\n\n\tif (this._hashCache[algo])\n\t\treturn (this._hashCache[algo]);\n\n\tvar hash = crypto.createHash(algo).\n\t    update(this.toBuffer('rfc4253')).digest();\n\tthis._hashCache[algo] = hash;\n\treturn (hash);\n};\n\nKey.prototype.fingerprint = function (algo) {\n\tif (algo === undefined)\n\t\talgo = 'sha256';\n\tassert.string(algo, 'algorithm');\n\tvar opts = {\n\t\thash: this.hash(algo),\n\t\talgorithm: algo\n\t};\n\treturn (new Fingerprint(opts));\n};\n\nKey.prototype.defaultHashAlgorithm = function () {\n\tvar hashAlgo = 'sha1';\n\tif (this.type === 'rsa')\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'dsa' && this.size > 1024)\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'ed25519')\n\t\thashAlgo = 'sha512';\n\tif (this.type === 'ecdsa') {\n\t\tif (this.size <= 256)\n\t\t\thashAlgo = 'sha256';\n\t\telse if (this.size <= 384)\n\t\t\thashAlgo = 'sha384';\n\t\telse\n\t\t\thashAlgo = 'sha512';\n\t}\n\treturn (hashAlgo);\n};\n\nKey.prototype.createVerify = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Verifier(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldVerify = v.verify.bind(v);\n\tvar key = this.toBuffer('pkcs8');\n\tvar self = this;\n\tv.verify = function (signature, fmt) {\n\t\tif (Signature.isSignature(signature, [2, 0])) {\n\t\t\tif (signature.type !== self.type)\n\t\t\t\treturn (false);\n\t\t\tif (signature.hashAlgorithm &&\n\t\t\t    signature.hashAlgorithm !== hashAlgo)\n\t\t\t\treturn (false);\n\t\t\treturn (oldVerify(key, signature.toBuffer('asn1')));\n\n\t\t} else if (typeof (signature) === 'string' ||\n\t\t    Buffer.isBuffer(signature)) {\n\t\t\treturn (oldVerify(key, signature, fmt));\n\n\t\t/*\n\t\t * Avoid doing this on valid arguments, walking the prototype\n\t\t * chain can be quite slow.\n\t\t */\n\t\t} else if (Signature.isSignature(signature, [1, 0])) {\n\t\t\tthrow (new Error('signature was created by too old ' +\n\t\t\t    'a version of sshpk and cannot be verified'));\n\n\t\t} else {\n\t\t\tthrow (new TypeError('signature must be a string, ' +\n\t\t\t    'Buffer, or Signature object'));\n\t\t}\n\t};\n\treturn (v);\n};\n\nKey.prototype.createDiffieHellman = function () {\n\tif (this.type === 'rsa')\n\t\tthrow (new Error('RSA keys do not support Diffie-Hellman'));\n\n\treturn (new DiffieHellman(this));\n};\nKey.prototype.createDH = Key.prototype.createDiffieHellman;\n\nKey.parse = function (data, format, options) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (typeof (options) === 'string')\n\t\toptions = { filename: options };\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.optionalString(options.filename, 'options.filename');\n\tif (options.filename === undefined)\n\t\toptions.filename = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data, options);\n\t\tif (k instanceof PrivateKey)\n\t\t\tk = k.toPublic();\n\t\tif (!k.comment)\n\t\t\tk.comment = options.filename;\n\t\treturn (k);\n\t} catch (e) {\n\t\tif (e.name === 'KeyEncryptedError')\n\t\t\tthrow (e);\n\t\tthrow (new KeyParseError(options.filename, format, e));\n\t}\n};\n\nKey.isKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Key, ver));\n};\n\n/*\n * API versions for Key:\n * [1,0] -- initial ver, may take Signature for createVerify or may not\n * [1,1] -- added pkcs1, pkcs8 formats\n * [1,2] -- added auto, ssh-private, openssh formats\n * [1,3] -- added defaultHashAlgorithm\n * [1,4] -- added ed support, createDH\n * [1,5] -- first explicitly tagged version\n */\nKey.prototype._sshpkApiVersion = [1, 5];\n\nKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tassert.func(obj.fingerprint);\n\tif (obj.createDH)\n\t\treturn ([1, 4]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 3]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 2]);\n\tif (obj.formats['pkcs1'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n"]}