{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\nvar Package = require('../package.json');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Utils', function () {\r\n\r\n    describe('parseHost()', function () {\r\n\r\n        it('returns port 80 for non tls node request', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: 'example.com',\r\n                    'content-type': 'text/plain;x=y'\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(80);\r\n            done();\r\n        });\r\n\r\n        it('returns port 443 for non tls node request', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: 'example.com',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(443);\r\n            done();\r\n        });\r\n\r\n        it('returns port 443 for non tls node request (IPv6)', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: '[123:123:123]',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(443);\r\n            done();\r\n        });\r\n\r\n        it('parses IPv6 headers', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: '[123:123:123]:8000',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            var host = Hawk.utils.parseHost(req, 'Host');\r\n            expect(host.port).to.equal('8000');\r\n            expect(host.name).to.equal('[123:123:123]');\r\n            done();\r\n        });\r\n\r\n        it('errors on header too long', function (done) {\r\n\r\n            var long = '';\r\n            for (var i = 0; i < 5000; ++i) {\r\n                long += 'x';\r\n            }\r\n\r\n            expect(Hawk.utils.parseHost({ headers: { host: long } })).to.be.null();\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('parseAuthorizationHeader()', function () {\r\n\r\n        it('errors on header too long', function (done) {\r\n\r\n            var long = 'Scheme a=\"';\r\n            for (var i = 0; i < 5000; ++i) {\r\n                long += 'x';\r\n            }\r\n            long += '\"';\r\n\r\n            var err = Hawk.utils.parseAuthorizationHeader(long, ['a']);\r\n            expect(err).to.be.instanceof(Error);\r\n            expect(err.message).to.equal('Header length too long');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('version()', function () {\r\n\r\n        it('returns the correct package version number', function (done) {\r\n\r\n            expect(Hawk.utils.version()).to.equal(Package.version);\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('unauthorized()', function () {\r\n\r\n        it('returns a hawk 401', function (done) {\r\n\r\n            expect(Hawk.utils.unauthorized('kaboom').output.headers['WWW-Authenticate']).to.equal('Hawk error=\"kaboom\"');\r\n            done();\r\n        });\r\n\r\n        it('supports attributes', function (done) {\r\n\r\n            expect(Hawk.utils.unauthorized('kaboom', { a: 'b' }).output.headers['WWW-Authenticate']).to.equal('Hawk a=\"b\", error=\"kaboom\"');\r\n            done();\r\n        });\r\n    });\r\n});\r\n"]}