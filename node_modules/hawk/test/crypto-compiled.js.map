{"version":3,"sources":["crypto.js"],"names":[],"mappings":";;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,OAAO,QAAQ,QAAR,CAAX;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;;;;AAKA,IAAI,YAAY,EAAhB;;;;AAKA,IAAI,MAAM,QAAQ,GAAR,GAAc,IAAI,MAAJ,EAAxB;AACA,IAAI,WAAW,IAAI,UAAnB;AACA,IAAI,KAAK,IAAI,IAAb;AACA,IAAI,SAAS,KAAK,MAAlB;;AAGA,SAAS,QAAT,EAAmB,YAAY;;AAE3B,aAAS,4BAAT,EAAuC,YAAY;;AAE/C,WAAG,yCAAH,EAA8C,UAAU,IAAV,EAAgB;;AAE1D,mBAAO,KAAK,MAAL,CAAY,wBAAZ,CAAqC,QAArC,EAA+C;AAClD,oBAAI,UAD8C;AAElD,uBAAO,QAF2C;AAGlD,wBAAQ,KAH0C;AAIlD,0BAAU,qBAJwC;AAKlD,sBAAM,aAL4C;AAMlD,sBAAM;AAN4C,aAA/C,CAAP,EAOI,EAPJ,CAOO,KAPP,CAOa,sFAPb;;AASA;AACH,SAZD;;AAcA,WAAG,+CAAH,EAAoD,UAAU,IAAV,EAAgB;;AAEhE,mBAAO,KAAK,MAAL,CAAY,wBAAZ,CAAqC,QAArC,EAA+C;AAClD,oBAAI,UAD8C;AAElD,uBAAO,QAF2C;AAGlD,wBAAQ,KAH0C;AAIlD,0BAAU,qBAJwC;AAKlD,sBAAM,aAL4C;AAMlD,sBAAM,IAN4C;AAOlD,qBAAK;AAP6C,aAA/C,CAAP,EAQI,EARJ,CAQO,KARP,CAQa,2GARb;;AAUA;AACH,SAbD;;AAeA,WAAG,yDAAH,EAA8D,UAAU,IAAV,EAAgB;;AAE1E,mBAAO,KAAK,MAAL,CAAY,wBAAZ,CAAqC,QAArC,EAA+C;AAClD,oBAAI,UAD8C;AAElD,uBAAO,QAF2C;AAGlD,wBAAQ,KAH0C;AAIlD,0BAAU,qBAJwC;AAKlD,sBAAM,aAL4C;AAMlD,sBAAM,IAN4C;AAOlD,sBAAM,8CAP4C;AAQlD,qBAAK;AAR6C,aAA/C,CAAP,EASI,EATJ,CASO,KATP,CASa,uJATb;;AAWA;AACH,SAdD;AAeH,KA9CD;AA+CH,CAjDD","file":"crypto-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Crypto', function () {\r\n\r\n    describe('generateNormalizedString()', function () {\r\n\r\n        it('should return a valid normalized string', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\n\\n\\n');\r\n\r\n            done();\r\n        });\r\n\r\n        it('should return a valid normalized string (ext)', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080,\r\n                ext: 'this is some app data'\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\n\\nthis is some app data\\n');\r\n\r\n            done();\r\n        });\r\n\r\n        it('should return a valid normalized string (payload + ext)', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080,\r\n                hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',\r\n                ext: 'this is some app data'\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\nU4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=\\nthis is some app data\\n');\r\n\r\n            done();\r\n        });\r\n    });\r\n});\r\n"]}