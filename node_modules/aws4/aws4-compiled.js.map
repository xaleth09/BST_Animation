{"version":3,"sources":["aws4.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,OAAX;IACI,MAAM,QAAQ,KAAR,CADV;IAEI,cAAc,QAAQ,aAAR,CAFlB;IAGI,SAAS,QAAQ,QAAR,CAHb;IAII,MAAM,QAAQ,OAAR,CAJV;IAKI,mBAAmB,IAAI,IAAJ,CALvB;;;;AASA,SAAS,IAAT,CAAc,GAAd,EAAmB,MAAnB,EAA2B,QAA3B,EAAqC;AACnC,SAAO,OAAO,UAAP,CAAkB,QAAlB,EAA4B,GAA5B,EAAiC,MAAjC,CAAwC,MAAxC,EAAgD,MAAhD,EAAwD,MAAxD,CAA+D,QAA/D,CAAP;AACD;;AAED,SAAS,IAAT,CAAc,MAAd,EAAsB,QAAtB,EAAgC;AAC9B,SAAO,OAAO,UAAP,CAAkB,QAAlB,EAA4B,MAA5B,CAAmC,MAAnC,EAA2C,MAA3C,EAAmD,MAAnD,CAA0D,QAA1D,CAAP;AACD;;;AAGD,SAAS,aAAT,CAAuB,gBAAvB,EAAyC;AACvC,SAAO,iBAAiB,OAAjB,CAAyB,UAAzB,EAAqC,UAAS,CAAT,EAAY;AACtD,WAAO,MAAM,EAAE,UAAF,CAAa,CAAb,EAAgB,QAAhB,CAAyB,EAAzB,EAA6B,WAA7B,EAAb;AACD,GAFM,CAAP;AAGD;;;;AAID,SAAS,aAAT,CAAuB,OAAvB,EAAgC,WAAhC,EAA6C;;AAE3C,MAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC,UAAU,IAAI,KAAJ,CAAU,OAAV,CAAV;;AAEjC,MAAI,UAAU,QAAQ,OAAR,GAAmB,QAAQ,OAAR,IAAmB,EAApD;MACI,YAAY,KAAK,SAAL,CAAe,QAAQ,QAAR,IAAoB,QAAQ,IAA5B,IAAoC,QAAQ,IAA5C,IAAoD,QAAQ,IAA3E,CADhB;;AAGA,OAAK,OAAL,GAAe,OAAf;AACA,OAAK,WAAL,GAAmB,eAAe,KAAK,kBAAL,EAAlC;;AAEA,OAAK,OAAL,GAAe,QAAQ,OAAR,IAAmB,UAAU,CAAV,CAAnB,IAAmC,EAAlD;AACA,OAAK,MAAL,GAAc,QAAQ,MAAR,IAAkB,UAAU,CAAV,CAAlB,IAAkC,WAAhD;;;AAGA,MAAI,KAAK,OAAL,KAAiB,OAArB,EAA8B,KAAK,OAAL,GAAe,KAAf;;AAE9B,MAAI,CAAC,QAAQ,MAAT,IAAmB,QAAQ,IAA/B,EACE,QAAQ,MAAR,GAAiB,MAAjB;;AAEF,MAAI,CAAC,QAAQ,IAAT,IAAiB,CAAC,QAAQ,IAA9B,EAAoC;AAClC,YAAQ,IAAR,GAAe,QAAQ,QAAR,IAAoB,QAAQ,IAA5B,IAAoC,KAAK,UAAL,EAAnD;;;AAGA,QAAI,QAAQ,IAAZ,EACE,QAAQ,IAAR,IAAgB,MAAM,QAAQ,IAA9B;AACH;AACD,MAAI,CAAC,QAAQ,QAAT,IAAqB,CAAC,QAAQ,IAAlC,EACE,QAAQ,QAAR,GAAmB,QAAQ,IAAR,IAAgB,QAAQ,IAA3C;AACH;;AAED,cAAc,SAAd,CAAwB,SAAxB,GAAoC,UAAS,IAAT,EAAe;AACjD,MAAI,QAAQ,CAAC,QAAQ,EAAT,EAAa,KAAb,CAAmB,0CAAnB,CAAZ;AACA,MAAI,YAAY,CAAC,SAAS,EAAV,EAAc,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAhB;;;;;AAKA,MAAI,UAAU,CAAV,MAAiB,IAArB,EACE,YAAY,UAAU,OAAV,EAAZ;;AAEF,SAAO,SAAP;AACD,CAXD;;;AAcA,cAAc,SAAd,CAAwB,cAAxB,GAAyC,YAAW;;AAElD,MAAI,CAAC,IAAD,EAAO,KAAP,EAAc,OAAd,CAAsB,KAAK,OAA3B,KAAuC,CAAvC,IAA4C,KAAK,MAAL,KAAgB,WAAhE,EAA6E,OAAO,IAAP;;AAE7E,SAAO,CAAC,YAAD,EAAe,IAAf,EAAqB,SAArB,EAAgC,KAAhC,EAAuC,cAAvC,EAAuD,KAAvD,EACJ,OADI,CACI,KAAK,OADT,KACqB,CAD5B;AAED,CAND;;AAQA,cAAc,SAAd,CAAwB,UAAxB,GAAqC,YAAW;AAC9C,MAAI,SAAS,KAAK,cAAL,KAAwB,EAAxB,GACP,CAAC,KAAK,OAAL,KAAiB,IAAjB,IAAyB,KAAK,MAAL,KAAgB,WAAzC,GAAuD,GAAvD,GAA6D,GAA9D,IAAqE,KAAK,MADhF;MAEI,UAAU,KAAK,OAAL,KAAiB,KAAjB,GAAyB,OAAzB,GAAmC,KAAK,OAFtD;AAGA,SAAO,UAAU,MAAV,GAAmB,gBAA1B;AACD,CALD;;AAOA,cAAc,SAAd,CAAwB,cAAxB,GAAyC,YAAW;AAClD,OAAK,SAAL;;AAEA,MAAI,UAAU,KAAK,OAAnB;MAA4B,UAAU,QAAQ,OAA9C;MAAuD,KAAvD;;AAEA,MAAI,QAAQ,SAAZ,EAAuB;;AAErB,SAAK,UAAL,CAAgB,KAAhB,GAAwB,QAAQ,KAAK,UAAL,CAAgB,KAAhB,IAAyB,EAAzD;;AAEA,QAAI,KAAK,WAAL,CAAiB,YAArB,EACE,MAAM,sBAAN,IAAgC,KAAK,WAAL,CAAiB,YAAjD;;AAEF,QAAI,KAAK,OAAL,KAAiB,IAAjB,IAAyB,CAAC,MAAM,eAAN,CAA9B,EACE,MAAM,eAAN,IAAyB,KAAzB;;AAEF,QAAI,MAAM,YAAN,CAAJ,EACE,KAAK,QAAL,GAAgB,MAAM,YAAN,CAAhB,CADF,KAGE,MAAM,YAAN,IAAsB,KAAK,WAAL,EAAtB;;AAEF,UAAM,iBAAN,IAA2B,kBAA3B;AACA,UAAM,kBAAN,IAA4B,KAAK,WAAL,CAAiB,WAAjB,GAA+B,GAA/B,GAAqC,KAAK,gBAAL,EAAjE;AACA,UAAM,qBAAN,IAA+B,KAAK,aAAL,EAA/B;AAED,GAnBD,MAmBO;;AAEL,QAAI,CAAC,QAAQ,kBAAb,EAAiC;AAC/B,UAAI,QAAQ,IAAR,IAAgB,CAAC,QAAQ,cAAR,CAAjB,IAA4C,CAAC,QAAQ,cAAR,CAAjD,EACE,QAAQ,cAAR,IAA0B,kDAA1B;;AAEF,UAAI,QAAQ,IAAR,IAAgB,CAAC,QAAQ,gBAAR,CAAjB,IAA8C,CAAC,QAAQ,gBAAR,CAAnD,EACE,QAAQ,gBAAR,IAA4B,OAAO,UAAP,CAAkB,QAAQ,IAA1B,CAA5B;;AAEF,UAAI,KAAK,WAAL,CAAiB,YAArB,EACE,QAAQ,sBAAR,IAAkC,KAAK,WAAL,CAAiB,YAAnD;;AAEF,UAAI,KAAK,OAAL,KAAiB,IAArB,EACE,QAAQ,sBAAR,IAAkC,KAAK,KAAK,OAAL,CAAa,IAAb,IAAqB,EAA1B,EAA8B,KAA9B,CAAlC;;AAEF,UAAI,QAAQ,YAAR,CAAJ,EACE,KAAK,QAAL,GAAgB,QAAQ,YAAR,CAAhB,CADF,KAGE,QAAQ,YAAR,IAAwB,KAAK,WAAL,EAAxB;AACH;;AAED,WAAO,QAAQ,aAAf;AACA,WAAO,QAAQ,aAAf;AACD;AACF,CAhDD;;AAkDA,cAAc,SAAd,CAAwB,IAAxB,GAA+B,YAAW;AACxC,MAAI,CAAC,KAAK,UAAV,EAAsB,KAAK,cAAL;;AAEtB,MAAI,KAAK,OAAL,CAAa,SAAjB,EAA4B;AAC1B,SAAK,UAAL,CAAgB,KAAhB,CAAsB,iBAAtB,IAA2C,KAAK,SAAL,EAA3C;AACD,GAFD,MAEO;AACL,SAAK,OAAL,CAAa,OAAb,CAAqB,aAArB,GAAqC,KAAK,UAAL,EAArC;AACD;;AAED,OAAK,OAAL,CAAa,IAAb,GAAoB,KAAK,UAAL,EAApB;;AAEA,SAAO,KAAK,OAAZ;AACD,CAZD;;AAcA,cAAc,SAAd,CAAwB,WAAxB,GAAsC,YAAW;AAC/C,MAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,QAAI,UAAU,KAAK,OAAL,CAAa,OAA3B;QACE,OAAO,IAAI,IAAJ,CAAS,QAAQ,IAAR,IAAgB,QAAQ,IAAxB,IAAgC,IAAI,IAAJ,EAAzC,CADT;;AAGA,SAAK,QAAL,GAAgB,KAAK,WAAL,GAAmB,OAAnB,CAA2B,gBAA3B,EAA6C,EAA7C,CAAhB;AACD;AACD,SAAO,KAAK,QAAZ;AACD,CARD;;AAUA,cAAc,SAAd,CAAwB,OAAxB,GAAkC,YAAW;AAC3C,SAAO,KAAK,WAAL,GAAmB,MAAnB,CAA0B,CAA1B,EAA6B,CAA7B,CAAP;AACD,CAFD;;AAIA,cAAc,SAAd,CAAwB,UAAxB,GAAqC,YAAW;AAC9C,SAAO,CACL,iCAAiC,KAAK,WAAL,CAAiB,WAAlD,GAAgE,GAAhE,GAAsE,KAAK,gBAAL,EADjE,EAEL,mBAAmB,KAAK,aAAL,EAFd,EAGL,eAAe,KAAK,SAAL,EAHV,EAIL,IAJK,CAIA,IAJA,CAAP;AAKD,CAND;;AAQA,cAAc,SAAd,CAAwB,SAAxB,GAAoC,YAAW;AAC7C,MAAI,OAAO,KAAK,OAAL,EAAX;MACI,WAAW,CAAC,KAAK,WAAL,CAAiB,eAAlB,EAAmC,IAAnC,EAAyC,KAAK,MAA9C,EAAsD,KAAK,OAA3D,EAAoE,IAApE,EADf;MAEI,KAFJ;MAEW,OAFX;MAEoB,QAFpB;MAE8B,eAAe,iBAAiB,GAAjB,CAAqB,QAArB,CAF7C;AAGA,MAAI,CAAC,YAAL,EAAmB;AACjB,YAAQ,KAAK,SAAS,KAAK,WAAL,CAAiB,eAA/B,EAAgD,IAAhD,CAAR;AACA,cAAU,KAAK,KAAL,EAAY,KAAK,MAAjB,CAAV;AACA,eAAW,KAAK,OAAL,EAAc,KAAK,OAAnB,CAAX;AACA,mBAAe,KAAK,QAAL,EAAe,cAAf,CAAf;AACA,qBAAiB,GAAjB,CAAqB,QAArB,EAA+B,YAA/B;AACD;AACD,SAAO,KAAK,YAAL,EAAmB,KAAK,YAAL,EAAnB,EAAwC,KAAxC,CAAP;AACD,CAZD;;AAcA,cAAc,SAAd,CAAwB,YAAxB,GAAuC,YAAW;AAChD,SAAO,CACL,kBADK,EAEL,KAAK,WAAL,EAFK,EAGL,KAAK,gBAAL,EAHK,EAIL,KAAK,KAAK,eAAL,EAAL,EAA6B,KAA7B,CAJK,EAKL,IALK,CAKA,IALA,CAAP;AAMD,CAPD;;AASA,cAAc,SAAd,CAAwB,eAAxB,GAA0C,YAAW;AACnD,MAAI,CAAC,KAAK,UAAV,EAAsB,KAAK,cAAL;;AAEtB,MAAI,UAAU,KAAK,UAAL,CAAgB,IAA9B;MACI,QAAQ,KAAK,UAAL,CAAgB,KAD5B;MAEI,WAAW,EAFf;MAGI,gBAAgB,KAAK,OAAL,KAAiB,IAHrC;MAII,aAAa,KAAK,OAAL,KAAiB,IAAjB,IAAyB,KAAK,OAAL,CAAa,eAJvD;MAKI,sBAAsB,KAAK,OAAL,KAAiB,IAL3C;MAMI,eAAe,KAAK,OAAL,KAAiB,IANpC;MAOI,WAAW,KAAK,OAAL,KAAiB,IAAjB,IAAyB,KAAK,OAAL,CAAa,SAAtC,GACT,kBADS,GACY,KAAK,KAAK,OAAL,CAAa,IAAb,IAAqB,EAA1B,EAA8B,KAA9B,CAR3B;;AAUA,MAAI,KAAJ,EAAW;AACT,eAAW,cAAc,YAAY,SAAZ,CAAsB,OAAO,IAAP,CAAY,KAAZ,EAAmB,IAAnB,GAA0B,MAA1B,CAAiC,UAAS,GAAT,EAAc,GAAd,EAAmB;AACjG,UAAI,CAAC,GAAL,EAAU,OAAO,GAAP;AACV,UAAI,GAAJ,IAAW,CAAC,MAAM,OAAN,CAAc,MAAM,GAAN,CAAd,CAAD,GAA6B,MAAM,GAAN,CAA7B,GACR,eAAe,MAAM,GAAN,EAAW,CAAX,CAAf,GAA+B,MAAM,GAAN,EAAW,KAAX,GAAmB,IAAnB,EADlC;AAEA,aAAO,GAAP;AACD,KAL8C,EAK5C,EAL4C,CAAtB,CAAd,CAAX;AAMD;AACD,MAAI,YAAY,GAAhB,EAAqB;AACnB,QAAI,aAAJ,EAAmB,UAAU,QAAQ,OAAR,CAAgB,SAAhB,EAA2B,GAA3B,CAAV;AACnB,cAAU,QAAQ,KAAR,CAAc,GAAd,EAAmB,MAAnB,CAA0B,UAAS,IAAT,EAAe,KAAf,EAAsB;AACxD,UAAI,iBAAiB,UAAU,IAA/B,EAAqC;AACnC,aAAK,GAAL;AACD,OAFD,MAEO,IAAI,CAAC,aAAD,IAAkB,UAAU,GAAhC,EAAqC;AAC1C,YAAI,UAAJ,EAAgB,QAAQ,YAAY,QAAZ,CAAqB,KAArB,CAAR;AAChB,aAAK,IAAL,CAAU,cAAc,YAAY,MAAZ,CAAmB,KAAnB,CAAd,CAAV;AACD;AACD,aAAO,IAAP;AACD,KARS,EAQP,EARO,EAQH,IARG,CAQE,GARF,CAAV;AASA,QAAI,QAAQ,CAAR,MAAe,GAAnB,EAAwB,UAAU,MAAM,OAAhB;AACxB,QAAI,mBAAJ,EAAyB,UAAU,QAAQ,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAV;AAC1B;;AAED,SAAO,CACL,KAAK,OAAL,CAAa,MAAb,IAAuB,KADlB,EAEL,OAFK,EAGL,QAHK,EAIL,KAAK,gBAAL,KAA0B,IAJrB,EAKL,KAAK,aAAL,EALK,EAML,QANK,EAOL,IAPK,CAOA,IAPA,CAAP;AAQD,CA5CD;;AA8CA,cAAc,SAAd,CAAwB,gBAAxB,GAA2C,YAAW;AACpD,MAAI,UAAU,KAAK,OAAL,CAAa,OAA3B;AACA,WAAS,OAAT,CAAiB,MAAjB,EAAyB;AACvB,WAAO,OAAO,QAAP,GAAkB,IAAlB,GAAyB,OAAzB,CAAiC,MAAjC,EAAyC,GAAzC,CAAP;AACD;AACD,SAAO,OAAO,IAAP,CAAY,OAAZ,EACJ,IADI,CACC,UAAS,CAAT,EAAY,CAAZ,EAAe;AAAE,WAAO,EAAE,WAAF,KAAkB,EAAE,WAAF,EAAlB,GAAoC,CAAC,CAArC,GAAyC,CAAhD;AAAmD,GADrE,EAEJ,GAFI,CAEA,UAAS,GAAT,EAAc;AAAE,WAAO,IAAI,WAAJ,KAAoB,GAApB,GAA0B,QAAQ,QAAQ,GAAR,CAAR,CAAjC;AAAwD,GAFxE,EAGJ,IAHI,CAGC,IAHD,CAAP;AAID,CATD;;AAWA,cAAc,SAAd,CAAwB,aAAxB,GAAwC,YAAW;AACjD,SAAO,OAAO,IAAP,CAAY,KAAK,OAAL,CAAa,OAAzB,EACJ,GADI,CACA,UAAS,GAAT,EAAc;AAAE,WAAO,IAAI,WAAJ,EAAP;AAA0B,GAD1C,EAEJ,IAFI,GAGJ,IAHI,CAGC,GAHD,CAAP;AAID,CALD;;AAOA,cAAc,SAAd,CAAwB,gBAAxB,GAA2C,YAAW;AACpD,SAAO,CACL,KAAK,OAAL,EADK,EAEL,KAAK,MAFA,EAGL,KAAK,OAHA,EAIL,cAJK,EAKL,IALK,CAKA,GALA,CAAP;AAMD,CAPD;;AASA,cAAc,SAAd,CAAwB,kBAAxB,GAA6C,YAAW;AACtD,MAAI,MAAM,QAAQ,GAAlB;AACA,SAAO;AACL,iBAAa,IAAI,iBAAJ,IAAyB,IAAI,cADrC;AAEL,qBAAiB,IAAI,qBAAJ,IAA6B,IAAI,cAF7C;AAGL,kBAAc,IAAI;AAHb,GAAP;AAKD,CAPD;;AASA,cAAc,SAAd,CAAwB,SAAxB,GAAoC,YAAW;AAC7C,MAAI,OAAO,KAAK,OAAL,CAAa,IAAb,IAAqB,GAAhC;MACI,UAAU,KAAK,OAAL,CAAa,GAAb,CADd;MAEI,QAAQ,IAFZ;;AAIA,MAAI,WAAW,CAAf,EAAkB;AAChB,YAAQ,YAAY,KAAZ,CAAkB,KAAK,KAAL,CAAW,UAAU,CAArB,CAAlB,CAAR;AACA,WAAO,KAAK,KAAL,CAAW,CAAX,EAAc,OAAd,CAAP;AACD;;;;;AAKD,MAAI,2BAA2B,IAA3B,CAAgC,IAAhC,CAAJ,EAA2C;AACzC,WAAO,KAAK,KAAL,CAAW,GAAX,EAAgB,GAAhB,CAAoB,UAAS,KAAT,EAAgB;AACzC,aAAO,YAAY,MAAZ,CAAmB,YAAY,QAAZ,CAAqB,KAArB,CAAnB,CAAP;AACD,KAFM,EAEJ,IAFI,CAEC,GAFD,CAAP;AAGD;;AAED,OAAK,UAAL,GAAkB;AAChB,UAAM,IADU;AAEhB,WAAO;AAFS,GAAlB;AAID,CAvBD;;AAyBA,cAAc,SAAd,CAAwB,UAAxB,GAAqC,YAAW;AAC9C,MAAI,OAAO,KAAK,UAAL,CAAgB,IAA3B;MACI,QAAQ,KAAK,UAAL,CAAgB,KAD5B;;AAGA,MAAI,CAAC,KAAL,EAAY,OAAO,IAAP;;;AAGZ,MAAI,MAAM,EAAN,KAAa,IAAjB,EAAuB,OAAO,MAAM,EAAN,CAAP;;AAEvB,SAAO,OAAO,GAAP,GAAa,cAAc,YAAY,SAAZ,CAAsB,KAAtB,CAAd,CAApB;AACD,CAVD;;AAYA,KAAK,aAAL,GAAqB,aAArB;;AAEA,KAAK,IAAL,GAAY,UAAS,OAAT,EAAkB,WAAlB,EAA+B;AACzC,SAAO,IAAI,aAAJ,CAAkB,OAAlB,EAA2B,WAA3B,EAAwC,IAAxC,EAAP;AACD,CAFD","file":"aws4-compiled.js","sourcesContent":["var aws4 = exports,\n    url = require('url'),\n    querystring = require('querystring'),\n    crypto = require('crypto'),\n    lru = require('./lru'),\n    credentialsCache = lru(1000)\n\n// http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html\n\nfunction hmac(key, string, encoding) {\n  return crypto.createHmac('sha256', key).update(string, 'utf8').digest(encoding)\n}\n\nfunction hash(string, encoding) {\n  return crypto.createHash('sha256').update(string, 'utf8').digest(encoding)\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\n// credentials: { accessKeyId, secretAccessKey, [sessionToken] }\nfunction RequestSigner(request, credentials) {\n\n  if (typeof request === 'string') request = url.parse(request)\n\n  var headers = request.headers = (request.headers || {}),\n      hostParts = this.matchHost(request.hostname || request.host || headers.Host || headers.host)\n\n  this.request = request\n  this.credentials = credentials || this.defaultCredentials()\n\n  this.service = request.service || hostParts[0] || ''\n  this.region = request.region || hostParts[1] || 'us-east-1'\n\n  // SES uses a different domain from the service name\n  if (this.service === 'email') this.service = 'ses'\n\n  if (!request.method && request.body)\n    request.method = 'POST'\n\n  if (!headers.Host && !headers.host) {\n    headers.Host = request.hostname || request.host || this.createHost()\n\n    // If a port is specified explicitly, use it as is\n    if (request.port)\n      headers.Host += ':' + request.port\n  }\n  if (!request.hostname && !request.host)\n    request.hostname = headers.Host || headers.host\n}\n\nRequestSigner.prototype.matchHost = function(host) {\n  var match = (host || '').match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/)\n  var hostParts = (match || []).slice(1, 3)\n\n  // ES's hostParts are sometimes the other way round, if the value that is expected\n  // to be region equals ‘es’ switch them back\n  // e.g. search-cluster-name-aaaa00aaaa0aaa0aaaaaaa0aaa.us-east-1.es.amazonaws.com\n  if (hostParts[1] === 'es')\n    hostParts = hostParts.reverse()\n\n  return hostParts\n}\n\n// http://docs.aws.amazon.com/general/latest/gr/rande.html\nRequestSigner.prototype.isSingleRegion = function() {\n  // Special case for S3 and SimpleDB in us-east-1\n  if (['s3', 'sdb'].indexOf(this.service) >= 0 && this.region === 'us-east-1') return true\n\n  return ['cloudfront', 'ls', 'route53', 'iam', 'importexport', 'sts']\n    .indexOf(this.service) >= 0\n}\n\nRequestSigner.prototype.createHost = function() {\n  var region = this.isSingleRegion() ? '' :\n        (this.service === 's3' && this.region !== 'us-east-1' ? '-' : '.') + this.region,\n      service = this.service === 'ses' ? 'email' : this.service\n  return service + region + '.amazonaws.com'\n}\n\nRequestSigner.prototype.prepareRequest = function() {\n  this.parsePath()\n\n  var request = this.request, headers = request.headers, query\n\n  if (request.signQuery) {\n\n    this.parsedPath.query = query = this.parsedPath.query || {}\n\n    if (this.credentials.sessionToken)\n      query['X-Amz-Security-Token'] = this.credentials.sessionToken\n\n    if (this.service === 's3' && !query['X-Amz-Expires'])\n      query['X-Amz-Expires'] = 86400\n\n    if (query['X-Amz-Date'])\n      this.datetime = query['X-Amz-Date']\n    else\n      query['X-Amz-Date'] = this.getDateTime()\n\n    query['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256'\n    query['X-Amz-Credential'] = this.credentials.accessKeyId + '/' + this.credentialString()\n    query['X-Amz-SignedHeaders'] = this.signedHeaders()\n\n  } else {\n\n    if (!request.doNotModifyHeaders) {\n      if (request.body && !headers['Content-Type'] && !headers['content-type'])\n        headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8'\n\n      if (request.body && !headers['Content-Length'] && !headers['content-length'])\n        headers['Content-Length'] = Buffer.byteLength(request.body)\n\n      if (this.credentials.sessionToken)\n        headers['X-Amz-Security-Token'] = this.credentials.sessionToken\n\n      if (this.service === 's3')\n        headers['X-Amz-Content-Sha256'] = hash(this.request.body || '', 'hex')\n\n      if (headers['X-Amz-Date'])\n        this.datetime = headers['X-Amz-Date']\n      else\n        headers['X-Amz-Date'] = this.getDateTime()\n    }\n\n    delete headers.Authorization\n    delete headers.authorization\n  }\n}\n\nRequestSigner.prototype.sign = function() {\n  if (!this.parsedPath) this.prepareRequest()\n\n  if (this.request.signQuery) {\n    this.parsedPath.query['X-Amz-Signature'] = this.signature()\n  } else {\n    this.request.headers.Authorization = this.authHeader()\n  }\n\n  this.request.path = this.formatPath()\n\n  return this.request\n}\n\nRequestSigner.prototype.getDateTime = function() {\n  if (!this.datetime) {\n    var headers = this.request.headers,\n      date = new Date(headers.Date || headers.date || new Date)\n\n    this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '')\n  }\n  return this.datetime\n}\n\nRequestSigner.prototype.getDate = function() {\n  return this.getDateTime().substr(0, 8)\n}\n\nRequestSigner.prototype.authHeader = function() {\n  return [\n    'AWS4-HMAC-SHA256 Credential=' + this.credentials.accessKeyId + '/' + this.credentialString(),\n    'SignedHeaders=' + this.signedHeaders(),\n    'Signature=' + this.signature(),\n  ].join(', ')\n}\n\nRequestSigner.prototype.signature = function() {\n  var date = this.getDate(),\n      cacheKey = [this.credentials.secretAccessKey, date, this.region, this.service].join(),\n      kDate, kRegion, kService, kCredentials = credentialsCache.get(cacheKey)\n  if (!kCredentials) {\n    kDate = hmac('AWS4' + this.credentials.secretAccessKey, date)\n    kRegion = hmac(kDate, this.region)\n    kService = hmac(kRegion, this.service)\n    kCredentials = hmac(kService, 'aws4_request')\n    credentialsCache.set(cacheKey, kCredentials)\n  }\n  return hmac(kCredentials, this.stringToSign(), 'hex')\n}\n\nRequestSigner.prototype.stringToSign = function() {\n  return [\n    'AWS4-HMAC-SHA256',\n    this.getDateTime(),\n    this.credentialString(),\n    hash(this.canonicalString(), 'hex'),\n  ].join('\\n')\n}\n\nRequestSigner.prototype.canonicalString = function() {\n  if (!this.parsedPath) this.prepareRequest()\n\n  var pathStr = this.parsedPath.path,\n      query = this.parsedPath.query,\n      queryStr = '',\n      normalizePath = this.service !== 's3',\n      decodePath = this.service === 's3' || this.request.doNotEncodePath,\n      decodeSlashesInPath = this.service === 's3',\n      firstValOnly = this.service === 's3',\n      bodyHash = this.service === 's3' && this.request.signQuery ?\n        'UNSIGNED-PAYLOAD' : hash(this.request.body || '', 'hex')\n\n  if (query) {\n    queryStr = encodeRfc3986(querystring.stringify(Object.keys(query).sort().reduce(function(obj, key) {\n      if (!key) return obj\n      obj[key] = !Array.isArray(query[key]) ? query[key] :\n        (firstValOnly ? query[key][0] : query[key].slice().sort())\n      return obj\n    }, {})))\n  }\n  if (pathStr !== '/') {\n    if (normalizePath) pathStr = pathStr.replace(/\\/{2,}/g, '/')\n    pathStr = pathStr.split('/').reduce(function(path, piece) {\n      if (normalizePath && piece === '..') {\n        path.pop()\n      } else if (!normalizePath || piece !== '.') {\n        if (decodePath) piece = querystring.unescape(piece)\n        path.push(encodeRfc3986(querystring.escape(piece)))\n      }\n      return path\n    }, []).join('/')\n    if (pathStr[0] !== '/') pathStr = '/' + pathStr\n    if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/')\n  }\n\n  return [\n    this.request.method || 'GET',\n    pathStr,\n    queryStr,\n    this.canonicalHeaders() + '\\n',\n    this.signedHeaders(),\n    bodyHash,\n  ].join('\\n')\n}\n\nRequestSigner.prototype.canonicalHeaders = function() {\n  var headers = this.request.headers\n  function trimAll(header) {\n    return header.toString().trim().replace(/\\s+/g, ' ')\n  }\n  return Object.keys(headers)\n    .sort(function(a, b) { return a.toLowerCase() < b.toLowerCase() ? -1 : 1 })\n    .map(function(key) { return key.toLowerCase() + ':' + trimAll(headers[key]) })\n    .join('\\n')\n}\n\nRequestSigner.prototype.signedHeaders = function() {\n  return Object.keys(this.request.headers)\n    .map(function(key) { return key.toLowerCase() })\n    .sort()\n    .join(';')\n}\n\nRequestSigner.prototype.credentialString = function() {\n  return [\n    this.getDate(),\n    this.region,\n    this.service,\n    'aws4_request',\n  ].join('/')\n}\n\nRequestSigner.prototype.defaultCredentials = function() {\n  var env = process.env\n  return {\n    accessKeyId: env.AWS_ACCESS_KEY_ID || env.AWS_ACCESS_KEY,\n    secretAccessKey: env.AWS_SECRET_ACCESS_KEY || env.AWS_SECRET_KEY,\n    sessionToken: env.AWS_SESSION_TOKEN,\n  }\n}\n\nRequestSigner.prototype.parsePath = function() {\n  var path = this.request.path || '/',\n      queryIx = path.indexOf('?'),\n      query = null\n\n  if (queryIx >= 0) {\n    query = querystring.parse(path.slice(queryIx + 1))\n    path = path.slice(0, queryIx)\n  }\n\n  // S3 doesn't always encode characters > 127 correctly and\n  // all services don't encode characters > 255 correctly\n  // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n  if (/[^0-9A-Za-z!'()*\\-._~%/]/.test(path)) {\n    path = path.split('/').map(function(piece) {\n      return querystring.escape(querystring.unescape(piece))\n    }).join('/')\n  }\n\n  this.parsedPath = {\n    path: path,\n    query: query,\n  }\n}\n\nRequestSigner.prototype.formatPath = function() {\n  var path = this.parsedPath.path,\n      query = this.parsedPath.query\n\n  if (!query) return path\n\n  // Services don't support empty query string keys\n  if (query[''] != null) delete query['']\n\n  return path + '?' + encodeRfc3986(querystring.stringify(query))\n}\n\naws4.RequestSigner = RequestSigner\n\naws4.sign = function(request, credentials) {\n  return new RequestSigner(request, credentials).sign()\n}\n"]}