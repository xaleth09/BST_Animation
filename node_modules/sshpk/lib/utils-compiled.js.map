{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tbufferSplit: bufferSplit,\n\taddRSAMissing: addRSAMissing,\n\tcalculateDSAPublic: calculateDSAPublic,\n\tmpNormalize: mpNormalize,\n\tecNormalize: ecNormalize,\n\tcountZeros: countZeros,\n\tassertCompatible: assertCompatible,\n\tisCompatible: isCompatible,\n\topensslKeyDeriv: opensslKeyDeriv\n};\n\nvar assert = require('assert-plus');\nvar PrivateKey = require('./private-key');\nvar crypto = require('crypto');\n\nvar MAX_CLASS_DEPTH = 3;\n\nfunction isCompatible(obj, klass, needVer) {\n\tif (obj === null || typeof (obj) !== 'object')\n\t\treturn (false);\n\tif (needVer === undefined)\n\t\tneedVer = klass.prototype._sshpkApiVersion;\n\tif (obj instanceof klass &&\n\t    klass.prototype._sshpkApiVersion[0] == needVer[0])\n\t\treturn (true);\n\tvar proto = Object.getPrototypeOf(obj);\n\tvar depth = 0;\n\twhile (proto.constructor.name !== klass.name) {\n\t\tproto = Object.getPrototypeOf(proto);\n\t\tif (!proto || ++depth > MAX_CLASS_DEPTH)\n\t\t\treturn (false);\n\t}\n\tif (proto.constructor.name !== klass.name)\n\t\treturn (false);\n\tvar ver = proto._sshpkApiVersion;\n\tif (ver === undefined)\n\t\tver = klass._oldVersionDetect(obj);\n\tif (ver[0] != needVer[0] || ver[1] < needVer[1])\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction assertCompatible(obj, klass, needVer, name) {\n\tif (name === undefined)\n\t\tname = 'object';\n\tassert.ok(obj, name + ' must not be null');\n\tassert.object(obj, name + ' must be an object');\n\tif (needVer === undefined)\n\t\tneedVer = klass.prototype._sshpkApiVersion;\n\tif (obj instanceof klass &&\n\t    klass.prototype._sshpkApiVersion[0] == needVer[0])\n\t\treturn;\n\tvar proto = Object.getPrototypeOf(obj);\n\tvar depth = 0;\n\twhile (proto.constructor.name !== klass.name) {\n\t\tproto = Object.getPrototypeOf(proto);\n\t\tassert.ok(proto && ++depth <= MAX_CLASS_DEPTH,\n\t\t    name + ' must be a ' + klass.name + ' instance');\n\t}\n\tassert.strictEqual(proto.constructor.name, klass.name,\n\t    name + ' must be a ' + klass.name + ' instance');\n\tvar ver = proto._sshpkApiVersion;\n\tif (ver === undefined)\n\t\tver = klass._oldVersionDetect(obj);\n\tassert.ok(ver[0] == needVer[0] && ver[1] >= needVer[1],\n\t    name + ' must be compatible with ' + klass.name + ' klass ' +\n\t    'version ' + needVer[0] + '.' + needVer[1]);\n}\n\nvar CIPHER_LEN = {\n\t'des-ede3-cbc': { key: 7, iv: 8 },\n\t'aes-128-cbc': { key: 16, iv: 16 }\n};\nvar PKCS5_SALT_LEN = 8;\n\nfunction opensslKeyDeriv(cipher, salt, passphrase, count) {\n\tassert.buffer(salt, 'salt');\n\tassert.buffer(passphrase, 'passphrase');\n\tassert.number(count, 'iteration count');\n\n\tvar clen = CIPHER_LEN[cipher];\n\tassert.object(clen, 'supported cipher');\n\n\tsalt = salt.slice(0, PKCS5_SALT_LEN);\n\n\tvar D, D_prev, bufs;\n\tvar material = new Buffer(0);\n\twhile (material.length < clen.key + clen.iv) {\n\t\tbufs = [];\n\t\tif (D_prev)\n\t\t\tbufs.push(D_prev);\n\t\tbufs.push(passphrase);\n\t\tbufs.push(salt);\n\t\tD = Buffer.concat(bufs);\n\t\tfor (var j = 0; j < count; ++j)\n\t\t\tD = crypto.createHash('md5').update(D).digest();\n\t\tmaterial = Buffer.concat([material, D]);\n\t\tD_prev = D;\n\t}\n\n\treturn ({\n\t    key: material.slice(0, clen.key),\n\t    iv: material.slice(clen.key, clen.key + clen.iv)\n\t});\n}\n\n/* Count leading zero bits on a buffer */\nfunction countZeros(buf) {\n\tvar o = 0, obit = 8;\n\twhile (o < buf.length) {\n\t\tvar mask = (1 << obit);\n\t\tif ((buf[o] & mask) === mask)\n\t\t\tbreak;\n\t\tobit--;\n\t\tif (obit < 0) {\n\t\t\to++;\n\t\t\tobit = 8;\n\t\t}\n\t}\n\treturn (o*8 + (8 - obit) - 1);\n}\n\nfunction bufferSplit(buf, chr) {\n\tassert.buffer(buf);\n\tassert.string(chr);\n\n\tvar parts = [];\n\tvar lastPart = 0;\n\tvar matches = 0;\n\tfor (var i = 0; i < buf.length; ++i) {\n\t\tif (buf[i] === chr.charCodeAt(matches))\n\t\t\t++matches;\n\t\telse if (buf[i] === chr.charCodeAt(0))\n\t\t\tmatches = 1;\n\t\telse\n\t\t\tmatches = 0;\n\n\t\tif (matches >= chr.length) {\n\t\t\tvar newPart = i + 1;\n\t\t\tparts.push(buf.slice(lastPart, newPart - matches));\n\t\t\tlastPart = newPart;\n\t\t\tmatches = 0;\n\t\t}\n\t}\n\tif (lastPart <= buf.length)\n\t\tparts.push(buf.slice(lastPart, buf.length));\n\n\treturn (parts);\n}\n\nfunction ecNormalize(buf, addZero) {\n\tassert.buffer(buf);\n\tif (buf[0] === 0x00 && buf[1] === 0x04) {\n\t\tif (addZero)\n\t\t\treturn (buf);\n\t\treturn (buf.slice(1));\n\t} else if (buf[0] === 0x04) {\n\t\tif (!addZero)\n\t\t\treturn (buf);\n\t} else {\n\t\twhile (buf[0] === 0x00)\n\t\t\tbuf = buf.slice(1);\n\t\tif (buf[0] === 0x02 || buf[0] === 0x03)\n\t\t\tthrow (new Error('Compressed elliptic curve points ' +\n\t\t\t    'are not supported'));\n\t\tif (buf[0] !== 0x04)\n\t\t\tthrow (new Error('Not a valid elliptic curve point'));\n\t\tif (!addZero)\n\t\t\treturn (buf);\n\t}\n\tvar b = new Buffer(buf.length + 1);\n\tb[0] = 0x0;\n\tbuf.copy(b, 1);\n\treturn (b);\n}\n\nfunction mpNormalize(buf) {\n\tassert.buffer(buf);\n\twhile (buf.length > 1 && buf[0] === 0x00 && (buf[1] & 0x80) === 0x00)\n\t\tbuf = buf.slice(1);\n\tif ((buf[0] & 0x80) === 0x80) {\n\t\tvar b = new Buffer(buf.length + 1);\n\t\tb[0] = 0x00;\n\t\tbuf.copy(b, 1);\n\t\tbuf = b;\n\t}\n\treturn (buf);\n}\n\nfunction bigintToMpBuf(bigint) {\n\tvar buf = new Buffer(bigint.toByteArray());\n\tbuf = mpNormalize(buf);\n\treturn (buf);\n}\n\nfunction calculateDSAPublic(g, p, x) {\n\tassert.buffer(g);\n\tassert.buffer(p);\n\tassert.buffer(x);\n\ttry {\n\t\tvar bigInt = require('jsbn').BigInteger;\n\t} catch (e) {\n\t\tthrow (new Error('To load a PKCS#8 format DSA private key, ' +\n\t\t    'the node jsbn library is required.'));\n\t}\n\tg = new bigInt(g);\n\tp = new bigInt(p);\n\tx = new bigInt(x);\n\tvar y = g.modPow(x, p);\n\tvar ybuf = bigintToMpBuf(y);\n\treturn (ybuf);\n}\n\nfunction addRSAMissing(key) {\n\tassert.object(key);\n\tassertCompatible(key, PrivateKey, [1, 1]);\n\ttry {\n\t\tvar bigInt = require('jsbn').BigInteger;\n\t} catch (e) {\n\t\tthrow (new Error('To write a PEM private key from ' +\n\t\t    'this source, the node jsbn lib is required.'));\n\t}\n\n\tvar d = new bigInt(key.part.d.data);\n\tvar buf;\n\n\tif (!key.part.dmodp) {\n\t\tvar p = new bigInt(key.part.p.data);\n\t\tvar dmodp = d.mod(p.subtract(1));\n\n\t\tbuf = bigintToMpBuf(dmodp);\n\t\tkey.part.dmodp = {name: 'dmodp', data: buf};\n\t\tkey.parts.push(key.part.dmodp);\n\t}\n\tif (!key.part.dmodq) {\n\t\tvar q = new bigInt(key.part.q.data);\n\t\tvar dmodq = d.mod(q.subtract(1));\n\n\t\tbuf = bigintToMpBuf(dmodq);\n\t\tkey.part.dmodq = {name: 'dmodq', data: buf};\n\t\tkey.parts.push(key.part.dmodq);\n\t}\n}\n"]}