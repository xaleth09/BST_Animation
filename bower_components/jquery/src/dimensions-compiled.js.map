{"version":3,"sources":["dimensions.js"],"names":[],"mappings":"AAAA,OAAQ,CACP,QADO,EAEP,eAFO,EAGP,OAHO,CAAR,EAIG,UAAU,MAAV,EAAkB,MAAlB,EAA2B;;;AAG9B,QAAO,IAAP,CAAa,EAAE,QAAQ,QAAV,EAAoB,OAAO,OAA3B,EAAb,EAAmD,UAAU,IAAV,EAAgB,IAAhB,EAAuB;AACzE,SAAO,IAAP,CAAa,EAAE,SAAS,UAAU,IAArB,EAA2B,SAAS,IAApC,EAA0C,IAAI,UAAU,IAAxD,EAAb,EACC,UAAU,YAAV,EAAwB,QAAxB,EAAmC;;;AAGnC,UAAO,EAAP,CAAW,QAAX,IAAwB,UAAU,MAAV,EAAkB,KAAlB,EAA0B;AACjD,QAAI,YAAY,UAAU,MAAV,KAAsB,gBAAgB,OAAO,MAAP,KAAkB,SAAxD,CAAhB;QACC,QAAQ,iBAAkB,WAAW,IAAX,IAAmB,UAAU,IAA7B,GAAoC,QAApC,GAA+C,QAAjE,CADT;;AAGA,WAAO,OAAQ,IAAR,EAAc,UAAU,IAAV,EAAgB,IAAhB,EAAsB,KAAtB,EAA8B;AAClD,SAAI,GAAJ;;AAEA,SAAK,OAAO,QAAP,CAAiB,IAAjB,CAAL,EAA+B;;;;;AAK9B,aAAO,KAAK,QAAL,CAAc,eAAd,CAA+B,WAAW,IAA1C,CAAP;AACA;;;AAGD,SAAK,KAAK,QAAL,KAAkB,CAAvB,EAA2B;AAC1B,YAAM,KAAK,eAAX;;;;AAIA,aAAO,KAAK,GAAL,CACN,KAAK,IAAL,CAAW,WAAW,IAAtB,CADM,EACwB,IAAK,WAAW,IAAhB,CADxB,EAEN,KAAK,IAAL,CAAW,WAAW,IAAtB,CAFM,EAEwB,IAAK,WAAW,IAAhB,CAFxB,EAGN,IAAK,WAAW,IAAhB,CAHM,CAAP;AAKA;;AAED,YAAO,UAAU,SAAV;;;AAGN,YAAO,GAAP,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,KAAxB,CAHM;;;AAMN,YAAO,KAAP,CAAc,IAAd,EAAoB,IAApB,EAA0B,KAA1B,EAAiC,KAAjC,CAND;AAOA,KA/BM,EA+BJ,IA/BI,EA+BE,YAAY,MAAZ,GAAqB,SA/BvB,EA+BkC,SA/BlC,EA+B6C,IA/B7C,CAAP;AAgCA,IApCD;AAqCA,GAzCD;AA0CA,EA3CD;;AA6CA,QAAO,MAAP;AACC,CArDD","file":"dimensions-compiled.js","sourcesContent":["define( [\r\n\t\"./core\",\r\n\t\"./core/access\",\r\n\t\"./css\"\r\n], function( jQuery, access ) {\r\n\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\r\n\t\tfunction( defaultExtra, funcName ) {\r\n\r\n\t\t// Margin is only for outerHeight, outerWidth\r\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n\t\t\treturn access( this, function( elem, type, value ) {\r\n\t\t\t\tvar doc;\r\n\r\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\r\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\r\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\r\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get document width or height\r\n\t\t\t\tif ( elem.nodeType === 9 ) {\r\n\t\t\t\t\tdoc = elem.documentElement;\r\n\r\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r\n\t\t\t\t\t// whichever is greatest\r\n\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n\t\t\t\t\t\tdoc[ \"client\" + name ]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value === undefined ?\r\n\r\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n\r\n\t\t\t\t\t// Set width or height on the element\r\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\r\n\t\t};\r\n\t} );\r\n} );\r\n\r\nreturn jQuery;\r\n} );\r\n"]}