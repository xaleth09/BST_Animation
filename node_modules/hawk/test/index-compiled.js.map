{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Url = require('url');\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Hawk', function () {\r\n\r\n    var credentialsFunc = function (id, callback) {\r\n\r\n        var credentials = {\r\n            id: id,\r\n            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\r\n            algorithm: (id === '1' ? 'sha1' : 'sha256'),\r\n            user: 'steve'\r\n        };\r\n\r\n        return callback(null, credentials);\r\n    };\r\n\r\n    it('generates a header then successfully parse it (configuration)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header(Url.parse('http://example.com:8080/resource/4?filter=a'), req.method, { credentials: credentials1, ext: 'some-app-data' }).field;\r\n            expect(req.authorization).to.exist();\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (node request)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: '/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts, { payload: 'some reply' })).to.equal(true);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (absolute request uri)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: 'http://example.com:8080/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts, { payload: 'some reply' })).to.equal(true);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (no server header options)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: '/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts);\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts)).to.equal(true);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then fails to parse it (missing server header hash)', function (done) {\r\n\r\n        var req = {\r\n            method: 'POST',\r\n            url: '/resource/4?filter=a',\r\n            headers: {\r\n                host: 'example.com:8080',\r\n                'content-type': 'text/plain;x=y'\r\n            }\r\n        };\r\n\r\n        var payload = 'some not so random text';\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\r\n            req.headers.authorization = reqHeader.field;\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload(payload, credentials2, artifacts, req.headers['content-type'])).to.equal(true);\r\n\r\n                var res = {\r\n                    headers: {\r\n                        'content-type': 'text/plain'\r\n                    }\r\n                };\r\n\r\n                res.headers['server-authorization'] = Hawk.server.header(credentials2, artifacts);\r\n                expect(res.headers['server-authorization']).to.exist();\r\n\r\n                expect(Hawk.client.authenticate(res, credentials2, artifacts, { payload: 'some reply' })).to.equal(false);\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (with hash)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it then validate payload', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(Hawk.server.authenticatePayload('hola!', credentials2, artifacts)).to.be.true();\r\n                expect(Hawk.server.authenticatePayload('hello!', credentials2, artifacts)).to.be.false();\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parses and validates payload', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, { payload: 'hola!' }, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (app)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', app: 'asd23ased' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(artifacts.app).to.equal('asd23ased');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then successfully parse it (app, dlg)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data', app: 'asd23ased', dlg: '23434szr3q4d' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(artifacts.ext).to.equal('some-app-data');\r\n                expect(artifacts.app).to.equal('asd23ased');\r\n                expect(artifacts.dlg).to.equal('23434szr3q4d');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header then fail authentication due to bad hash', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, payload: 'hola!', ext: 'some-app-data' }).field;\r\n            Hawk.server.authenticate(req, credentialsFunc, { payload: 'byebye!' }, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.exist();\r\n                expect(err.output.payload.message).to.equal('Bad payload hash');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('generates a header for one resource then fail to authenticate another', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?filter=a',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials1, ext: 'some-app-data' }).field;\r\n            req.url = '/something/else';\r\n\r\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials2, artifacts) {\r\n\r\n                expect(err).to.exist();\r\n                expect(credentials2).to.exist();\r\n                done();\r\n            });\r\n        });\r\n    });\r\n});\r\n"]}