{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAEA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,OAAO,QAAQ,QAAR,CAAX;;;;AAKA,IAAI,YAAY,EAAhB;;;;AAKA,IAAI,MAAM,QAAQ,GAAR,GAAc,IAAI,MAAJ,EAAxB;AACA,IAAI,SAAS,IAAI,MAAjB;AACA,IAAI,QAAQ,IAAI,KAAhB;AACA,IAAI,WAAW,IAAI,UAAnB;AACA,IAAI,KAAK,IAAI,IAAb;AACA,IAAI,SAAS,IAAI,MAAjB;;AAGA,SAAS,MAAT,EAAiB,YAAY;;AAEzB,aAAS,OAAT,EAAkB,YAAY;;AAE1B,WAAG,+CAAH,EAAoD,UAAU,IAAV,EAAgB;;AAEhE,iBAAK,IAAL,CAAU,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE3B,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,uBAAO,IAAP,EAAa,EAAb,CAAgB,KAAhB;AACA,oBAAI,KAAK,KAAK,CAAd;;AAEA,qBAAK,IAAL,CAAU,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE3B,2BAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,2BAAO,IAAP,EAAa,EAAb,CAAgB,KAAhB;AACA,wBAAI,KAAK,KAAK,CAAd;AACA,2BAAO,KAAK,GAAL,CAAS,KAAK,EAAd,CAAP,EAA0B,EAA1B,CAA6B,KAA7B,CAAmC,GAAnC;AACA;AACH,iBAPD;AAQH,aAdD;AAeH,SAjBD;;AAmBA,WAAG,uBAAH,EAA4B,UAAU,IAAV,EAAgB;;AAExC,iBAAK,IAAL,CAAU,EAAE,MAAM,eAAR,EAAyB,kBAAkB,IAA3C,EAAV,EAA6D,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE9E,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,uBAAO,IAAP,EAAa,EAAb,CAAgB,KAAhB;AACA,uBAAO,KAAK,aAAZ,EAA2B,EAA3B,CAA8B,KAA9B;AACA;AACH,aAND;AAOH,SATD;;AAWA,WAAG,0BAAH,EAA+B,UAAU,IAAV,EAAgB;;AAE3C,iBAAK,IAAL,CAAU,EAAE,MAAM,GAAR,EAAa,SAAS,GAAtB,EAAV,EAAuC,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAExD,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAP,EAAa,EAAb,CAAgB,GAAhB,CAAoB,KAApB;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,SAA7B;AACA;AACH,aAND;AAOH,SATD;;AAWA,WAAG,uBAAH,EAA4B,EAAE,UAAU,KAAZ,EAA5B,EAAiD,UAAU,IAAV,EAAgB;;AAE7D,gBAAI,OAAO,MAAM,YAAjB;AACA,kBAAM,YAAN,GAAqB,UAAU,IAAV,EAAgB;;AAEjC,sBAAM,YAAN,GAAqB,IAArB;AACA,oBAAI,SAAS,MAAM,YAAN,CAAmB,IAAnB,CAAb;AACA,6BAAa,YAAY;AAAE,2BAAO,IAAP,CAAY,OAAZ,EAAqB,IAAI,KAAJ,CAAU,MAAV,CAArB;AAAyC,iBAApE;AACA,uBAAO,MAAP;AACH,aAND;;AAQA,iBAAK,IAAL,CAAU,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE3B,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAP,EAAa,EAAb,CAAgB,GAAhB,CAAoB,KAApB;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,MAA7B;AACA;AACH,aAND;AAOH,SAlBD;;AAoBA,WAAG,+BAAH,EAAoC,EAAE,UAAU,KAAZ,EAApC,EAAyD,UAAU,IAAV,EAAgB;;AAErE,gBAAI,OAAO,MAAM,MAAN,CAAa,SAAb,CAAuB,IAAlC;AACA,kBAAM,MAAN,CAAa,SAAb,CAAuB,IAAvB,GAA8B,UAAU,GAAV,EAAe,MAAf,EAAuB,MAAvB,EAA+B,IAA/B,EAAqC,OAArC,EAA8C,QAA9C,EAAwD;;AAElF,sBAAM,MAAN,CAAa,SAAb,CAAuB,IAAvB,GAA8B,IAA9B;AACA,uBAAO,SAAS,IAAT,EAAe,EAAf,CAAP;AACH,aAJD;;AAMA,iBAAK,IAAL,CAAU,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE3B,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAP,EAAa,EAAb,CAAgB,GAAhB,CAAoB,KAApB;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,+BAA7B;AACA;AACH,aAND;AAOH,SAhBD;;AAkBA,WAAG,2BAAH,EAAgC,UAAU,IAAV,EAAgB;;AAE5C,iBAAK,IAAL,CAAU,EAAE,MAAM,OAAR,EAAiB,SAAS,KAA1B,EAAV,EAA6C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE9D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAP,EAAa,EAAb,CAAgB,GAAhB,CAAoB,KAApB;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,OAAvB,CAA+B,aAA/B;AACA;AACH,aAND;AAOH,SATD;;AAWA,WAAG,mCAAH,EAAwC,UAAU,IAAV,EAAgB;;AAEpD,gBAAI,SAAS,MAAM,YAAN,CAAmB,MAAnB,CAAb;AACA,mBAAO,EAAP,CAAU,SAAV,EAAqB,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC5C,oBAAI,UAAU,IAAI,MAAJ,CAAW,EAAX,CAAd;AACA,uBAAO,IAAP,CAAY,OAAZ,EAAqB,CAArB,EAAwB,QAAQ,MAAhC,EAAwC,OAAO,IAA/C,EAAqD,OAAO,OAA5D,EAAqE,UAAU,GAAV,EAAe,KAAf,EAAsB;;AAEvF,2BAAO,KAAP;AACH,iBAHD;AAIH,aAND;;AAQA,mBAAO,IAAP,CAAY,KAAZ;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,yBAA7B;AACA;AACH,aALD;AAMH,SAnBD;;AAqBA,YAAI,SAAS,UAAU,KAAV,EAAiB;;AAE1B,gBAAI,SAAS,MAAM,YAAN,CAAmB,MAAnB,CAAb;AACA,mBAAO,EAAP,CAAU,SAAV,EAAqB,UAAU,OAAV,EAAmB,MAAnB,EAA2B;;AAE5C,oBAAI,UAAU,IAAI,MAAJ,CAAW,CACrB,IADqB,EACf,IADe,EACT,IADS,EACH,IADG,EAErB,IAFqB,EAEf,IAFe,EAET,IAFS,EAEH,IAFG,EAGrB,IAHqB,EAGf,IAHe,EAGT,IAHS,EAGH,IAHG,EAIrB,IAJqB,EAIf,IAJe,EAIT,IAJS,EAIH,IAJG,EAKrB,IALqB,EAKf,IALe,EAKT,IALS,EAKH,IALG,EAMrB,IANqB,EAMf,IANe,EAMT,IANS,EAMH,IANG,EAOrB,IAPqB,EAOf,IAPe,EAOT,IAPS,EAOH,IAPG,EAQrB,IARqB,EAQf,IARe,EAQT,IARS,EAQH,IARG,EASrB,IATqB,EASf,IATe,EAST,IATS,EASH,IATG,EAUrB,IAVqB,EAUf,IAVe,EAUT,IAVS,EAUH,IAVG,EAWrB,IAXqB,EAWf,IAXe,EAWT,IAXS,EAWH,IAXG,EAYrB,IAZqB,EAYf,IAZe,EAYT,IAZS,EAYH,IAZG,CAAX,CAAd;;AAeA,qBAAK,IAAI,IAAI,CAAR,EAAW,KAAK,MAAM,MAA3B,EAAmC,IAAI,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;AAC5C,4BAAQ,MAAM,CAAN,EAAS,CAAT,CAAR,IAAuB,MAAM,CAAN,EAAS,CAAT,CAAvB;AACH;;AAED,uBAAO,IAAP,CAAY,OAAZ,EAAqB,CAArB,EAAwB,QAAQ,MAAhC,EAAwC,OAAO,IAA/C,EAAqD,OAAO,OAA5D,EAAqE,UAAU,GAAV,EAAe,KAAf,EAAsB;;AAEvF,2BAAO,KAAP;AACH,iBAHD;AAIH,aAzBD;;AA2BA,mBAAO,IAAP,CAAY,KAAZ;AACH,SA/BD;;AAiCA,WAAG,sBAAH,EAA2B,UAAU,IAAV,EAAgB;;AAEvC,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,KAAK,OAAZ,EAAqB,EAArB,CAAwB,KAAxB,CAA8B,CAA9B;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,yBAA7B;AACA;AACH,aAND;AAOH,SAXD;;AAaA,WAAG,iCAAH,EAAsC,UAAU,IAAV,EAAgB;;AAElD,mBAAO,CAAC,CAAC,EAAD,EAAK,IAAL,CAAD,EAAa,CAAC,EAAD,EAAK,IAAL,CAAb,EAAyB,CAAC,EAAD,EAAK,IAAL,CAAzB,EAAqC,CAAC,EAAD,EAAK,IAAL,CAArC,EAAiD,CAAC,EAAD,EAAK,CAAL,CAAjD,EAA0D,CAAC,EAAD,EAAK,CAAL,CAA1D,EAAmE,CAAC,EAAD,EAAK,CAAL,CAAnE,EAA4E,CAAC,EAAD,EAAK,CAAL,CAA5E,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,yBAA7B;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,+BAAH,EAAoC,UAAU,IAAV,EAAgB;;AAEhD,mBAAO,CAAC,CAAC,EAAD,EAAK,IAAL,CAAD,EAAa,CAAC,EAAD,EAAK,IAAL,CAAb,EAAyB,CAAC,EAAD,EAAK,IAAL,CAAzB,EAAqC,CAAC,EAAD,EAAK,IAAL,CAArC,EAAiD,CAAC,EAAD,EAAK,CAAL,CAAjD,EAA0D,CAAC,EAAD,EAAK,CAAL,CAA1D,EAAmE,CAAC,EAAD,EAAK,CAAL,CAAnE,EAA4E,CAAC,EAAD,EAAK,CAAL,CAA5E,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,yBAA7B;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,+CAAH,EAAoD,UAAU,IAAV,EAAgB;;AAEhE,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,IAAI,OAAX,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,2BAA7B;AACA,uBAAO,KAAK,aAAZ,EAA2B,EAA3B,CAA8B,KAA9B,CAAoC,OAApC;AACA;AACH,aAND;AAOH,SAXD;;AAaA,WAAG,+CAAH,EAAoD,UAAU,IAAV,EAAgB;;AAEhE,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,EAAsC,CAAC,CAAD,EAAI,CAAJ,CAAtC,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,KAAK,OAAZ,EAAqB,EAArB,CAAwB,KAAxB,CAA8B,OAA9B;AACA,uBAAO,KAAK,aAAZ,EAA2B,EAA3B,CAA8B,KAA9B,CAAoC,gBAApC;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,kDAAH,EAAuD,UAAU,IAAV,EAAgB;;AAEnE,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,EAAsC,CAAC,CAAD,EAAI,IAAJ,CAAtC,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,KAAK,OAAZ,EAAqB,EAArB,CAAwB,KAAxB,CAA8B,UAA9B;AACA,uBAAO,KAAK,aAAZ,EAA2B,EAA3B,CAA8B,KAA9B,CAAoC,gBAApC;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,sCAAH,EAA2C,UAAU,IAAV,EAAgB;;AAEvD,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,KAAK,IAAZ,EAAkB,EAAlB,CAAqB,KAArB,CAA2B,kBAA3B;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,uCAAH,EAA4C,UAAU,IAAV,EAAgB;;AAExD,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,KAAK,IAAZ,EAAkB,EAAlB,CAAqB,KAArB,CAA2B,mBAA3B;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,4BAAH,EAAiC,UAAU,IAAV,EAAgB;;AAE7C,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,KAAK,IAAZ,EAAkB,EAAlB,CAAqB,KAArB,CAA2B,QAA3B;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,+BAAH,EAAoC,UAAU,IAAV,EAAgB;;AAEhD,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,KAAK,IAAZ,EAAkB,EAAlB,CAAqB,KAArB,CAA2B,WAA3B;AACA;AACH,aALD;AAMH,SAVD;;AAYA,WAAG,8BAAH,EAAmC,UAAU,IAAV,EAAgB;;AAE/C,mBAAO,CAAC,CAAC,CAAD,EAAI,CAAC,KAAK,CAAN,KAAY,KAAK,CAAjB,KAAuB,KAAK,CAA5B,CAAJ,CAAD,CAAP;;AAEA,iBAAK,IAAL,CAAU,EAAE,MAAM,WAAR,EAAqB,MAAM,KAA3B,EAAV,EAA8C,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAE/D,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,KAAK,IAAZ,EAAkB,EAAlB,CAAqB,KAArB,CAA2B,UAA3B;AACA;AACH,aALD;AAMH,SAVD;AAWH,KAvRD;;AAyRA,aAAS,SAAT,EAAoB,YAAY;;AAE5B,WAAG,yBAAH,EAA8B,UAAU,IAAV,EAAgB;;AAE1C,iBAAK,MAAL,CAAY,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAE/B,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,uBAAO,MAAP,EAAe,EAAf,CAAkB,GAAlB,CAAsB,KAAtB,CAA4B,CAA5B;AACA;AACH,aALD;AAMH,SARD;;AAUA,WAAG,oCAAH,EAAyC,UAAU,IAAV,EAAgB;;AAErD,iBAAK,MAAL,CAAY,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAE/B,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,uBAAO,MAAP,EAAe,EAAf,CAAkB,GAAlB,CAAsB,KAAtB,CAA4B,CAA5B;AACA,oBAAI,UAAU,MAAd;AACA,qBAAK,MAAL,CAAY,EAAZ,EAAgB,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAEnC,2BAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,2BAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,OAAxB;AACA;AACH,iBALD;AAMH,aAXD;AAYH,SAdD;;AAgBA,WAAG,yCAAH,EAA8C,UAAU,IAAV,EAAgB;;AAE1D,iBAAK,MAAL,CAAY,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAE/B,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,uBAAO,MAAP,EAAe,EAAf,CAAkB,GAAlB,CAAsB,KAAtB,CAA4B,CAA5B;AACA,oBAAI,UAAU,MAAd;AACA,qBAAK,MAAL,CAAY,EAAE,MAAM,uBAAR,EAAZ,EAA+C,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAElE,2BAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,2BAAO,MAAP,EAAe,EAAf,CAAkB,GAAlB,CAAsB,KAAtB,CAA4B,OAA5B;AACA;AACH,iBALD;AAMH,aAXD;AAYH,SAdD;;AAgBA,WAAG,yCAAH,EAA8C,UAAU,IAAV,EAAgB;;AAE1D,iBAAK,MAAL,CAAY,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAE/B,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,uBAAO,MAAP,EAAe,EAAf,CAAkB,GAAlB,CAAsB,KAAtB,CAA4B,CAA5B;AACA,oBAAI,UAAU,MAAd;AACA,qBAAK,MAAL,CAAY,EAAE,MAAM,GAAR,EAAZ,EAA2B,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAE9C,2BAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB;AACA,2BAAO,MAAP,EAAe,EAAf,CAAkB,GAAlB,CAAsB,KAAtB,CAA4B,OAA5B;AACA;AACH,iBALD;AAMH,aAXD;AAYH,SAdD;;AAgBA,WAAG,oDAAH,EAAyD,UAAU,IAAV,EAAgB;;AAErE,iBAAK,MAAL,CAAY,EAAE,MAAM,OAAR,EAAZ,EAA+B,UAAU,GAAV,EAAe,MAAf,EAAuB;;AAElD,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf;AACA,uBAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,CAAxB;AACA;AACH,aALD;AAMH,SARD;AASH,KArED;;AAuEA,aAAS,MAAT,EAAiB,YAAY;;AAEzB,WAAG,wCAAH,EAA6C,UAAU,IAAV,EAAgB;;AAEzD,iBAAK,IAAL;;AAEA,gBAAI,SAAS,KAAK,GAAL,EAAb;AACA,mBAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,KAAK,GAAL,EAAxB;;AAEA,iBAAK,KAAL,CAAW,YAAY;;AAEnB,oBAAI,MAAM,KAAK,GAAL,EAAV;AACA,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB,CAAyB,KAAK,GAAL,EAAzB;AACA,qBAAK,IAAL;;AAEA;AACH,aAPD;AAQH,SAfD;;AAiBA,WAAG,cAAH,EAAmB,UAAU,IAAV,EAAgB;;AAE/B,iBAAK,KAAL,CAAW,YAAY;;AAEnB,qBAAK,KAAL,CAAW,YAAY;;AAEnB,wBAAI,MAAM,KAAK,GAAL,EAAV;AACA,2BAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB,CAAyB,KAAK,GAAL,EAAzB;AACA,yBAAK,IAAL;;AAEA;AACH,iBAPD;AAQH,aAVD;AAWH,SAbD;;AAeA,WAAG,6DAAH,EAAkE,UAAU,IAAV,EAAgB;;AAE9E,iBAAK,IAAL;;AAEA,gBAAI,SAAS,KAAK,GAAL,EAAb;AACA,mBAAO,MAAP,EAAe,EAAf,CAAkB,KAAlB,CAAwB,KAAK,GAAL,EAAxB;;AAEA,iBAAK,KAAL,CAAW,EAAE,kBAAkB,GAApB,EAAX,EAAsC,YAAY;;AAE9C,oBAAI,MAAM,KAAK,GAAL,EAAV;AACA,uBAAO,GAAP,EAAY,EAAZ,CAAe,GAAf,CAAmB,KAAnB,CAAyB,KAAK,GAAL,EAAzB;AACA,uBAAO,GAAP,EAAY,EAAZ,CAAe,KAAf,CAAqB,KAAK,GAAL,EAArB;;AAEA,2BAAW,YAAY;;AAEnB,2BAAO,KAAK,GAAL,EAAP,EAAmB,EAAnB,CAAsB,GAAtB,CAA0B,KAA1B,CAAgC,GAAhC;AACA,yBAAK,IAAL;AACA;AACH,iBALD,EAKG,GALH;AAMH,aAZD;AAaH,SApBD;AAqBH,KAvDD;AAwDH,CA1ZD","file":"index-compiled.js","sourcesContent":["// Load modules\n\nvar Dns = require('dns');\nvar Dgram = require('dgram');\nvar Lab = require('lab');\nvar Sntp = require('../lib');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar before = lab.before;\nvar after = lab.after;\nvar describe = lab.experiment;\nvar it = lab.test;\nvar expect = Lab.expect;\n\n\ndescribe('SNTP', function () {\n\n    describe('#time', function () {\n\n        it('returns consistent result over multiple tries', function (done) {\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                var t1 = time.t;\n\n                Sntp.time(function (err, time) {\n\n                    expect(err).to.not.exist;\n                    expect(time).to.exist;\n                    var t2 = time.t;\n                    expect(Math.abs(t1 - t2)).is.below(200);\n                    done();\n                });\n            });\n        });\n\n        it('resolves reference IP', function (done) {\n\n            Sntp.time({ host: 'ntp.exnet.com', resolveReference: true }, function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                expect(time.referenceHost).to.exist;\n                done();\n            });\n        });\n\n        it('times out on no response', function (done) {\n\n            Sntp.time({ port: 124, timeout: 100 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Timeout');\n                done();\n            });\n        });\n\n        it('errors on error event', { parallel: false }, function (done) {\n\n            var orig = Dgram.createSocket;\n            Dgram.createSocket = function (type) {\n\n                Dgram.createSocket = orig;\n                var socket = Dgram.createSocket(type);\n                setImmediate(function () { socket.emit('error', new Error('Fake')) });\n                return socket;\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Fake');\n                done();\n            });\n        });\n\n        it('errors on incorrect sent size', { parallel: false }, function (done) {\n\n            var orig = Dgram.Socket.prototype.send;\n            Dgram.Socket.prototype.send = function (buf, offset, length, port, address, callback) {\n\n                Dgram.Socket.prototype.send = orig;\n                return callback(null, 40);\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Could not send entire message');\n                done();\n            });\n        });\n\n        it('times out on invalid host', function (done) {\n\n            Sntp.time({ host: 'error', timeout: 10000 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.contain('getaddrinfo');\n                done();\n            });\n        });\n\n        it('fails on bad response buffer size', function (done) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n                var message = new Buffer(10);\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        var messup = function (bytes) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n\n                var message = new Buffer([\n                    0x24, 0x01, 0x00, 0xe3,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x41, 0x43, 0x54, 0x53,\n                    0xd4, 0xa8, 0x2d, 0xc7,\n                    0x1c, 0x5d, 0x49, 0x1b,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x67, 0xef, 0x9d, 0xb2,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xed, 0xb5, 0xfb,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xee, 0x6c, 0xc5\n                ]);\n\n                for (var i = 0, il = bytes.length; i < il; ++i) {\n                    message[bytes[i][0]] = bytes[i][1];\n                }\n\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n        };\n\n        it('fails on bad version', function (done) {\n\n            messup([[0, (0 << 6) + (3 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.version).to.equal(3);\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originateTimestamp', function (done) {\n\n            messup([[24, 0x83], [25, 0xaa], [26, 0x7e], [27, 0x80], [28, 0], [29, 0], [30, 0], [31, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad receiveTimestamp', function (done) {\n\n            messup([[32, 0x83], [33, 0xaa], [34, 0x7e], [35, 0x80], [36, 0], [37, 0], [38, 0], [39, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originate timestamp and alarm li', function (done) {\n\n            messup([[0, (3 << 6) + (4 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Wrong originate timestamp');\n                expect(time.leapIndicator).to.equal('alarm');\n                done();\n            });\n        });\n\n        it('returns time with death stratum and last61 li', function (done) {\n\n            messup([[0, (1 << 6) + (4 << 3) + (4 << 0)], [1, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('death');\n                expect(time.leapIndicator).to.equal('last-minute-61');\n                done();\n            });\n        });\n\n        it('returns time with reserved stratum and last59 li', function (done) {\n\n            messup([[0, (2 << 6) + (4 << 3) + (4 << 0)], [1, 0x1f]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('reserved');\n                expect(time.leapIndicator).to.equal('last-minute-59');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-active)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (1 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-active');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-passive)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (2 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-passive');\n                done();\n            });\n        });\n\n        it('fails on bad mode (client)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (3 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('client');\n                done();\n            });\n        });\n\n        it('fails on bad mode (broadcast)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (5 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('broadcast');\n                done();\n            });\n        });\n\n        it('fails on bad mode (reserved)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (6 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('reserved');\n                done();\n            });\n        });\n    });\n\n    describe('#offset', function () {\n\n        it('gets the current offset', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                done();\n            });\n        });\n\n        it('gets the current offset from cache', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({}, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ host: 'nist1-sj.ustiming.org' }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ port: 123 }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('fails getting the current offset on invalid server', function (done) {\n\n            Sntp.offset({ host: 'error' }, function (err, offset) {\n\n                expect(err).to.exist;\n                expect(offset).to.equal(0);\n                done();\n            });\n        });\n    });\n\n    describe('#now', function () {\n\n        it('starts auto-sync, gets now, then stops', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start(function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                Sntp.stop();\n\n                done();\n            });\n        });\n\n        it('starts twice', function (done) {\n\n            Sntp.start(function () {\n\n                Sntp.start(function () {\n\n                    var now = Sntp.now();\n                    expect(now).to.not.equal(Date.now());\n                    Sntp.stop();\n\n                    done();\n                });\n            });\n        });\n\n        it('starts auto-sync, gets now, waits, gets again after timeout', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start({ clockSyncRefresh: 100 }, function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                expect(now).to.equal(Sntp.now());\n\n                setTimeout(function () {\n\n                    expect(Sntp.now()).to.not.equal(now);\n                    Sntp.stop();\n                    done();\n                }, 110);\n            });\n        });\n    });\n});\n\n"]}