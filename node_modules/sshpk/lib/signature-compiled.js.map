{"version":3,"sources":["signature.js"],"names":[],"mappings":"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","file":"signature-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Signature;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar asn1 = require('asn1');\nvar SSHBuffer = require('./ssh-buffer');\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar SignatureParseError = errs.SignatureParseError;\n\nfunction Signature(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.hashAlgorithm = opts.hashAlgo;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n}\n\nSignature.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'asn1';\n\tassert.string(format, 'format');\n\n\tvar buf;\n\n\tswitch (this.type) {\n\tcase 'rsa':\n\tcase 'ed25519':\n\t\tif (format === 'ssh') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString('ssh-' + this.type);\n\t\t\tbuf.writePart(this.part.sig);\n\t\t\treturn (buf.toBuffer());\n\t\t} else {\n\t\t\treturn (this.part.sig.data);\n\t\t}\n\n\tcase 'dsa':\n\tcase 'ecdsa':\n\t\tvar r, s;\n\t\tif (format === 'asn1') {\n\t\t\tvar der = new asn1.BerWriter();\n\t\t\tder.startSequence();\n\t\t\tr = utils.mpNormalize(this.part.r.data);\n\t\t\ts = utils.mpNormalize(this.part.s.data);\n\t\t\tder.writeBuffer(r, asn1.Ber.Integer);\n\t\t\tder.writeBuffer(s, asn1.Ber.Integer);\n\t\t\tder.endSequence();\n\t\t\treturn (der.buffer);\n\t\t} else if (format === 'ssh' && this.type === 'dsa') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString('ssh-dss');\n\t\t\tr = this.part.r.data;\n\t\t\tif (r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\ts = this.part.s.data;\n\t\t\tbuf.writeBuffer(Buffer.concat([r, s]));\n\t\t\treturn (buf.toBuffer());\n\t\t} else if (format === 'ssh' && this.type === 'ecdsa') {\n\t\t\tvar inner = new SSHBuffer({});\n\t\t\tr = this.part.r;\n\t\t\tif (r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\tinner.writePart(r);\n\t\t\tinner.writePart(this.part.s);\n\n\t\t\tbuf = new SSHBuffer({});\n\t\t\t/* XXX: find a more proper way to do this? */\n\t\t\tvar curve;\n\t\t\tvar sz = this.part.r.data.length * 8;\n\t\t\tif (sz === 256)\n\t\t\t\tcurve = 'nistp256';\n\t\t\telse if (sz === 384)\n\t\t\t\tcurve = 'nistp384';\n\t\t\telse if (sz === 528)\n\t\t\t\tcurve = 'nistp521';\n\t\t\tbuf.writeString('ecdsa-sha2-' + curve);\n\t\t\tbuf.writeBuffer(inner.toBuffer());\n\t\t\treturn (buf.toBuffer());\n\t\t}\n\t\tthrow (new Error('Invalid signature format'));\n\tdefault:\n\t\tthrow (new Error('Invalid signature data'));\n\t}\n};\n\nSignature.prototype.toString = function (format) {\n\tassert.optionalString(format, 'format');\n\treturn (this.toBuffer(format).toString('base64'));\n};\n\nSignature.parse = function (data, type, format) {\n\tif (typeof (data) === 'string')\n\t\tdata = new Buffer(data, 'base64');\n\tassert.buffer(data, 'data');\n\tassert.string(format, 'format');\n\tassert.string(type, 'type');\n\n\tvar opts = {};\n\topts.type = type.toLowerCase();\n\topts.parts = [];\n\n\ttry {\n\t\tassert.ok(data.length > 0, 'signature must not be empty');\n\t\tswitch (opts.type) {\n\t\tcase 'rsa':\n\t\t\treturn (parseOneNum(data, type, format, opts,\n\t\t\t    'ssh-rsa'));\n\t\tcase 'ed25519':\n\t\t\treturn (parseOneNum(data, type, format, opts,\n\t\t\t    'ssh-ed25519'));\n\n\t\tcase 'dsa':\n\t\tcase 'ecdsa':\n\t\t\tif (format === 'asn1')\n\t\t\t\treturn (parseDSAasn1(data, type, format, opts));\n\t\t\telse if (opts.type === 'dsa')\n\t\t\t\treturn (parseDSA(data, type, format, opts));\n\t\t\telse\n\t\t\t\treturn (parseECDSA(data, type, format, opts));\n\n\t\tdefault:\n\t\t\tthrow (new InvalidAlgorithmError(type));\n\t\t}\n\n\t} catch (e) {\n\t\tif (e instanceof InvalidAlgorithmError)\n\t\t\tthrow (e);\n\t\tthrow (new SignatureParseError(type, format, e));\n\t}\n};\n\nfunction parseOneNum(data, type, format, opts, headType) {\n\tif (format === 'ssh') {\n\t\ttry {\n\t\t\tvar buf = new SSHBuffer({buffer: data});\n\t\t\tvar head = buf.readString();\n\t\t} catch (e) {\n\t\t\t/* fall through */\n\t\t}\n\t\tif (head === headType) {\n\t\t\tvar sig = buf.readPart();\n\t\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\t\tsig.name = 'sig';\n\t\t\topts.parts.push(sig);\n\t\t\treturn (new Signature(opts));\n\t\t}\n\t}\n\topts.parts.push({name: 'sig', data: data});\n\treturn (new Signature(opts));\n}\n\nfunction parseDSAasn1(data, type, format, opts) {\n\tvar der = new asn1.BerReader(data);\n\tder.readSequence();\n\tvar r = der.readString(asn1.Ber.Integer, true);\n\tvar s = der.readString(asn1.Ber.Integer, true);\n\n\topts.parts.push({name: 'r', data: utils.mpNormalize(r)});\n\topts.parts.push({name: 's', data: utils.mpNormalize(s)});\n\n\treturn (new Signature(opts));\n}\n\nfunction parseDSA(data, type, format, opts) {\n\tif (data.length != 40) {\n\t\tvar buf = new SSHBuffer({buffer: data});\n\t\tvar d = buf.readBuffer();\n\t\tif (d.toString('ascii') === 'ssh-dss')\n\t\t\td = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\tassert.strictEqual(d.length, 40, 'invalid inner length');\n\t\tdata = d;\n\t}\n\topts.parts.push({name: 'r', data: data.slice(0, 20)});\n\topts.parts.push({name: 's', data: data.slice(20, 40)});\n\treturn (new Signature(opts));\n}\n\nfunction parseECDSA(data, type, format, opts) {\n\tvar buf = new SSHBuffer({buffer: data});\n\n\tvar r, s;\n\tvar inner = buf.readBuffer();\n\tif (inner.toString('ascii').match(/^ecdsa-/)) {\n\t\tinner = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes on outer');\n\t\tbuf = new SSHBuffer({buffer: inner});\n\t\tr = buf.readPart();\n\t} else {\n\t\tr = {data: inner};\n\t}\n\n\ts = buf.readPart();\n\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\n\tr.name = 'r';\n\ts.name = 's';\n\n\topts.parts.push(r);\n\topts.parts.push(s);\n\treturn (new Signature(opts));\n}\n\nSignature.isSignature = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Signature, ver));\n};\n\n/*\n * API versions for Signature:\n * [1,0] -- initial ver\n * [2,0] -- support for rsa in full ssh format, compat with sshpk-agent\n *          hashAlgorithm property\n * [2,1] -- first tagged version\n */\nSignature.prototype._sshpkApiVersion = [2, 1];\n\nSignature._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tif (obj.hasOwnProperty('hashAlgorithm'))\n\t\treturn ([2, 0]);\n\treturn ([1, 0]);\n};\n"]}