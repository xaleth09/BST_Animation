{"version":3,"sources":["auto.js"],"names":[],"mappings":"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","file":"auto-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\nvar ssh = require('./ssh');\nvar rfc4253 = require('./rfc4253');\n\nfunction read(buf, options) {\n\tif (typeof (buf) === 'string') {\n\t\tif (buf.trim().match(/^[-]+[ ]*BEGIN/))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (buf.match(/^\\s*ssh-[a-z]/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^\\s*ecdsa-/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tbuf = new Buffer(buf, 'binary');\n\t} else {\n\t\tassert.buffer(buf);\n\t\tif (findPEMHeader(buf))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (findSSHHeader(buf))\n\t\t\treturn (ssh.read(buf, options));\n\t}\n\tif (buf.readUInt32BE(0) < buf.length)\n\t\treturn (rfc4253.read(buf, options));\n\tthrow (new Error('Failed to auto-detect format of key'));\n}\n\nfunction findSSHHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 4 <= buf.length &&\n\t    buf.slice(offset, offset + 4).toString('ascii') === 'ssh-')\n\t\treturn (true);\n\tif (offset + 6 <= buf.length &&\n\t    buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findPEMHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10))\n\t\t++offset;\n\tif (buf[offset] !== 45)\n\t\treturn (false);\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 45))\n\t\t++offset;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32))\n\t\t++offset;\n\tif (offset + 5 > buf.length ||\n\t    buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN')\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction write(key, options) {\n\tthrow (new Error('\"auto\" format cannot be used for writing'));\n}\n"]}